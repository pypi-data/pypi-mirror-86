(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{446:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"编写插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写插件"}},[t._v("#")]),t._v(" 编写插件")]),t._v(" "),a("p",[t._v("本章将以一个天气查询插件为例，教学如何编写自己的命令。")]),t._v(" "),a("h2",{attrs:{id:"加载插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载插件"}},[t._v("#")]),t._v(" 加载插件")]),t._v(" "),a("p",[t._v("在 "),a("a",{attrs:{href:"creating-a-project"}},[t._v("创建一个完整的项目")]),t._v(" 一章节中，我们已经创建了插件目录 "),a("code",[t._v("awesome_bot/plugins")]),t._v("，现在我们在机器人入口文件中加载它。当然，你也可以单独加载一个插件。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("加载插件目录时，目录下以 "),a("code",[t._v("_")]),t._v(" 下划线开头的插件将不会被加载！")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("bot.py")]),t._v(" 文件中添加以下行：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" nonebot\n\nnonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载单独的一个插件，参数为合法的python包名")]),t._v("\nnonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_plugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nonebot.plugins.base"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载插件目录，该目录下为各插件，以下划线开头的插件将不会被加载")]),t._v("\nnonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"awesome_bot/plugins"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_asgi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("尝试运行 "),a("code",[t._v("nb run")]),t._v(" 或者 "),a("code",[t._v("python bot.py")]),t._v("，可以看到日志输出了类似如下内容：")]),t._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('09-19 21:51:59 [INFO] nonebot | Succeeded to import "nonebot.plugins.base"\n09-19 21:51:59 [INFO] nonebot | Succeeded to import "plugin_in_folder"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"创建插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建插件"}},[t._v("#")]),t._v(" 创建插件")]),t._v(" "),a("p",[t._v("现在我们已经有了一个空的插件目录，我们可以开始创建插件了！插件有两种形式")]),t._v(" "),a("h3",{attrs:{id:"单文件形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单文件形式"}},[t._v("#")]),t._v(" 单文件形式")]),t._v(" "),a("p",[t._v("在插件目录下创建名为 "),a("code",[t._v("weather.py")]),t._v(" 的 Python 文件，暂时留空，此时目录结构如下：")]),t._v(" "),a("pre",{staticClass:"vue-container"},[a("code",[a("p",[t._v("AweSome-Bot\n├── awesome_bot\n│   └── plugins\n│      └── "),a("code",[t._v("weather.py")]),t._v("\n├── .env\n├── .env.dev\n├── .env.prod\n├── .gitignore\n├── bot.py\n├── docker-compose.yml\n├── Dockerfile\n├── pyproject.toml\n└── README.md")]),t._v("\n")])]),t._v(" "),a("p",[t._v("这个时候它已经可以被称为一个插件了，尽管它还什么都没做。")]),t._v(" "),a("h3",{attrs:{id:"包形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包形式"}},[t._v("#")]),t._v(" 包形式")]),t._v(" "),a("p",[t._v("在插件目录下创建文件夹 "),a("code",[t._v("weather")]),t._v("，并在该文件夹下创建文件 "),a("code",[t._v("__init__.py")]),t._v("，此时目录结构如下：")]),t._v(" "),a("pre",{staticClass:"vue-container"},[a("code",[a("p",[t._v("AweSome-Bot\n├── awesome_bot\n│   └── plugins\n│      └── "),a("code",[t._v("weather")]),t._v("\n│         └── "),a("code",[t._v("__init__.py")]),t._v("\n├── .env\n├── .env.dev\n├── .env.prod\n├── .gitignore\n├── bot.py\n├── docker-compose.yml\n├── Dockerfile\n├── pyproject.toml\n└── README.md")]),t._v("\n")])]),t._v(" "),a("p",[t._v("这个时候 "),a("code",[t._v("weather")]),t._v(" 就是一个合法的 Python 包了，同时也是合法的 NoneBot 插件，插件内容可以在 "),a("code",[t._v("__init__.py")]),t._v(" 中编写。")]),t._v(" "),a("h2",{attrs:{id:"编写真正的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写真正的内容"}},[t._v("#")]),t._v(" 编写真正的内容")]),t._v(" "),a("p",[t._v("好了，现在插件已经可以正确加载，我们可以开始编写命令的实际代码了。在 "),a("code",[t._v("weather.py")]),t._v(" 中添加如下代码：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" on_command\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rule "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" to_me\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("adapters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cqhttp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Event\n\nweather "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" on_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"天气"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("to_me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_first_receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次发送命令时跟随的参数，例：/天气 上海，则args为上海")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果用户发送了参数则直接赋值")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("got")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你想查询哪个城市的天气呢？"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_city")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    city "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上海"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你想查询的城市暂不支持，请重新输入！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    city_weather "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" get_weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finish"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("city_weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_weather")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('的天气是..."')])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("p",[t._v("为了简单起见，我们在这里的例子中没有接入真实的天气数据，但要接入也非常简单，你可以使用中国天气网、和风天气等网站提供的 API。")]),t._v(" "),a("p",[t._v("下面我们来说明这段代码是如何工作的。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("从这里开始，你需要对 Python 的 asyncio 编程有所了解，因为 NoneBot 是完全基于 asyncio 的，具体可以参考 "),a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1016959663602400/1017959540289152",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的 Python 教程"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"注册一个-事件响应器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册一个-事件响应器"}},[t._v("#")]),t._v(" 注册一个 "),a("router-link",{attrs:{to:"./../api/matcher.html"}},[t._v("事件响应器")])],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" on_command\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rule "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" to_me\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("permission "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Permission\n\nweather "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" on_command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"天气"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("to_me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" permission"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Permission"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("在上方代码中，我们注册了一个事件响应器 "),a("code",[t._v("Matcher")]),t._v("，它由几个部分组成：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("on_command")]),t._v(" 注册一个消息类型的命令处理器")]),t._v(" "),a("li",[a("code",[t._v('"天气"')]),t._v(" 指定 command 参数 - 命令名")]),t._v(" "),a("li",[a("code",[t._v("rule")]),t._v(" 补充事件响应器的匹配规则")]),t._v(" "),a("li",[a("code",[t._v("priority")]),t._v(" 事件响应器优先级")]),t._v(" "),a("li",[a("code",[t._v("block")]),t._v(" 是否阻止事件传递")])]),t._v(" "),a("p",[t._v("其他详细配置可以参考 API 文档，下面我们详细说明各个部分：")]),t._v(" "),a("h4",{attrs:{id:"事件响应器类型-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件响应器类型-type"}},[t._v("#")]),t._v(" 事件响应器类型 type")]),t._v(" "),a("p",[t._v("事件响应器类型其实就是对应 "),a("code",[t._v("Event.type")]),t._v(" ，NoneBot 提供了一个基础类型事件响应器 "),a("code",[t._v("on()")]),t._v(" 以及一些内置的事件响应器。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('on("事件类型")')]),t._v(": 基础事件响应器，第一个参数为事件类型，空字符串表示不限")]),t._v(" "),a("li",[a("code",[t._v("on_metaevent()")]),t._v(" ~ "),a("code",[t._v('on("meta_event")')]),t._v(": 元事件响应器")]),t._v(" "),a("li",[a("code",[t._v("on_message()")]),t._v(" ~ "),a("code",[t._v('on("message")')]),t._v(": 消息事件响应器")]),t._v(" "),a("li",[a("code",[t._v("on_request()")]),t._v(" ~ "),a("code",[t._v('on("request")')]),t._v(": 请求事件响应器")]),t._v(" "),a("li",[a("code",[t._v("on_notice()")]),t._v(" ~ "),a("code",[t._v('on("notice")')]),t._v(": 通知事件响应器")]),t._v(" "),a("li",[a("code",[t._v("on_startswith(str)")]),t._v(" ~ "),a("code",[t._v('on("message", startswith(str))')]),t._v(": 消息开头匹配处理器")]),t._v(" "),a("li",[a("code",[t._v("on_endswith(str)")]),t._v(" ~ "),a("code",[t._v('on("message", endswith(str))')]),t._v(": 消息结尾匹配处理器")]),t._v(" "),a("li",[a("code",[t._v("on_command(str|tuple)")]),t._v(" ~ "),a("code",[t._v('on("message", command(str|tuple))')]),t._v(": 命令处理器")]),t._v(" "),a("li",[a("code",[t._v("on_regex(pattern_str)")]),t._v(" ~ "),a("code",[t._v('on("message", regex(pattern_str))')]),t._v(": 正则匹配处理器")])]),t._v(" "),a("h4",{attrs:{id:"匹配规则-rule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配规则-rule"}},[t._v("#")]),t._v(" 匹配规则 rule")]),t._v(" "),a("p",[t._v("事件响应器的匹配规则即 "),a("code",[t._v("Rule")]),t._v("，由非负个 "),a("code",[t._v("RuleChecker")]),t._v(" 组成，当所有 "),a("code",[t._v("RuleChecker")]),t._v(" 返回 "),a("code",[t._v("True")]),t._v(" 时匹配成功。这些 "),a("code",[t._v("RuleChecker")]),t._v(" 的形式如下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("code",[t._v("Rule")]),t._v(" 和 "),a("code",[t._v("RuleChecker")]),t._v(" 之间可以使用 "),a("code",[t._v("与 &")]),t._v(" 互相组合：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" nonebot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rule "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Rule\n\nRule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("async_checker1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" sync_checker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" async_checker2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[a("code",[t._v("Rule(*checkers)")]),t._v(" 只接受 async function，或使用 "),a("code",[t._v("nonebot.utils.run_sync")]),t._v(" 自行包裹 sync function。在使用 "),a("code",[t._v("与 &")]),t._v(" 时，NoneBot 会自动包裹 sync function")])]),t._v(" "),a("h4",{attrs:{id:"优先级-priority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级-priority"}},[t._v("#")]),t._v(" 优先级 priority")]),t._v(" "),a("p",[t._v("事件响应器的优先级代表事件响应器的执行顺序，同一优先级的事件响应器会 "),a("strong",[t._v("同时执行！")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("nonebot-test")]),t._v(" 可以看到当前所有事件响应器的执行流程，有助理解事件响应流程！")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nonebot2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("h4",{attrs:{id:"阻断-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻断-block"}},[t._v("#")]),t._v(" 阻断 block")]),t._v(" "),a("p",[t._v("当有任意事件响应器发出了阻止事件传递信号时，该事件将不再会传递给下一优先级，直接结束处理。")]),t._v(" "),a("p",[t._v("NoneBot 内置的事件响应器中，所有 "),a("code",[t._v("message")]),t._v(" 类的事件响应器默认会阻断事件传递，其他则不会。")]),t._v(" "),a("h3",{attrs:{id:"编写事件处理函数-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写事件处理函数-handler"}},[t._v("#")]),t._v(" 编写事件处理函数 "),a("router-link",{attrs:{to:"./../api/typing.html#handler"}},[t._v("Handler")])],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_first_receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次发送命令时跟随的参数，例：/天气 上海，则args为上海")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果用户发送了参数则直接赋值")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("got")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你想查询哪个城市的天气呢？"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle_city")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    city "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上海"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你想查询的城市暂不支持，请重新输入！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    city_weather "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" get_weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finish"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("city_weather"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("在上面的代码中，我们给 "),a("code",[t._v("weather")]),t._v(" 事件响应器添加了两个事件处理函数："),a("code",[t._v("handle_first_receive")]),t._v(", "),a("code",[t._v("handle_city")])]),t._v(" "),a("p",[t._v("其中有几个要点，我们一一解释：")]),t._v(" "),a("h4",{attrs:{id:"添加一个事件处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加一个事件处理函数"}},[t._v("#")]),t._v(" 添加一个事件处理函数")]),t._v(" "),a("p",[t._v("在事件响应器响应事件时，事件处理函数会依次顺序执行，也就是说，与添加顺序一致。")]),t._v(" "),a("p",[t._v("我们可以使用 "),a("code",[t._v("@matcher.handle()")]),t._v(" 装饰器来简单地为该事件响应器添加一个处理函数。")]),t._v(" "),a("p",[t._v("同时，NoneBot 内置了几种添加事件处理函数方式以方便处理：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@matcher.receive()")]),t._v(": 指示 NoneBot 接收一条新的用户消息以继续执行后续处理函数。")]),t._v(" "),a("li",[a("code",[t._v('@matcher.got(key, [prompt="请输入key"], [args_parser=function])')]),t._v(": 指示 NoneBot 当 "),a("code",[t._v("state")]),t._v(" 中不存在 "),a("code",[t._v("key")]),t._v(" 时向用户发送 "),a("code",[t._v("prompt")]),t._v(" 等待用户回复并赋值给 "),a("code",[t._v("state[key]")])])]),t._v(" "),a("p",[t._v("这些装饰器可以套娃使用！例如：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("got")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("got")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"事件处理函数参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件处理函数参数"}},[t._v("#")]),t._v(" 事件处理函数参数")]),t._v(" "),a("p",[t._v("事件处理函数类型为 "),a("code",[t._v("Callable[[Bot, Event, dict], Union[Awaitable[None], Awaitable[NoReturn]]]")]),t._v(" 。")]),t._v(" "),a("p",[t._v("参数分别为：")]),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"./../api/typing.html#bot"}},[t._v("nonebot.typing.Bot")]),t._v(": 即事件上报连接对应的 Bot 对象，为 BaseBot 的子类。特别注意，此处的类型注释可以替换为指定的 Bot 类型，例如："),a("code",[t._v("nonebot.adapters.cqhttp.Bot")]),t._v("，只有在上报事件的 Bot 类型与类型注释相符时才会执行该处理函数！可用于多平台进行不同的处理。")],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"./../api/typing.html#event"}},[t._v("nonebot.typing.Event")]),t._v(": 即上报事件对象，可以获取到上报的所有信息。")],1),t._v(" "),a("li",[a("code",[t._v("state")]),t._v(": 状态字典，可以存储任意的信息")])]),t._v(" "),a("h4",{attrs:{id:"处理事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理事件"}},[t._v("#")]),t._v(" 处理事件")]),t._v(" "),a("p",[t._v("在事件处理函数中，我们只需要对 "),a("code",[t._v("event")]),t._v(" 做出相应的处理，存入状态字典 "),a("code",[t._v("state")]),t._v(" 中，或者向用户发送消息、调用某个机器人 API 等等。")]),t._v(" "),a("p",[t._v("在 NoneBot 中，提供了几种特殊的处理函数：")]),t._v(" "),a("h5",{attrs:{id:"matcher-args-parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcher-args-parser"}},[t._v("#")]),t._v(" "),a("code",[t._v("@matcher.args_parser")])]),t._v(" "),a("p",[t._v("这是一个装饰器，装饰一个函数来使它成为参数的默认解析函数，当使用 "),a("code",[t._v("matcher.got(xxx, [args_parser])")]),t._v(" 获取到一条消息时，会运行 "),a("code",[t._v("matcher.got")]),t._v(" 的 "),a("code",[t._v("args_parser")]),t._v(" ，如果不存在则运行 "),a("code",[t._v("@matcher.args_parser")]),t._v("。")]),t._v(" "),a("h5",{attrs:{id:"matcher-pause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcher-pause"}},[t._v("#")]),t._v(" "),a("code",[t._v("matcher.pause")])]),t._v(" "),a("p",[t._v("这个函数用于结束当前事件处理函数，强制接收一条新的消息再运行"),a("strong",[t._v("下一个消息处理函数")]),t._v("。")]),t._v(" "),a("h5",{attrs:{id:"matcher-reject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcher-reject"}},[t._v("#")]),t._v(" "),a("code",[t._v("matcher.reject")])]),t._v(" "),a("p",[t._v("这个函数用于结束当前事件处理函数，强制接收一条新的消息再"),a("strong",[t._v("再次运行当前消息处理函数")]),t._v("。")]),t._v(" "),a("h5",{attrs:{id:"matcher-finish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#matcher-finish"}},[t._v("#")]),t._v(" "),a("code",[t._v("matcher.finish")])]),t._v(" "),a("p",[t._v("这个函数用于直接结束当前事件处理。")]),t._v(" "),a("p",[t._v("以上三个函数都拥有一个参数 "),a("code",[t._v("prompt")]),t._v("，用于向用户发送一条消息。")]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("至此，相信你已经能够写出一个基础的插件了，更多的用法将会在 进阶 部分进行介绍，这里给出几个小提示：")]),t._v(" "),a("ul",[a("li",[t._v("请千万注意事件处理器的优先级设定")]),t._v(" "),a("li",[t._v("在匹配规则中请勿使用耗时极长的函数")]),t._v(" "),a("li",[t._v("同一个用户可以跨群（私聊）继续他的事件处理（除非做出权限限制，将在后续介绍）")])])])}),[],!1,null,null,null);s.default=e.exports}}]);