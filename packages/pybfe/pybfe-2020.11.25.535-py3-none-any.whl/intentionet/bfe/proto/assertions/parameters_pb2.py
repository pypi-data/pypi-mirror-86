# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/parameters.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from intentionet.bfe.proto.datamodel import range_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_range__pb2
from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2
from intentionet.bfe.proto.datamodel.aws import aws_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='intentionet/bfe/proto/assertions/parameters.proto',
  package='com.intentionet.bfe.assertions',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n1intentionet/bfe/proto/assertions/parameters.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x1bgoogle/protobuf/empty.proto\x1a+intentionet/bfe/proto/datamodel/range.proto\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\x1a\x38intentionet/bfe/proto/datamodel/aws/aws_primitives.proto\"\xb6\x01\n\x10\x44\x65viceFilterExpr\x12J\n\x08hostname\x18\x03 \x01(\x0b\x32\x38.com.intentionet.bfe.assertions.DeviceFilterHostnameExpr\x12J\n\x06vendor\x18\x04 \x01(\x0b\x32:.com.intentionet.bfe.assertions.DeviceFilterVendorListExprJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03\"3\n\x18\x44\x65viceFilterHostnameExpr\x12\x0f\n\x05regex\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"9\n\rInterfaceExpr\x12\x10\n\x08hostname\x18\x01 \x01(\t\x12\x16\n\x0einterface_name\x18\x02 \x01(\t\"^\n\x0f\x46ilterMatchExpr\x12\x43\n\x04name\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.FilterNameMatchExprH\x00\x42\x06\n\x04\x65xpr\".\n\x13\x46ilterNameMatchExpr\x12\x0f\n\x05regex\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xc1\x01\n\x1b\x44\x65viceFilterCiscoVendorExpr\x12%\n\x03ios\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12&\n\x04nxos\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12$\n\x02xr\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12%\n\x03\x61sa\x18\x04 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x42\x06\n\x04type\"\xc5\x01\n\x16\x44\x65viceFilterVendorExpr\x12L\n\x05\x63isco\x18\x01 \x01(\x0b\x32;.com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExprH\x00\x12(\n\x06\x61rista\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12)\n\x07juniper\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x42\x08\n\x06vendor\"a\n\x1a\x44\x65viceFilterVendorListExpr\x12\x43\n\x03\x61ny\x18\x01 \x03(\x0b\x32\x36.com.intentionet.bfe.assertions.DeviceFilterVendorExpr\"b\n\x19\x46irewallLocationMatchExpr\x12=\n\x04zone\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.ZoneMatchExprH\x00\x42\x06\n\x04\x65xpr\"\'\n\rZoneMatchExpr\x12\x0e\n\x04name\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\x90\x01\n\x14\x46ilterBehaviorExpect\x12K\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32;.com.intentionet.bfe.assertions.FilterBehaviorExpect.Action\"+\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\"\x94\x01\n\x16\x46irewallBehaviorExpect\x12M\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32=.com.intentionet.bfe.assertions.FirewallBehaviorExpect.Action\"+\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\"\xec\x03\n\x0e\x46lowFilterExpr\x12\x39\n\x07include\x18\x07 \x03(\x0b\x32(.com.intentionet.bfe.assertions.FlowExpr\x12\x39\n\x07\x65xclude\x18\x08 \x03(\x0b\x32(.com.intentionet.bfe.assertions.FlowExpr\x12@\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.FlowFilterAndExprH\x00\x12>\n\x02or\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.FlowFilterOrExprH\x00\x12=\n\x03not\x18\x03 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprH\x00\x12\x45\n\x06src_ip\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00\x12\x45\n\x06\x64st_ip\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00\x12\r\n\x03\x61pp\x18\x06 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xa4\x01\n\x08\x46lowExpr\x12\x44\n\x07src_ips\x18\x01 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExpr\x12\x44\n\x07\x64st_ips\x18\x02 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExpr\x12\x0c\n\x04\x61pps\x18\x03 \x03(\t\"I\n\x13IpAddressFilterExpr\x12\x15\n\x0b\x65xact_match\x18\x01 \x01(\tH\x00\x12\x13\n\tin_prefix\x18\x02 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"U\n\x11\x46lowFilterAndExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExpr\"T\n\x10\x46lowFilterOrExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExpr\"\xb0\x02\n\x0eMatchRouteExpr\x12@\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchRouteAndExprH\x00\x12>\n\x02or\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchRouteOrExprH\x00\x12H\n\x07network\x18\x03 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchRouteNetworkExprH\x00\x12J\n\x08protocol\x18\x04 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.MatchRouteProtocolExprH\x00\x42\x06\n\x04\x65xpr\"U\n\x11MatchRouteAndExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExpr\"T\n\x10MatchRouteOrExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExpr\"0\n\x15MatchRouteNetworkExpr\x12\x0f\n\x05\x65xact\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xe5\x03\n\x16MatchRouteProtocolExpr\x12+\n\tconnected\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12\'\n\x05local\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12(\n\x06static\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12K\n\x04ospf\x18\x04 \x01(\x0e\x32;.com.intentionet.bfe.assertions.MatchRouteProtocolExpr.OspfH\x00\x12I\n\x03\x62gp\x18\x05 \x01(\x0e\x32:.com.intentionet.bfe.assertions.MatchRouteProtocolExpr.BgpH\x00\"\x7f\n\x04Ospf\x12\x0c\n\x08OSPF_ANY\x10\x00\x12\t\n\x05INTRA\x10\x01\x12\t\n\x05INTER\x10\x02\x12\t\n\x05\x45XT_1\x10\x03\x12\t\n\x05\x45XT_2\x10\x04\x12\x0b\n\x07\x45XT_ANY\x10\x05\x12\x10\n\x0c\x45XT_NSSA_ANY\x10\x06\x12\x0e\n\nEXT_NSSA_1\x10\x07\x12\x0e\n\nEXT_NSSA_2\x10\x08\"&\n\x03\x42gp\x12\x0b\n\x07\x42GP_ANY\x10\x00\x12\x08\n\x04IBGP\x10\x01\x12\x08\n\x04\x45\x42GP\x10\x02\x42\n\n\x08protocol\"\xeb\x02\n\x0cMatchServers\x12?\n\x03ntp\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12?\n\x03\x64ns\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x45\n\tsnmp_trap\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x43\n\x07logging\x18\x04 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x42\n\x06tacacs\x18\x05 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x42\t\n\x07servers\"]\n\x10MatchServersExpr\x12\x41\n\x03set\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchStringSetExprH\x00\x42\x06\n\x04\x65xpr\"\xa9\x01\n\x13SecurityGroupFilter\x12H\n\x07include\x18\x01 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExpr\x12H\n\x07\x65xclude\x18\x02 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExpr\"\x98\x02\n\x17SecurityGroupFilterExpr\x12\x44\n\x07\x61\x63\x63ount\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExpr\x12\x42\n\x06region\x18\x06 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExpr\x12I\n\x04name\x18\x07 \x01(\x0b\x32;.com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr\x12\x10\n\x08group_id\x18\x08 \x03(\tJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05\"6\n\x1bSecurityGroupFilterNameExpr\x12\x0f\n\x05regex\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xf9\x02\n\x17MatchSecurityGroupRules\x12\x44\n\tip_prefix\x18\x04 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIpPrefixExpr\x12%\n\x03\x61ll\x18\x05 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12I\n\x03tcp\x18\x06 \x01(\x0b\x32:.com.intentionet.bfe.assertions.MatchProtocolWithPortsExprH\x00\x12I\n\x03udp\x18\x07 \x01(\x0b\x32:.com.intentionet.bfe.assertions.MatchProtocolWithPortsExprH\x00\x12=\n\x04icmp\x18\x08 \x01(\x0b\x32-.com.intentionet.bfe.assertions.MatchIcmpExprH\x00\x42\n\n\x08protocolJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04\"\xa3\x01\n\x11\x41wsInstanceFilter\x12\x46\n\x07include\x18\x01 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.AwsInstanceFilterExpr\x12\x46\n\x07\x65xclude\x18\x02 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.AwsInstanceFilterExpr\"\xb2\x02\n\x15\x41wsInstanceFilterExpr\x12\x44\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExpr\x12\x42\n\x06region\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExpr\x12<\n\x03vpc\x18\x03 \x01(\x0b\x32/.com.intentionet.bfe.assertions.AwsVpcMatchExpr\x12<\n\x03tag\x18\x04 \x01(\x0b\x32/.com.intentionet.bfe.assertions.AwsTagMatchExpr\x12\x13\n\x0binstance_id\x18\x05 \x03(\t\"\xbb\x01\n\x19\x41wsNetworkInterfaceFilter\x12N\n\x07include\x18\x01 \x03(\x0b\x32=.com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr\x12N\n\x07\x65xclude\x18\x02 \x03(\x0b\x32=.com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr\"\xb9\x01\n\x1d\x41wsNetworkInterfaceFilterExpr\x12\x44\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExpr\x12\x42\n\x06region\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExpr\x12\x0e\n\x06\x65ni_id\x18\x03 \x03(\t\"\xab\x01\n\x13\x41wsAccountMatchExpr\x12G\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchAwsAccountEqualsH\x00\x12\x43\n\x03\x61ny\x18\x02 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchAwsAccountAnyOfH\x00\x42\x06\n\x04\x65xpr\"#\n\x15MatchAwsAccountEquals\x12\n\n\x02id\x18\x01 \x01(\t\"Y\n\x14MatchAwsAccountAnyOf\x12\x41\n\x02of\x18\x01 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchAwsAccountEquals\"`\n\x12\x41wsRegionMatchExpr\x12\x42\n\x03\x61ny\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.MatchAwsRegionAnyOfH\x00\x42\x06\n\x04\x65xpr\"$\n\x14MatchAwsRegionEquals\x12\x0c\n\x04name\x18\x01 \x01(\t\"W\n\x13MatchAwsRegionAnyOf\x12@\n\x02of\x18\x01 \x03(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchAwsRegionEquals\"\x9f\x01\n\x0f\x41wsVpcMatchExpr\x12\x43\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchAwsVpcEqualsH\x00\x12?\n\x03\x61ny\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchAwsVpcAnyOfH\x00\x42\x06\n\x04\x65xpr\"\x1f\n\x11MatchAwsVpcEquals\x12\n\n\x02id\x18\x01 \x01(\t\"Q\n\x10MatchAwsVpcAnyOf\x12=\n\x02of\x18\x01 \x03(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchAwsVpcEquals\"Y\n\x0f\x41wsTagMatchExpr\x12>\n\x06\x65quals\x18\x01 \x01(\x0b\x32,.com.intentionet.bfe.proto.datamodel.aws.TagH\x00\x42\x06\n\x04\x65xpr\"^\n\x1aMatchProtocolWithPortsExpr\x12@\n\x05ports\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIntRangeExpr\"u\n\rMatchIcmpExpr\x12\x31\n\x04type\x18\x01 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpType\x12\x31\n\x04\x63ode\x18\x02 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpCode\"\xea\x01\n\x12MatchStringSetExpr\x12\x42\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x12\x43\n\x07has_any\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x12\x43\n\x07has_all\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x42\x06\n\x04\x65xpr\"1\n\x13MatchIpProtocolExpr\x12\x12\n\x08includes\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"V\n\x11MatchIntRangeExpr\x12\x39\n\nintersects\x18\x01 \x01(\x0b\x32#.com.intentionet.datamodel.IntRangeH\x00\x42\x06\n\x04\x65xpr\"_\n\x11MatchIpPrefixExpr\x12\x10\n\x06\x65quals\x18\x02 \x01(\tH\x00\x12\x12\n\x08\x63ontains\x18\x03 \x01(\tH\x00\x12\x16\n\x0c\x63ontained_by\x18\x04 \x01(\tH\x00\x42\x06\n\x04\x65xprJ\x04\x08\x01\x10\x02\"!\n\x10StringCollection\x12\r\n\x05items\x18\x01 \x03(\tb\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_range__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2.DESCRIPTOR,])



_FILTERBEHAVIOREXPECT_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='com.intentionet.bfe.assertions.FilterBehaviorExpect.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERMIT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENY', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1449,
  serialized_end=1492,
)
_sym_db.RegisterEnumDescriptor(_FILTERBEHAVIOREXPECT_ACTION)

_FIREWALLBEHAVIOREXPECT_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERMIT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENY', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1449,
  serialized_end=1492,
)
_sym_db.RegisterEnumDescriptor(_FIREWALLBEHAVIOREXPECT_ACTION)

_MATCHROUTEPROTOCOLEXPR_OSPF = _descriptor.EnumDescriptor(
  name='Ospf',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.Ospf',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OSPF_ANY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTRA', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTER', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_1', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_2', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_ANY', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_ANY', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_1', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_2', index=8, number=8,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3392,
  serialized_end=3519,
)
_sym_db.RegisterEnumDescriptor(_MATCHROUTEPROTOCOLEXPR_OSPF)

_MATCHROUTEPROTOCOLEXPR_BGP = _descriptor.EnumDescriptor(
  name='Bgp',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.Bgp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BGP_ANY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IBGP', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EBGP', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3521,
  serialized_end=3559,
)
_sym_db.RegisterEnumDescriptor(_MATCHROUTEPROTOCOLEXPR_BGP)


_DEVICEFILTEREXPR = _descriptor.Descriptor(
  name='DeviceFilterExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.hostname', index=0,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vendor', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.vendor', index=1,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=271,
  serialized_end=453,
)


_DEVICEFILTERHOSTNAMEEXPR = _descriptor.Descriptor(
  name='DeviceFilterHostnameExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex', full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr.regex', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=455,
  serialized_end=506,
)


_INTERFACEEXPR = _descriptor.Descriptor(
  name='InterfaceExpr',
  full_name='com.intentionet.bfe.assertions.InterfaceExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='com.intentionet.bfe.assertions.InterfaceExpr.hostname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interface_name', full_name='com.intentionet.bfe.assertions.InterfaceExpr.interface_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=508,
  serialized_end=565,
)


_FILTERMATCHEXPR = _descriptor.Descriptor(
  name='FilterMatchExpr',
  full_name='com.intentionet.bfe.assertions.FilterMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.FilterMatchExpr.name', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FilterMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=567,
  serialized_end=661,
)


_FILTERNAMEMATCHEXPR = _descriptor.Descriptor(
  name='FilterNameMatchExpr',
  full_name='com.intentionet.bfe.assertions.FilterNameMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex', full_name='com.intentionet.bfe.assertions.FilterNameMatchExpr.regex', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FilterNameMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=663,
  serialized_end=709,
)


_DEVICEFILTERCISCOVENDOREXPR = _descriptor.Descriptor(
  name='DeviceFilterCiscoVendorExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ios', full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr.ios', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nxos', full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr.nxos', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='xr', full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr.xr', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='asa', full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr.asa', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=712,
  serialized_end=905,
)


_DEVICEFILTERVENDOREXPR = _descriptor.Descriptor(
  name='DeviceFilterVendorExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterVendorExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cisco', full_name='com.intentionet.bfe.assertions.DeviceFilterVendorExpr.cisco', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='arista', full_name='com.intentionet.bfe.assertions.DeviceFilterVendorExpr.arista', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='juniper', full_name='com.intentionet.bfe.assertions.DeviceFilterVendorExpr.juniper', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='vendor', full_name='com.intentionet.bfe.assertions.DeviceFilterVendorExpr.vendor',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=908,
  serialized_end=1105,
)


_DEVICEFILTERVENDORLISTEXPR = _descriptor.Descriptor(
  name='DeviceFilterVendorListExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterVendorListExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='any', full_name='com.intentionet.bfe.assertions.DeviceFilterVendorListExpr.any', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1107,
  serialized_end=1204,
)


_FIREWALLLOCATIONMATCHEXPR = _descriptor.Descriptor(
  name='FirewallLocationMatchExpr',
  full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zone', full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr.zone', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1206,
  serialized_end=1304,
)


_ZONEMATCHEXPR = _descriptor.Descriptor(
  name='ZoneMatchExpr',
  full_name='com.intentionet.bfe.assertions.ZoneMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.ZoneMatchExpr.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.ZoneMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1306,
  serialized_end=1345,
)


_FILTERBEHAVIOREXPECT = _descriptor.Descriptor(
  name='FilterBehaviorExpect',
  full_name='com.intentionet.bfe.assertions.FilterBehaviorExpect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='com.intentionet.bfe.assertions.FilterBehaviorExpect.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FILTERBEHAVIOREXPECT_ACTION,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1348,
  serialized_end=1492,
)


_FIREWALLBEHAVIOREXPECT = _descriptor.Descriptor(
  name='FirewallBehaviorExpect',
  full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FIREWALLBEHAVIOREXPECT_ACTION,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1495,
  serialized_end=1643,
)


_FLOWFILTEREXPR = _descriptor.Descriptor(
  name='FlowFilterExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='include', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.include', index=0,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.exclude', index=1,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.and', index=2,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.or', index=3,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.not', index=4,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src_ip', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.src_ip', index=5,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst_ip', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.dst_ip', index=6,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='app', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.app', index=7,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1646,
  serialized_end=2138,
)


_FLOWEXPR = _descriptor.Descriptor(
  name='FlowExpr',
  full_name='com.intentionet.bfe.assertions.FlowExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='src_ips', full_name='com.intentionet.bfe.assertions.FlowExpr.src_ips', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst_ips', full_name='com.intentionet.bfe.assertions.FlowExpr.dst_ips', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apps', full_name='com.intentionet.bfe.assertions.FlowExpr.apps', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2141,
  serialized_end=2305,
)


_IPADDRESSFILTEREXPR = _descriptor.Descriptor(
  name='IpAddressFilterExpr',
  full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exact_match', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.exact_match', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='in_prefix', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.in_prefix', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2307,
  serialized_end=2380,
)


_FLOWFILTERANDEXPR = _descriptor.Descriptor(
  name='FlowFilterAndExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.FlowFilterAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2382,
  serialized_end=2467,
)


_FLOWFILTEROREXPR = _descriptor.Descriptor(
  name='FlowFilterOrExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.FlowFilterOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2469,
  serialized_end=2553,
)


_MATCHROUTEEXPR = _descriptor.Descriptor(
  name='MatchRouteExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='network', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.network', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.protocol', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2556,
  serialized_end=2860,
)


_MATCHROUTEANDEXPR = _descriptor.Descriptor(
  name='MatchRouteAndExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchRouteAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2862,
  serialized_end=2947,
)


_MATCHROUTEOREXPR = _descriptor.Descriptor(
  name='MatchRouteOrExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchRouteOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2949,
  serialized_end=3033,
)


_MATCHROUTENETWORKEXPR = _descriptor.Descriptor(
  name='MatchRouteNetworkExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exact', full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr.exact', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3035,
  serialized_end=3083,
)


_MATCHROUTEPROTOCOLEXPR = _descriptor.Descriptor(
  name='MatchRouteProtocolExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connected', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.connected', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='local', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.local', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='static', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.static', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ospf', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.ospf', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bgp', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.bgp', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MATCHROUTEPROTOCOLEXPR_OSPF,
    _MATCHROUTEPROTOCOLEXPR_BGP,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.protocol',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3086,
  serialized_end=3571,
)


_MATCHSERVERS = _descriptor.Descriptor(
  name='MatchServers',
  full_name='com.intentionet.bfe.assertions.MatchServers',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ntp', full_name='com.intentionet.bfe.assertions.MatchServers.ntp', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dns', full_name='com.intentionet.bfe.assertions.MatchServers.dns', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='snmp_trap', full_name='com.intentionet.bfe.assertions.MatchServers.snmp_trap', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logging', full_name='com.intentionet.bfe.assertions.MatchServers.logging', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tacacs', full_name='com.intentionet.bfe.assertions.MatchServers.tacacs', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.MatchServers.servers',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3574,
  serialized_end=3937,
)


_MATCHSERVERSEXPR = _descriptor.Descriptor(
  name='MatchServersExpr',
  full_name='com.intentionet.bfe.assertions.MatchServersExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set', full_name='com.intentionet.bfe.assertions.MatchServersExpr.set', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchServersExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3939,
  serialized_end=4032,
)


_SECURITYGROUPFILTER = _descriptor.Descriptor(
  name='SecurityGroupFilter',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='include', full_name='com.intentionet.bfe.assertions.SecurityGroupFilter.include', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='com.intentionet.bfe.assertions.SecurityGroupFilter.exclude', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4035,
  serialized_end=4204,
)


_SECURITYGROUPFILTEREXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='account', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.account', index=0,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='region', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.region', index=1,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.name', index=2,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='group_id', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.group_id', index=3,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4207,
  serialized_end=4487,
)


_SECURITYGROUPFILTERNAMEEXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterNameExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr.regex', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4489,
  serialized_end=4543,
)


_MATCHSECURITYGROUPRULES = _descriptor.Descriptor(
  name='MatchSecurityGroupRules',
  full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_prefix', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.ip_prefix', index=0,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='all', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.all', index=1,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tcp', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.tcp', index=2,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='udp', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.udp', index=3,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='icmp', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.icmp', index=4,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.protocol',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4546,
  serialized_end=4923,
)


_AWSINSTANCEFILTER = _descriptor.Descriptor(
  name='AwsInstanceFilter',
  full_name='com.intentionet.bfe.assertions.AwsInstanceFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='include', full_name='com.intentionet.bfe.assertions.AwsInstanceFilter.include', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='com.intentionet.bfe.assertions.AwsInstanceFilter.exclude', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4926,
  serialized_end=5089,
)


_AWSINSTANCEFILTEREXPR = _descriptor.Descriptor(
  name='AwsInstanceFilterExpr',
  full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='account', full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr.account', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='region', full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr.region', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vpc', full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr.vpc', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr.tag', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='instance_id', full_name='com.intentionet.bfe.assertions.AwsInstanceFilterExpr.instance_id', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5092,
  serialized_end=5398,
)


_AWSNETWORKINTERFACEFILTER = _descriptor.Descriptor(
  name='AwsNetworkInterfaceFilter',
  full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='include', full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilter.include', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilter.exclude', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5401,
  serialized_end=5588,
)


_AWSNETWORKINTERFACEFILTEREXPR = _descriptor.Descriptor(
  name='AwsNetworkInterfaceFilterExpr',
  full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='account', full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr.account', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='region', full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr.region', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='eni_id', full_name='com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr.eni_id', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5591,
  serialized_end=5776,
)


_AWSACCOUNTMATCHEXPR = _descriptor.Descriptor(
  name='AwsAccountMatchExpr',
  full_name='com.intentionet.bfe.assertions.AwsAccountMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.AwsAccountMatchExpr.equals', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='any', full_name='com.intentionet.bfe.assertions.AwsAccountMatchExpr.any', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.AwsAccountMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5779,
  serialized_end=5950,
)


_MATCHAWSACCOUNTEQUALS = _descriptor.Descriptor(
  name='MatchAwsAccountEquals',
  full_name='com.intentionet.bfe.assertions.MatchAwsAccountEquals',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='com.intentionet.bfe.assertions.MatchAwsAccountEquals.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5952,
  serialized_end=5987,
)


_MATCHAWSACCOUNTANYOF = _descriptor.Descriptor(
  name='MatchAwsAccountAnyOf',
  full_name='com.intentionet.bfe.assertions.MatchAwsAccountAnyOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='of', full_name='com.intentionet.bfe.assertions.MatchAwsAccountAnyOf.of', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5989,
  serialized_end=6078,
)


_AWSREGIONMATCHEXPR = _descriptor.Descriptor(
  name='AwsRegionMatchExpr',
  full_name='com.intentionet.bfe.assertions.AwsRegionMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='any', full_name='com.intentionet.bfe.assertions.AwsRegionMatchExpr.any', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.AwsRegionMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6080,
  serialized_end=6176,
)


_MATCHAWSREGIONEQUALS = _descriptor.Descriptor(
  name='MatchAwsRegionEquals',
  full_name='com.intentionet.bfe.assertions.MatchAwsRegionEquals',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.MatchAwsRegionEquals.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6178,
  serialized_end=6214,
)


_MATCHAWSREGIONANYOF = _descriptor.Descriptor(
  name='MatchAwsRegionAnyOf',
  full_name='com.intentionet.bfe.assertions.MatchAwsRegionAnyOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='of', full_name='com.intentionet.bfe.assertions.MatchAwsRegionAnyOf.of', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6216,
  serialized_end=6303,
)


_AWSVPCMATCHEXPR = _descriptor.Descriptor(
  name='AwsVpcMatchExpr',
  full_name='com.intentionet.bfe.assertions.AwsVpcMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.AwsVpcMatchExpr.equals', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='any', full_name='com.intentionet.bfe.assertions.AwsVpcMatchExpr.any', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.AwsVpcMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6306,
  serialized_end=6465,
)


_MATCHAWSVPCEQUALS = _descriptor.Descriptor(
  name='MatchAwsVpcEquals',
  full_name='com.intentionet.bfe.assertions.MatchAwsVpcEquals',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='com.intentionet.bfe.assertions.MatchAwsVpcEquals.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6467,
  serialized_end=6498,
)


_MATCHAWSVPCANYOF = _descriptor.Descriptor(
  name='MatchAwsVpcAnyOf',
  full_name='com.intentionet.bfe.assertions.MatchAwsVpcAnyOf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='of', full_name='com.intentionet.bfe.assertions.MatchAwsVpcAnyOf.of', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6500,
  serialized_end=6581,
)


_AWSTAGMATCHEXPR = _descriptor.Descriptor(
  name='AwsTagMatchExpr',
  full_name='com.intentionet.bfe.assertions.AwsTagMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.AwsTagMatchExpr.equals', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.AwsTagMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6583,
  serialized_end=6672,
)


_MATCHPROTOCOLWITHPORTSEXPR = _descriptor.Descriptor(
  name='MatchProtocolWithPortsExpr',
  full_name='com.intentionet.bfe.assertions.MatchProtocolWithPortsExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ports', full_name='com.intentionet.bfe.assertions.MatchProtocolWithPortsExpr.ports', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6674,
  serialized_end=6768,
)


_MATCHICMPEXPR = _descriptor.Descriptor(
  name='MatchIcmpExpr',
  full_name='com.intentionet.bfe.assertions.MatchIcmpExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='com.intentionet.bfe.assertions.MatchIcmpExpr.type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='com.intentionet.bfe.assertions.MatchIcmpExpr.code', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6770,
  serialized_end=6887,
)


_MATCHSTRINGSETEXPR = _descriptor.Descriptor(
  name='MatchStringSetExpr',
  full_name='com.intentionet.bfe.assertions.MatchStringSetExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.equals', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_any', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.has_any', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_all', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.has_all', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6890,
  serialized_end=7124,
)


_MATCHIPPROTOCOLEXPR = _descriptor.Descriptor(
  name='MatchIpProtocolExpr',
  full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='includes', full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr.includes', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7126,
  serialized_end=7175,
)


_MATCHINTRANGEEXPR = _descriptor.Descriptor(
  name='MatchIntRangeExpr',
  full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intersects', full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr.intersects', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7177,
  serialized_end=7263,
)


_MATCHIPPREFIXEXPR = _descriptor.Descriptor(
  name='MatchIpPrefixExpr',
  full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.equals', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contains', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.contains', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contained_by', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.contained_by', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7265,
  serialized_end=7360,
)


_STRINGCOLLECTION = _descriptor.Descriptor(
  name='StringCollection',
  full_name='com.intentionet.bfe.assertions.StringCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='com.intentionet.bfe.assertions.StringCollection.items', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7362,
  serialized_end=7395,
)

_DEVICEFILTEREXPR.fields_by_name['hostname'].message_type = _DEVICEFILTERHOSTNAMEEXPR
_DEVICEFILTEREXPR.fields_by_name['vendor'].message_type = _DEVICEFILTERVENDORLISTEXPR
_DEVICEFILTERHOSTNAMEEXPR.oneofs_by_name['expr'].fields.append(
  _DEVICEFILTERHOSTNAMEEXPR.fields_by_name['regex'])
_DEVICEFILTERHOSTNAMEEXPR.fields_by_name['regex'].containing_oneof = _DEVICEFILTERHOSTNAMEEXPR.oneofs_by_name['expr']
_FILTERMATCHEXPR.fields_by_name['name'].message_type = _FILTERNAMEMATCHEXPR
_FILTERMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _FILTERMATCHEXPR.fields_by_name['name'])
_FILTERMATCHEXPR.fields_by_name['name'].containing_oneof = _FILTERMATCHEXPR.oneofs_by_name['expr']
_FILTERNAMEMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _FILTERNAMEMATCHEXPR.fields_by_name['regex'])
_FILTERNAMEMATCHEXPR.fields_by_name['regex'].containing_oneof = _FILTERNAMEMATCHEXPR.oneofs_by_name['expr']
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['ios'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['nxos'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['xr'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['asa'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type'].fields.append(
  _DEVICEFILTERCISCOVENDOREXPR.fields_by_name['ios'])
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['ios'].containing_oneof = _DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type']
_DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type'].fields.append(
  _DEVICEFILTERCISCOVENDOREXPR.fields_by_name['nxos'])
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['nxos'].containing_oneof = _DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type']
_DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type'].fields.append(
  _DEVICEFILTERCISCOVENDOREXPR.fields_by_name['xr'])
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['xr'].containing_oneof = _DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type']
_DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type'].fields.append(
  _DEVICEFILTERCISCOVENDOREXPR.fields_by_name['asa'])
_DEVICEFILTERCISCOVENDOREXPR.fields_by_name['asa'].containing_oneof = _DEVICEFILTERCISCOVENDOREXPR.oneofs_by_name['type']
_DEVICEFILTERVENDOREXPR.fields_by_name['cisco'].message_type = _DEVICEFILTERCISCOVENDOREXPR
_DEVICEFILTERVENDOREXPR.fields_by_name['arista'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERVENDOREXPR.fields_by_name['juniper'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor'].fields.append(
  _DEVICEFILTERVENDOREXPR.fields_by_name['cisco'])
_DEVICEFILTERVENDOREXPR.fields_by_name['cisco'].containing_oneof = _DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor']
_DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor'].fields.append(
  _DEVICEFILTERVENDOREXPR.fields_by_name['arista'])
_DEVICEFILTERVENDOREXPR.fields_by_name['arista'].containing_oneof = _DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor']
_DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor'].fields.append(
  _DEVICEFILTERVENDOREXPR.fields_by_name['juniper'])
_DEVICEFILTERVENDOREXPR.fields_by_name['juniper'].containing_oneof = _DEVICEFILTERVENDOREXPR.oneofs_by_name['vendor']
_DEVICEFILTERVENDORLISTEXPR.fields_by_name['any'].message_type = _DEVICEFILTERVENDOREXPR
_FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'].message_type = _ZONEMATCHEXPR
_FIREWALLLOCATIONMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'])
_FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'].containing_oneof = _FIREWALLLOCATIONMATCHEXPR.oneofs_by_name['expr']
_ZONEMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _ZONEMATCHEXPR.fields_by_name['name'])
_ZONEMATCHEXPR.fields_by_name['name'].containing_oneof = _ZONEMATCHEXPR.oneofs_by_name['expr']
_FILTERBEHAVIOREXPECT.fields_by_name['action'].enum_type = _FILTERBEHAVIOREXPECT_ACTION
_FILTERBEHAVIOREXPECT_ACTION.containing_type = _FILTERBEHAVIOREXPECT
_FIREWALLBEHAVIOREXPECT.fields_by_name['action'].enum_type = _FIREWALLBEHAVIOREXPECT_ACTION
_FIREWALLBEHAVIOREXPECT_ACTION.containing_type = _FIREWALLBEHAVIOREXPECT
_FLOWFILTEREXPR.fields_by_name['include'].message_type = _FLOWEXPR
_FLOWFILTEREXPR.fields_by_name['exclude'].message_type = _FLOWEXPR
_FLOWFILTEREXPR.fields_by_name['and'].message_type = _FLOWFILTERANDEXPR
_FLOWFILTEREXPR.fields_by_name['or'].message_type = _FLOWFILTEROREXPR
_FLOWFILTEREXPR.fields_by_name['not'].message_type = _FLOWFILTEREXPR
_FLOWFILTEREXPR.fields_by_name['src_ip'].message_type = _IPADDRESSFILTEREXPR
_FLOWFILTEREXPR.fields_by_name['dst_ip'].message_type = _IPADDRESSFILTEREXPR
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['and'])
_FLOWFILTEREXPR.fields_by_name['and'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['or'])
_FLOWFILTEREXPR.fields_by_name['or'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['not'])
_FLOWFILTEREXPR.fields_by_name['not'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['src_ip'])
_FLOWFILTEREXPR.fields_by_name['src_ip'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['dst_ip'])
_FLOWFILTEREXPR.fields_by_name['dst_ip'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['app'])
_FLOWFILTEREXPR.fields_by_name['app'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWEXPR.fields_by_name['src_ips'].message_type = _IPADDRESSFILTEREXPR
_FLOWEXPR.fields_by_name['dst_ips'].message_type = _IPADDRESSFILTEREXPR
_IPADDRESSFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _IPADDRESSFILTEREXPR.fields_by_name['exact_match'])
_IPADDRESSFILTEREXPR.fields_by_name['exact_match'].containing_oneof = _IPADDRESSFILTEREXPR.oneofs_by_name['expr']
_IPADDRESSFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _IPADDRESSFILTEREXPR.fields_by_name['in_prefix'])
_IPADDRESSFILTEREXPR.fields_by_name['in_prefix'].containing_oneof = _IPADDRESSFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTERANDEXPR.fields_by_name['elements'].message_type = _FLOWFILTEREXPR
_FLOWFILTEROREXPR.fields_by_name['elements'].message_type = _FLOWFILTEREXPR
_MATCHROUTEEXPR.fields_by_name['and'].message_type = _MATCHROUTEANDEXPR
_MATCHROUTEEXPR.fields_by_name['or'].message_type = _MATCHROUTEOREXPR
_MATCHROUTEEXPR.fields_by_name['network'].message_type = _MATCHROUTENETWORKEXPR
_MATCHROUTEEXPR.fields_by_name['protocol'].message_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['and'])
_MATCHROUTEEXPR.fields_by_name['and'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['or'])
_MATCHROUTEEXPR.fields_by_name['or'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['network'])
_MATCHROUTEEXPR.fields_by_name['network'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['protocol'])
_MATCHROUTEEXPR.fields_by_name['protocol'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEANDEXPR.fields_by_name['elements'].message_type = _MATCHROUTEEXPR
_MATCHROUTEOREXPR.fields_by_name['elements'].message_type = _MATCHROUTEEXPR
_MATCHROUTENETWORKEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTENETWORKEXPR.fields_by_name['exact'])
_MATCHROUTENETWORKEXPR.fields_by_name['exact'].containing_oneof = _MATCHROUTENETWORKEXPR.oneofs_by_name['expr']
_MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['local'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['static'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'].enum_type = _MATCHROUTEPROTOCOLEXPR_OSPF
_MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'].enum_type = _MATCHROUTEPROTOCOLEXPR_BGP
_MATCHROUTEPROTOCOLEXPR_OSPF.containing_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEPROTOCOLEXPR_BGP.containing_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['local'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['local'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['static'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['static'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHSERVERS.fields_by_name['ntp'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['dns'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['snmp_trap'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['logging'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['tacacs'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['ntp'])
_MATCHSERVERS.fields_by_name['ntp'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['dns'])
_MATCHSERVERS.fields_by_name['dns'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['snmp_trap'])
_MATCHSERVERS.fields_by_name['snmp_trap'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['logging'])
_MATCHSERVERS.fields_by_name['logging'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['tacacs'])
_MATCHSERVERS.fields_by_name['tacacs'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERSEXPR.fields_by_name['set'].message_type = _MATCHSTRINGSETEXPR
_MATCHSERVERSEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSERVERSEXPR.fields_by_name['set'])
_MATCHSERVERSEXPR.fields_by_name['set'].containing_oneof = _MATCHSERVERSEXPR.oneofs_by_name['expr']
_SECURITYGROUPFILTER.fields_by_name['include'].message_type = _SECURITYGROUPFILTEREXPR
_SECURITYGROUPFILTER.fields_by_name['exclude'].message_type = _SECURITYGROUPFILTEREXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['account'].message_type = _AWSACCOUNTMATCHEXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['region'].message_type = _AWSREGIONMATCHEXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['name'].message_type = _SECURITYGROUPFILTERNAMEEXPR
_SECURITYGROUPFILTERNAMEEXPR.oneofs_by_name['expr'].fields.append(
  _SECURITYGROUPFILTERNAMEEXPR.fields_by_name['regex'])
_SECURITYGROUPFILTERNAMEEXPR.fields_by_name['regex'].containing_oneof = _SECURITYGROUPFILTERNAMEEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULES.fields_by_name['ip_prefix'].message_type = _MATCHIPPREFIXEXPR
_MATCHSECURITYGROUPRULES.fields_by_name['all'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHSECURITYGROUPRULES.fields_by_name['tcp'].message_type = _MATCHPROTOCOLWITHPORTSEXPR
_MATCHSECURITYGROUPRULES.fields_by_name['udp'].message_type = _MATCHPROTOCOLWITHPORTSEXPR
_MATCHSECURITYGROUPRULES.fields_by_name['icmp'].message_type = _MATCHICMPEXPR
_MATCHSECURITYGROUPRULES.oneofs_by_name['protocol'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['all'])
_MATCHSECURITYGROUPRULES.fields_by_name['all'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['protocol']
_MATCHSECURITYGROUPRULES.oneofs_by_name['protocol'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['tcp'])
_MATCHSECURITYGROUPRULES.fields_by_name['tcp'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['protocol']
_MATCHSECURITYGROUPRULES.oneofs_by_name['protocol'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['udp'])
_MATCHSECURITYGROUPRULES.fields_by_name['udp'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['protocol']
_MATCHSECURITYGROUPRULES.oneofs_by_name['protocol'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['icmp'])
_MATCHSECURITYGROUPRULES.fields_by_name['icmp'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['protocol']
_AWSINSTANCEFILTER.fields_by_name['include'].message_type = _AWSINSTANCEFILTEREXPR
_AWSINSTANCEFILTER.fields_by_name['exclude'].message_type = _AWSINSTANCEFILTEREXPR
_AWSINSTANCEFILTEREXPR.fields_by_name['account'].message_type = _AWSACCOUNTMATCHEXPR
_AWSINSTANCEFILTEREXPR.fields_by_name['region'].message_type = _AWSREGIONMATCHEXPR
_AWSINSTANCEFILTEREXPR.fields_by_name['vpc'].message_type = _AWSVPCMATCHEXPR
_AWSINSTANCEFILTEREXPR.fields_by_name['tag'].message_type = _AWSTAGMATCHEXPR
_AWSNETWORKINTERFACEFILTER.fields_by_name['include'].message_type = _AWSNETWORKINTERFACEFILTEREXPR
_AWSNETWORKINTERFACEFILTER.fields_by_name['exclude'].message_type = _AWSNETWORKINTERFACEFILTEREXPR
_AWSNETWORKINTERFACEFILTEREXPR.fields_by_name['account'].message_type = _AWSACCOUNTMATCHEXPR
_AWSNETWORKINTERFACEFILTEREXPR.fields_by_name['region'].message_type = _AWSREGIONMATCHEXPR
_AWSACCOUNTMATCHEXPR.fields_by_name['equals'].message_type = _MATCHAWSACCOUNTEQUALS
_AWSACCOUNTMATCHEXPR.fields_by_name['any'].message_type = _MATCHAWSACCOUNTANYOF
_AWSACCOUNTMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSACCOUNTMATCHEXPR.fields_by_name['equals'])
_AWSACCOUNTMATCHEXPR.fields_by_name['equals'].containing_oneof = _AWSACCOUNTMATCHEXPR.oneofs_by_name['expr']
_AWSACCOUNTMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSACCOUNTMATCHEXPR.fields_by_name['any'])
_AWSACCOUNTMATCHEXPR.fields_by_name['any'].containing_oneof = _AWSACCOUNTMATCHEXPR.oneofs_by_name['expr']
_MATCHAWSACCOUNTANYOF.fields_by_name['of'].message_type = _MATCHAWSACCOUNTEQUALS
_AWSREGIONMATCHEXPR.fields_by_name['any'].message_type = _MATCHAWSREGIONANYOF
_AWSREGIONMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSREGIONMATCHEXPR.fields_by_name['any'])
_AWSREGIONMATCHEXPR.fields_by_name['any'].containing_oneof = _AWSREGIONMATCHEXPR.oneofs_by_name['expr']
_MATCHAWSREGIONANYOF.fields_by_name['of'].message_type = _MATCHAWSREGIONEQUALS
_AWSVPCMATCHEXPR.fields_by_name['equals'].message_type = _MATCHAWSVPCEQUALS
_AWSVPCMATCHEXPR.fields_by_name['any'].message_type = _MATCHAWSVPCANYOF
_AWSVPCMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSVPCMATCHEXPR.fields_by_name['equals'])
_AWSVPCMATCHEXPR.fields_by_name['equals'].containing_oneof = _AWSVPCMATCHEXPR.oneofs_by_name['expr']
_AWSVPCMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSVPCMATCHEXPR.fields_by_name['any'])
_AWSVPCMATCHEXPR.fields_by_name['any'].containing_oneof = _AWSVPCMATCHEXPR.oneofs_by_name['expr']
_MATCHAWSVPCANYOF.fields_by_name['of'].message_type = _MATCHAWSVPCEQUALS
_AWSTAGMATCHEXPR.fields_by_name['equals'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._TAG
_AWSTAGMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _AWSTAGMATCHEXPR.fields_by_name['equals'])
_AWSTAGMATCHEXPR.fields_by_name['equals'].containing_oneof = _AWSTAGMATCHEXPR.oneofs_by_name['expr']
_MATCHPROTOCOLWITHPORTSEXPR.fields_by_name['ports'].message_type = _MATCHINTRANGEEXPR
_MATCHICMPEXPR.fields_by_name['type'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2._ICMPTYPE
_MATCHICMPEXPR.fields_by_name['code'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2._ICMPCODE
_MATCHSTRINGSETEXPR.fields_by_name['equals'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.fields_by_name['has_any'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.fields_by_name['has_all'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['equals'])
_MATCHSTRINGSETEXPR.fields_by_name['equals'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['has_any'])
_MATCHSTRINGSETEXPR.fields_by_name['has_any'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['has_all'])
_MATCHSTRINGSETEXPR.fields_by_name['has_all'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHIPPROTOCOLEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPROTOCOLEXPR.fields_by_name['includes'])
_MATCHIPPROTOCOLEXPR.fields_by_name['includes'].containing_oneof = _MATCHIPPROTOCOLEXPR.oneofs_by_name['expr']
_MATCHINTRANGEEXPR.fields_by_name['intersects'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_range__pb2._INTRANGE
_MATCHINTRANGEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHINTRANGEEXPR.fields_by_name['intersects'])
_MATCHINTRANGEEXPR.fields_by_name['intersects'].containing_oneof = _MATCHINTRANGEEXPR.oneofs_by_name['expr']
_MATCHIPPREFIXEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPREFIXEXPR.fields_by_name['equals'])
_MATCHIPPREFIXEXPR.fields_by_name['equals'].containing_oneof = _MATCHIPPREFIXEXPR.oneofs_by_name['expr']
_MATCHIPPREFIXEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPREFIXEXPR.fields_by_name['contains'])
_MATCHIPPREFIXEXPR.fields_by_name['contains'].containing_oneof = _MATCHIPPREFIXEXPR.oneofs_by_name['expr']
_MATCHIPPREFIXEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPREFIXEXPR.fields_by_name['contained_by'])
_MATCHIPPREFIXEXPR.fields_by_name['contained_by'].containing_oneof = _MATCHIPPREFIXEXPR.oneofs_by_name['expr']
DESCRIPTOR.message_types_by_name['DeviceFilterExpr'] = _DEVICEFILTEREXPR
DESCRIPTOR.message_types_by_name['DeviceFilterHostnameExpr'] = _DEVICEFILTERHOSTNAMEEXPR
DESCRIPTOR.message_types_by_name['InterfaceExpr'] = _INTERFACEEXPR
DESCRIPTOR.message_types_by_name['FilterMatchExpr'] = _FILTERMATCHEXPR
DESCRIPTOR.message_types_by_name['FilterNameMatchExpr'] = _FILTERNAMEMATCHEXPR
DESCRIPTOR.message_types_by_name['DeviceFilterCiscoVendorExpr'] = _DEVICEFILTERCISCOVENDOREXPR
DESCRIPTOR.message_types_by_name['DeviceFilterVendorExpr'] = _DEVICEFILTERVENDOREXPR
DESCRIPTOR.message_types_by_name['DeviceFilterVendorListExpr'] = _DEVICEFILTERVENDORLISTEXPR
DESCRIPTOR.message_types_by_name['FirewallLocationMatchExpr'] = _FIREWALLLOCATIONMATCHEXPR
DESCRIPTOR.message_types_by_name['ZoneMatchExpr'] = _ZONEMATCHEXPR
DESCRIPTOR.message_types_by_name['FilterBehaviorExpect'] = _FILTERBEHAVIOREXPECT
DESCRIPTOR.message_types_by_name['FirewallBehaviorExpect'] = _FIREWALLBEHAVIOREXPECT
DESCRIPTOR.message_types_by_name['FlowFilterExpr'] = _FLOWFILTEREXPR
DESCRIPTOR.message_types_by_name['FlowExpr'] = _FLOWEXPR
DESCRIPTOR.message_types_by_name['IpAddressFilterExpr'] = _IPADDRESSFILTEREXPR
DESCRIPTOR.message_types_by_name['FlowFilterAndExpr'] = _FLOWFILTERANDEXPR
DESCRIPTOR.message_types_by_name['FlowFilterOrExpr'] = _FLOWFILTEROREXPR
DESCRIPTOR.message_types_by_name['MatchRouteExpr'] = _MATCHROUTEEXPR
DESCRIPTOR.message_types_by_name['MatchRouteAndExpr'] = _MATCHROUTEANDEXPR
DESCRIPTOR.message_types_by_name['MatchRouteOrExpr'] = _MATCHROUTEOREXPR
DESCRIPTOR.message_types_by_name['MatchRouteNetworkExpr'] = _MATCHROUTENETWORKEXPR
DESCRIPTOR.message_types_by_name['MatchRouteProtocolExpr'] = _MATCHROUTEPROTOCOLEXPR
DESCRIPTOR.message_types_by_name['MatchServers'] = _MATCHSERVERS
DESCRIPTOR.message_types_by_name['MatchServersExpr'] = _MATCHSERVERSEXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilter'] = _SECURITYGROUPFILTER
DESCRIPTOR.message_types_by_name['SecurityGroupFilterExpr'] = _SECURITYGROUPFILTEREXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilterNameExpr'] = _SECURITYGROUPFILTERNAMEEXPR
DESCRIPTOR.message_types_by_name['MatchSecurityGroupRules'] = _MATCHSECURITYGROUPRULES
DESCRIPTOR.message_types_by_name['AwsInstanceFilter'] = _AWSINSTANCEFILTER
DESCRIPTOR.message_types_by_name['AwsInstanceFilterExpr'] = _AWSINSTANCEFILTEREXPR
DESCRIPTOR.message_types_by_name['AwsNetworkInterfaceFilter'] = _AWSNETWORKINTERFACEFILTER
DESCRIPTOR.message_types_by_name['AwsNetworkInterfaceFilterExpr'] = _AWSNETWORKINTERFACEFILTEREXPR
DESCRIPTOR.message_types_by_name['AwsAccountMatchExpr'] = _AWSACCOUNTMATCHEXPR
DESCRIPTOR.message_types_by_name['MatchAwsAccountEquals'] = _MATCHAWSACCOUNTEQUALS
DESCRIPTOR.message_types_by_name['MatchAwsAccountAnyOf'] = _MATCHAWSACCOUNTANYOF
DESCRIPTOR.message_types_by_name['AwsRegionMatchExpr'] = _AWSREGIONMATCHEXPR
DESCRIPTOR.message_types_by_name['MatchAwsRegionEquals'] = _MATCHAWSREGIONEQUALS
DESCRIPTOR.message_types_by_name['MatchAwsRegionAnyOf'] = _MATCHAWSREGIONANYOF
DESCRIPTOR.message_types_by_name['AwsVpcMatchExpr'] = _AWSVPCMATCHEXPR
DESCRIPTOR.message_types_by_name['MatchAwsVpcEquals'] = _MATCHAWSVPCEQUALS
DESCRIPTOR.message_types_by_name['MatchAwsVpcAnyOf'] = _MATCHAWSVPCANYOF
DESCRIPTOR.message_types_by_name['AwsTagMatchExpr'] = _AWSTAGMATCHEXPR
DESCRIPTOR.message_types_by_name['MatchProtocolWithPortsExpr'] = _MATCHPROTOCOLWITHPORTSEXPR
DESCRIPTOR.message_types_by_name['MatchIcmpExpr'] = _MATCHICMPEXPR
DESCRIPTOR.message_types_by_name['MatchStringSetExpr'] = _MATCHSTRINGSETEXPR
DESCRIPTOR.message_types_by_name['MatchIpProtocolExpr'] = _MATCHIPPROTOCOLEXPR
DESCRIPTOR.message_types_by_name['MatchIntRangeExpr'] = _MATCHINTRANGEEXPR
DESCRIPTOR.message_types_by_name['MatchIpPrefixExpr'] = _MATCHIPPREFIXEXPR
DESCRIPTOR.message_types_by_name['StringCollection'] = _STRINGCOLLECTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DeviceFilterExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterExpr)
  })
_sym_db.RegisterMessage(DeviceFilterExpr)

DeviceFilterHostnameExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterHostnameExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERHOSTNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterHostnameExpr)
  })
_sym_db.RegisterMessage(DeviceFilterHostnameExpr)

InterfaceExpr = _reflection.GeneratedProtocolMessageType('InterfaceExpr', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.InterfaceExpr)
  })
_sym_db.RegisterMessage(InterfaceExpr)

FilterMatchExpr = _reflection.GeneratedProtocolMessageType('FilterMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FILTERMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterMatchExpr)
  })
_sym_db.RegisterMessage(FilterMatchExpr)

FilterNameMatchExpr = _reflection.GeneratedProtocolMessageType('FilterNameMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FILTERNAMEMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterNameMatchExpr)
  })
_sym_db.RegisterMessage(FilterNameMatchExpr)

DeviceFilterCiscoVendorExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterCiscoVendorExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERCISCOVENDOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr)
  })
_sym_db.RegisterMessage(DeviceFilterCiscoVendorExpr)

DeviceFilterVendorExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterVendorExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERVENDOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterVendorExpr)
  })
_sym_db.RegisterMessage(DeviceFilterVendorExpr)

DeviceFilterVendorListExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterVendorListExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERVENDORLISTEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterVendorListExpr)
  })
_sym_db.RegisterMessage(DeviceFilterVendorListExpr)

FirewallLocationMatchExpr = _reflection.GeneratedProtocolMessageType('FirewallLocationMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLLOCATIONMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallLocationMatchExpr)
  })
_sym_db.RegisterMessage(FirewallLocationMatchExpr)

ZoneMatchExpr = _reflection.GeneratedProtocolMessageType('ZoneMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _ZONEMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ZoneMatchExpr)
  })
_sym_db.RegisterMessage(ZoneMatchExpr)

FilterBehaviorExpect = _reflection.GeneratedProtocolMessageType('FilterBehaviorExpect', (_message.Message,), {
  'DESCRIPTOR' : _FILTERBEHAVIOREXPECT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorExpect)
  })
_sym_db.RegisterMessage(FilterBehaviorExpect)

FirewallBehaviorExpect = _reflection.GeneratedProtocolMessageType('FirewallBehaviorExpect', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLBEHAVIOREXPECT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallBehaviorExpect)
  })
_sym_db.RegisterMessage(FirewallBehaviorExpect)

FlowFilterExpr = _reflection.GeneratedProtocolMessageType('FlowFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterExpr)
  })
_sym_db.RegisterMessage(FlowFilterExpr)

FlowExpr = _reflection.GeneratedProtocolMessageType('FlowExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowExpr)
  })
_sym_db.RegisterMessage(FlowExpr)

IpAddressFilterExpr = _reflection.GeneratedProtocolMessageType('IpAddressFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRESSFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.IpAddressFilterExpr)
  })
_sym_db.RegisterMessage(IpAddressFilterExpr)

FlowFilterAndExpr = _reflection.GeneratedProtocolMessageType('FlowFilterAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTERANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterAndExpr)
  })
_sym_db.RegisterMessage(FlowFilterAndExpr)

FlowFilterOrExpr = _reflection.GeneratedProtocolMessageType('FlowFilterOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEROREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterOrExpr)
  })
_sym_db.RegisterMessage(FlowFilterOrExpr)

MatchRouteExpr = _reflection.GeneratedProtocolMessageType('MatchRouteExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteExpr)
  })
_sym_db.RegisterMessage(MatchRouteExpr)

MatchRouteAndExpr = _reflection.GeneratedProtocolMessageType('MatchRouteAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteAndExpr)
  })
_sym_db.RegisterMessage(MatchRouteAndExpr)

MatchRouteOrExpr = _reflection.GeneratedProtocolMessageType('MatchRouteOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteOrExpr)
  })
_sym_db.RegisterMessage(MatchRouteOrExpr)

MatchRouteNetworkExpr = _reflection.GeneratedProtocolMessageType('MatchRouteNetworkExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTENETWORKEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteNetworkExpr)
  })
_sym_db.RegisterMessage(MatchRouteNetworkExpr)

MatchRouteProtocolExpr = _reflection.GeneratedProtocolMessageType('MatchRouteProtocolExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEPROTOCOLEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteProtocolExpr)
  })
_sym_db.RegisterMessage(MatchRouteProtocolExpr)

MatchServers = _reflection.GeneratedProtocolMessageType('MatchServers', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServers)
  })
_sym_db.RegisterMessage(MatchServers)

MatchServersExpr = _reflection.GeneratedProtocolMessageType('MatchServersExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERSEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServersExpr)
  })
_sym_db.RegisterMessage(MatchServersExpr)

SecurityGroupFilter = _reflection.GeneratedProtocolMessageType('SecurityGroupFilter', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilter)
  })
_sym_db.RegisterMessage(SecurityGroupFilter)

SecurityGroupFilterExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterExpr)

SecurityGroupFilterNameExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterNameExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTERNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterNameExpr)

MatchSecurityGroupRules = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRules', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULES,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRules)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRules)

AwsInstanceFilter = _reflection.GeneratedProtocolMessageType('AwsInstanceFilter', (_message.Message,), {
  'DESCRIPTOR' : _AWSINSTANCEFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsInstanceFilter)
  })
_sym_db.RegisterMessage(AwsInstanceFilter)

AwsInstanceFilterExpr = _reflection.GeneratedProtocolMessageType('AwsInstanceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSINSTANCEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsInstanceFilterExpr)
  })
_sym_db.RegisterMessage(AwsInstanceFilterExpr)

AwsNetworkInterfaceFilter = _reflection.GeneratedProtocolMessageType('AwsNetworkInterfaceFilter', (_message.Message,), {
  'DESCRIPTOR' : _AWSNETWORKINTERFACEFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsNetworkInterfaceFilter)
  })
_sym_db.RegisterMessage(AwsNetworkInterfaceFilter)

AwsNetworkInterfaceFilterExpr = _reflection.GeneratedProtocolMessageType('AwsNetworkInterfaceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSNETWORKINTERFACEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr)
  })
_sym_db.RegisterMessage(AwsNetworkInterfaceFilterExpr)

AwsAccountMatchExpr = _reflection.GeneratedProtocolMessageType('AwsAccountMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSACCOUNTMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsAccountMatchExpr)
  })
_sym_db.RegisterMessage(AwsAccountMatchExpr)

MatchAwsAccountEquals = _reflection.GeneratedProtocolMessageType('MatchAwsAccountEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSACCOUNTEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsAccountEquals)
  })
_sym_db.RegisterMessage(MatchAwsAccountEquals)

MatchAwsAccountAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsAccountAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSACCOUNTANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsAccountAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsAccountAnyOf)

AwsRegionMatchExpr = _reflection.GeneratedProtocolMessageType('AwsRegionMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSREGIONMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsRegionMatchExpr)
  })
_sym_db.RegisterMessage(AwsRegionMatchExpr)

MatchAwsRegionEquals = _reflection.GeneratedProtocolMessageType('MatchAwsRegionEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSREGIONEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsRegionEquals)
  })
_sym_db.RegisterMessage(MatchAwsRegionEquals)

MatchAwsRegionAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsRegionAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSREGIONANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsRegionAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsRegionAnyOf)

AwsVpcMatchExpr = _reflection.GeneratedProtocolMessageType('AwsVpcMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSVPCMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsVpcMatchExpr)
  })
_sym_db.RegisterMessage(AwsVpcMatchExpr)

MatchAwsVpcEquals = _reflection.GeneratedProtocolMessageType('MatchAwsVpcEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSVPCEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsVpcEquals)
  })
_sym_db.RegisterMessage(MatchAwsVpcEquals)

MatchAwsVpcAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsVpcAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSVPCANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsVpcAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsVpcAnyOf)

AwsTagMatchExpr = _reflection.GeneratedProtocolMessageType('AwsTagMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSTAGMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsTagMatchExpr)
  })
_sym_db.RegisterMessage(AwsTagMatchExpr)

MatchProtocolWithPortsExpr = _reflection.GeneratedProtocolMessageType('MatchProtocolWithPortsExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHPROTOCOLWITHPORTSEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchProtocolWithPortsExpr)
  })
_sym_db.RegisterMessage(MatchProtocolWithPortsExpr)

MatchIcmpExpr = _reflection.GeneratedProtocolMessageType('MatchIcmpExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHICMPEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIcmpExpr)
  })
_sym_db.RegisterMessage(MatchIcmpExpr)

MatchStringSetExpr = _reflection.GeneratedProtocolMessageType('MatchStringSetExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSTRINGSETEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchStringSetExpr)
  })
_sym_db.RegisterMessage(MatchStringSetExpr)

MatchIpProtocolExpr = _reflection.GeneratedProtocolMessageType('MatchIpProtocolExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPROTOCOLEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpProtocolExpr)
  })
_sym_db.RegisterMessage(MatchIpProtocolExpr)

MatchIntRangeExpr = _reflection.GeneratedProtocolMessageType('MatchIntRangeExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINTRANGEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIntRangeExpr)
  })
_sym_db.RegisterMessage(MatchIntRangeExpr)

MatchIpPrefixExpr = _reflection.GeneratedProtocolMessageType('MatchIpPrefixExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPREFIXEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpPrefixExpr)
  })
_sym_db.RegisterMessage(MatchIpPrefixExpr)

StringCollection = _reflection.GeneratedProtocolMessageType('StringCollection', (_message.Message,), {
  'DESCRIPTOR' : _STRINGCOLLECTION,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.StringCollection)
  })
_sym_db.RegisterMessage(StringCollection)


# @@protoc_insertion_point(module_scope)
