/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package pylumiconnector */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"

typedef struct tagUnknowns {
    char* Key;
    char* BoolValue;
    char* NumberValue;
    char* StringValue;
    char* ArrayValue;
    char* AssetValue;
    char* ArchiveValue;
    char* ObjectValue;
} Unknowns;

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


/* Return type for ContextSetup */
struct ContextSetup_return {
	GoInt r0;
	char* r1;
};
extern struct ContextSetup_return ContextSetup(char* name, char* cwd);

/* Return type for ContextTeardown */
struct ContextTeardown_return {
	GoInt r0;
	char* r1;
};
extern struct ContextTeardown_return ContextTeardown(char* name);

/* Return type for ContextListPlugins */
struct ContextListPlugins_return {
	GoInt r0;
	char** r1;
	GoInt r2;
	char* r3;
};
extern struct ContextListPlugins_return ContextListPlugins(char* name);

/* Return type for ProviderTeardown */
struct ProviderTeardown_return {
	GoInt r0;
	char* r1;
};
extern struct ProviderTeardown_return ProviderTeardown(char* ctx, char* provider);

/* Return type for ProviderGetSchema */
struct ProviderGetSchema_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderGetSchema_return ProviderGetSchema(char* ctxName, char* name, GoInt version);

/* Return type for ProviderCheckConfig */
struct ProviderCheckConfig_return {
	GoInt r0;
	char* r1;
	char* r2;
	char* r3;
};
extern struct ProviderCheckConfig_return ProviderCheckConfig(char* ctx, char* provider, char* urn, char* olds, char* news, GoUint8 allowUnknowns);

/* Return type for ProviderDiffConfig */
struct ProviderDiffConfig_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderDiffConfig_return ProviderDiffConfig(char* ctx, char* provider, char* urn, char* olds, char* news, GoUint8 allowUnknowns, char** ignoreChanges, GoInt nIgnoreChanges);

/* Return type for ProviderConfigure */
struct ProviderConfigure_return {
	GoInt r0;
	char* r1;
};
extern struct ProviderConfigure_return ProviderConfigure(char* ctx, char* provider, char* inputs);

/* Return type for ProviderCheck */
struct ProviderCheck_return {
	GoInt r0;
	char* r1;
	char* r2;
	char* r3;
};
extern struct ProviderCheck_return ProviderCheck(char* ctx, char* provider, char* urn, char* olds, char* news, GoUint8 allowUnknowns);

/* Return type for ProviderDiff */
struct ProviderDiff_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderDiff_return ProviderDiff(char* ctx, char* provider, char* urn, char* id, char* olds, char* news, GoUint8 allowUnknowns, char** ignoreChanges, GoInt nIgnoreChanges);

/* Return type for ProviderCreate */
struct ProviderCreate_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderCreate_return ProviderCreate(char* ctx, char* provider, char* urn, char* news, GoFloat64 timeout, GoUint8 preview);

/* Return type for ProviderRead */
struct ProviderRead_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderRead_return ProviderRead(char* ctx, char* provider, char* urn, char* id, char* inputs, char* state);

/* Return type for ProviderUpdate */
struct ProviderUpdate_return {
	GoInt r0;
	char* r1;
	char* r2;
};
extern struct ProviderUpdate_return ProviderUpdate(char* ctx, char* provider, char* urn, char* id, char* olds, char* news, GoFloat64 timeout, char** ignoreChanges, GoInt nIgnoreChanges, GoUint8 preview);

/* Return type for ProviderDelete */
struct ProviderDelete_return {
	GoInt r0;
	GoInt r1;
	char* r2;
};
extern struct ProviderDelete_return ProviderDelete(char* ctx, char* provider, char* urn, char* id, char* news, GoFloat64 timeout);
extern Unknowns GetUnknowns();

#ifdef __cplusplus
}
#endif
