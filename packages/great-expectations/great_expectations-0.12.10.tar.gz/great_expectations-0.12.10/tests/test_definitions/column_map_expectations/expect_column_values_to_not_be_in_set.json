{
  "expectation_type": "expect_column_values_to_not_be_in_set",
  "datasets" : [{
    "data" : {
      "x" : [1,2,4],
      "z" : ["hello", "jello", "mello"],
      "y" : [1.1,2.2,5.5],
      "n" : [null,null,2]
    },
    "tests" : [
      {
        "title": "Basic positive test case, single value not in column",
        "exact_match_out": false,
        "in": {
          "column": "x",
          "value_set": [0]
        },
        "out": {
          "success": true
        }
      },
      {
        "title": "Negative test case, include one existing column value",
        "exact_match_out": false,
        "in": {
          "column": "x",
          "value_set": [1]
        },
        "out": {
          "success": false,
          "unexpected_index_list": [0],
          "unexpected_list": [1]
        }
      },
      {
        "title": "Positive, Empty values set",
        "exact_match_out": false,
        "in": {
          "column": "x",
          "value_set": []
        },
        "out": {
          "success": true,
          "unexpected_index_list": [],
          "unexpected_list": []
        }
      },
      {
        "title": "Basic Negative strings set, all character values",
        "exact_match_out": false,
        "in": {
          "column": "z",
          "value_set": ["hello", "jello", "mello"]
        },
        "out": {
          "success": false,
          "unexpected_index_list": [0, 1, 2],
          "unexpected_list": ["hello", "jello", "mello"]
        }
      },
      {
        "title": "Positive test, strings set, extra value in column",
        "exact_match_out": false,
        "in": {
          "column": "z",
          "value_set": ["ello"]
        },
        "out": {
          "success": true
        }
      },
      {
        "title": "Negative test, float set, two out of three column values included, mostly",
        "exact_match_out": false,
        "in": {
          "column": "y",
          "value_set": [1.1, 2.2],
          "mostly": 0.65
        },
        "out": {
          "success": false,
          "unexpected_index_list": [0, 1],
          "unexpected_list": [1.1, 2.2]
        }
      },
      {
        "title": "Positive test, float set, two out of three column values included, mostly",
        "exact_match_out": false,
        "in": {
          "column": "y",
          "value_set": [1.1, 2.2],
          "mostly": 0.7
        },
        "out": {
          "success": false,
          "unexpected_index_list": [0, 1],
          "unexpected_list": [1.1, 2.2]
        }
      },
      {
        "title": "Positive_test__values_set_is_null",
        "exact_match_out": false,
        "in": {
          "column": "n",
          "value_set": [null]
        },
        "out": {
          "success": true
        },
        "suppress_test_for": ["spark"]
      },
      {
        "title": "value_error_spark_cannot_support_values_set_is_null",
        "exact_match_out": false,
        "in": {
          "column": "n",
          "value_set": [null],
          "catch_exceptions": true
        },
        "out": {
          "traceback_substring": "expect_column_values_to_not_be_in_set cannot support a None in the value_set in spark"
        },
        "only_for": ["spark"]
      },
      {
        "title": "Raise TypeError when Values set is missing",
        "exact_match_out": false,
        "in": {
          "column": "z",
          "value_set": null,
          "catch_exceptions": true
        },
        "out": {},
        "error":{
          "traceback_substring": "argument of type 'NoneType' is not iterable"
          }
      }
    ]
  }]
}
