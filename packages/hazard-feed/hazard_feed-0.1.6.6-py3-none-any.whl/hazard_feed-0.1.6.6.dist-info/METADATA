Metadata-Version: 2.1
Name: hazard-feed
Version: 0.1.6.6
Summary: pogoda.by storm warning rss parser
Home-page: https://github.com/hitnik/hazard_feed
Author: Aleksandr Nikitin
Author-email: hitnik@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: aiosmtplib
Requires-Dist: asgiref
Requires-Dist: attrs
Requires-Dist: beautifulsoup4
Requires-Dist: certifi
Requires-Dist: chardet
Requires-Dist: Click
Requires-Dist: coreapi
Requires-Dist: coreschema
Requires-Dist: croniter
Requires-Dist: Django
Requires-Dist: django-cors-headers
Requires-Dist: django-rq
Requires-Dist: django-tinymce
Requires-Dist: djangorestframework
Requires-Dist: packaging
Requires-Dist: drf-spectacular
Requires-Dist: feedparser
Requires-Dist: gunicorn
Requires-Dist: idna
Requires-Dist: inflection
Requires-Dist: itypes
Requires-Dist: Jinja2
Requires-Dist: joblib
Requires-Dist: jsonschema
Requires-Dist: MarkupSafe
Requires-Dist: nltk
Requires-Dist: pycparser
Requires-Dist: PyJWT
Requires-Dist: pyparsing
Requires-Dist: pyrsistent
Requires-Dist: python-dateutil
Requires-Dist: pytz
Requires-Dist: PyYAML
Requires-Dist: redis
Requires-Dist: regex
Requires-Dist: requests
Requires-Dist: rq
Requires-Dist: rq-scheduler
Requires-Dist: ruamel.yaml
Requires-Dist: ruamel.yaml.clib
Requires-Dist: six
Requires-Dist: soupsieve
Requires-Dist: sqlparse
Requires-Dist: tqdm
Requires-Dist: uritemplate
Requires-Dist: urllib3
Requires-Dist: whitenoise
Requires-Dist: psycopg2
Requires-Dist: django-filter

=====
Hazard_feed
=====

Hazard_feed is a Django app to get storm warnings from http://www.pogoda.by conduct Web-based polls and send notifications 
by email to subscribed recipents.



Quick start
-----------

1. Add "hazard_feed", "corsheaders' and others to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...
        'corsheaders',
        'django_rq',
        'tinymce',
        'rest_framework',
        'drf_yasg',
        'hazard_feed',
    ]

2. Define next email settings in settings.py or your environment viriables:
	        WEATHER_EMAIL_SMTP_HOST
			WEATHER_EMAIL_SMTP_PORT
            WEATHER_USE_TSL
            WEATHER_EMAIL_HOST_USER 
			WEATHER_EMAIL_HOST_PASSWORD

3. Define in settings.py
			WEATHER_EMAIL_FROM

4. Add "corsheaders' settings to your settings.py 

     CORS_ORIGIN_ALLOW_ALL = True


5. Define django_rq settings

6. Start rqworker and rqscheduler			

7. Run `python manage.py migrate` to create the azard_feed models.

