conditions: v1

dist: xenial
language: python

python:
- 2.7
- 3.4
- 3.5
- 3.6
- &pypy3 pypy3

_base_envs:
- &stage_lint
  stage: &stage_lint_name lint
- &stage_test_priority
  stage: &stage_test_priority_name test against latest Python versions first (under GNU/Linux)
- &stage_deploy
  stage: &stage_deploy_name upload new version of python package to PYPI (only for tagged commits)
- &manual_run_or_cron  # run the job only if it's a cron run or it's triggered manually
  if: type IN (api, cron)
- &python_3_7_mixture
  python: &mainstream_python 3.7
- &pure_python_base_priority
  <<: *python_3_7_mixture
  <<: *stage_test_priority
- &lint_python_base
  <<: *stage_lint
  # Some linters depend on pyyaml, which fails under Python 3.7 now:
  python: 3.6
  after_failure: skip
- &docs_python_base
  <<: *lint_python_base
  addons:
    apt:
      packages:
      - libenchant-dev

jobs:
  fast_finish: true
  allow_failures:
  - env: TOXENV=pre-commit-failing
  - python: nightly
  include:
  - python: pypy
    env:
      PYTEST_ADDOPTS: >-
        '-p no:warnings'
  - <<: *lint_python_base
    name: pre-commit.com tool linters
    env: TOXENV=pre-commit
  - <<: *lint_python_base
    <<: *python_3_7_mixture
    name: setup.py check linter
    env: TOXENV=setup-check
  - <<: *lint_python_base
    name: temporary failing pre-commit.com tool linters
    env: TOXENV=pre-commit-failing
  - <<: *docs_python_base
    python: 3.8
    name: Ensure that docs get built successfully
    env: TOXENV=build-docs
  - <<: *docs_python_base
    python: 3.8
    name: Spellcheck docs
    env: TOXENV=spellcheck-docs
  - <<: *docs_python_base
    python: 3.8
    name: Check links in docs
    env: TOXENV=linkcheck-docs
  - <<: *pure_python_base_priority
    python: 3.8
  - <<: *pure_python_base_priority
    # mainstream here (3.7)
  - <<: *pure_python_base_priority
    python: nightly
  - <<: *stage_deploy
    if: tag IS present
    <<: *python_3_7_mixture
    install:
    - python -m pip install --upgrade virtualenv
    - python -m pip install tox
    env:
      TOXENV: release

cache:
  pip: true
  directories:
  - $HOME/.cache/pre-commit
  - $HOME/.pre-commit
  - $HOME/virtualenv/python$(python -c 'import platform; print(platform.python_version())')

install:
- python -m pip install --upgrade virtualenv
- python -m pip install tox
- python -m tox --notest  # Pre-populate a virtualenv with dependencies
- >-
  python -c 'import ssl; print("\nOPENSSL_VERSION: " + ssl.OPENSSL_VERSION + "\nOPENSSL_VERSION_INFO: " + repr(ssl.OPENSSL_VERSION_INFO) + "\nOPENSSL_VERSION_NUMBER: " + repr(ssl.OPENSSL_VERSION_NUMBER))'
- >-
  ".tox/${TOXENV:-python}/bin/python" -m OpenSSL.debug || true

script:
- python -m tox

after_failure:
- ip a
- sysctl -a
- echo "Here's a list of installed Python packages:"
- pip list --format=columns
- echo Dumping logs, because tests failed to succeed
- |
    for log in `ls cheroot/test/*.log`
    do
      echo Outputting $log
      cat $log
    done
- py_log=/home/travis/build/cherrypy/cheroot/.tox/python/log/python-0.log
- echo Outputting python invocation log from $py_log
- cat $py_log
stages:
- *stage_lint_name
- *stage_test_priority_name
- name: *stage_deploy_name
