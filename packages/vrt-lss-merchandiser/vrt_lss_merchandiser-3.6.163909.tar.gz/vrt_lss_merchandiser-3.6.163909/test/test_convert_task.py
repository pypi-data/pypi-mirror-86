# coding: utf-8

"""
    VeeRoute.LSS Merchandiser

    VeeRoute.LSS Merchandiser API  # noqa: E501

    The version of the OpenAPI document: 3.6.163909
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_merchandiser
from vrt_lss_merchandiser.models.convert_task import ConvertTask  # noqa: E501
from vrt_lss_merchandiser.rest import ApiException

class TestConvertTask(unittest.TestCase):
    """ConvertTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ConvertTask
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_merchandiser.models.convert_task.ConvertTask()  # noqa: E501
        if include_optional :
            return ConvertTask(
                plan_task = vrt_lss_merchandiser.models.plan_task.PlanTask(
                    performer = vrt_lss_merchandiser.models.performer.Performer(
                        key = 'performer0001', 
                        start_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        finish_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_type = 'CAR', 
                        shifts = [
                            vrt_lss_merchandiser.models.shift.Shift(
                                availability_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-11-21T09:30+03:00', 
                                    to = '2020-11-21T19:45Z', ), 
                                working_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-11-21T09:30+03:00', 
                                    to = '2020-11-21T19:45Z', ), 
                                trip = vrt_lss_merchandiser.models.trip.Trip(
                                    key = 'trip01', 
                                    trip_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-11-21T09:30+03:00', 
                                        to = '2020-11-21T19:45Z', ), 
                                    actions = [
                                        vrt_lss_merchandiser.models.order_action.OrderAction(
                                            order = vrt_lss_merchandiser.models.order.Order(
                                                key = 'order0001', 
                                                location = vrt_lss_merchandiser.models.location.Location(
                                                    latitude = 55.692789, 
                                                    longitude = 37.554554, 
                                                    arrival_duration = 15, 
                                                    departure_duration = 5, ), 
                                                visits = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-11-21T09:30+03:00', 
                                                            to = '2020-11-21T19:45Z', ), )
                                                    ], 
                                                facts = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-11-21T09:30+03:00', 
                                                            to = '2020-11-21T19:45Z', ), )
                                                    ], 
                                                duration = 30, 
                                                reward = 199.1, ), 
                                            order_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-11-21T09:30+03:00', 
                                                to = '2020-11-21T19:45Z', ), 
                                            location_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-11-21T09:30+03:00', 
                                                to = '2020-11-21T19:45Z', ), )
                                        ], 
                                    waitlist = [
                                        vrt_lss_merchandiser.models.trip_waitlist.Trip_waitlist()
                                        ], ), )
                            ], 
                        tariff = vrt_lss_merchandiser.models.tariff.Tariff(
                            basic = vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                cost_per_shift = 1000, 
                                cost_per_meter = 0.1, 
                                max_length = 200000, 
                                cost_per_minute = 0.2, 
                                max_time = 480, ), 
                            extra = [
                                vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                    cost_per_shift = 1000, 
                                    cost_per_meter = 0.1, 
                                    max_length = 200000, 
                                    cost_per_minute = 0.2, 
                                    max_time = 480, )
                                ], ), ), 
                    orders = [
                        vrt_lss_merchandiser.models.order.Order(
                            key = 'order0001', 
                            location = vrt_lss_merchandiser.models.location.Location(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                arrival_duration = 15, 
                                departure_duration = 5, ), 
                            visits = [
                                vrt_lss_merchandiser.models.event_window.EventWindow(
                                    time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-11-21T09:30+03:00', 
                                        to = '2020-11-21T19:45Z', ), )
                                ], 
                            duration = 30, 
                            reward = 199.1, )
                        ], 
                    settings = vrt_lss_merchandiser.models.plan_settings.PlanSettings(
                        configuration = 'default', 
                        planning_time = 30, 
                        result_ttl = 10, 
                        result_timezone = 3, 
                        predict_slots = 2, 
                        transport_factor = [
                            vrt_lss_merchandiser.models.transport_factor.TransportFactor(
                                transport_type = 'CAR', 
                                speed = 2.5, )
                            ], 
                        capacity_factor = [
                            vrt_lss_merchandiser.models.capacity_factor.CapacityFactor(
                                transport_type = 'CAR', 
                                capacity = vrt_lss_merchandiser.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), )
                            ], 
                        routing = [
                            vrt_lss_merchandiser.models.routing.Routing(
                                transport_type = 'CAR', 
                                matrix = {"waypoints":[{"latitude":59.9345,"longitude":30.1504},{"latitude":59.942383,"longitude":30.258951},{"latitude":59.9545,"longitude":30.2004},{"latitude":59.89527,"longitude":30.261747},{"latitude":59.9745,"longitude":30.5004}],"distances":[[0,5822,1820,14130,23304],[5936,0,4931,8365,17731],[1819,4853,0,13161,22335],[14859,9056,13854,0,21440],[21777,16306,20772,19290,0]],"durations":[[0,13,7,24,36],[13,0,9,13,25],[7,9,0,21,32],[26,14,22,0,30],[34,23,30,28,0]]}, 
                                traffic_jams = [
                                    vrt_lss_merchandiser.models.traffic_factor.TrafficFactor(
                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                            from = '2020-11-21T09:30+03:00', 
                                            to = '2020-11-21T19:45Z', ), 
                                        length_multiplier = 2, 
                                        length_additive = 20, 
                                        time_multiplier = 2, 
                                        time_additive = 30, )
                                    ], )
                            ], 
                        assumptions = vrt_lss_merchandiser.models.plan_assumptions.PlanAssumptions(
                            toll_roads = False, 
                            ferry_crossing = False, 
                            flight_distance = True, 
                            disable_compatibility = True, 
                            disable_capacity = True, 
                            same_order_time_window = True, 
                            expand_shift_time_window = True, ), 
                        precision = 3, ), 
                    merchandiser_settings = vrt_lss_merchandiser.models.merchandiser_settings.MerchandiserSettings(
                        accuracy = 'DAY', ), ), 
                plan_result = {"tracedata":{"code":"user_LssTestingPreview_MerchandiserServicePlanner_2020-06-30-10-48_b15110ab-bed8-434a-84c4-6dd95f00cebf"},"timetable":{"key":"performer_1","transport_type":"CAR","shifts":[{"availability_time":{"from":"2020-11-01T06:00:00Z","to":"2020-11-01T16:00:00Z"},"working_time":{"from":"2020-11-01T06:00:00Z","to":"2020-11-01T16:00:00Z"}},{"availability_time":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T16:00:00Z"},"working_time":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T16:00:00Z"},"trip":{"key":"trip_1_shft_perf_performer_1","trip_time":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T06:20:00Z"},"actions":[{"order":{"key":"order_4_visit#0","location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-04T16:00:00Z"}},{"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-11T16:00:00Z"}},{"time_window":{"from":"2020-11-14T06:00:00Z","to":"2020-11-18T16:00:00Z"}},{"time_window":{"from":"2020-11-21T06:00:00Z","to":"2020-11-25T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T06:20:00Z"},"location_time":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-03T06:00:00Z","to":"2020-11-03T16:00:00Z"},"working_time":{"from":"2020-11-03T06:00:00Z","to":"2020-11-03T16:00:00Z"}},{"availability_time":{"from":"2020-11-04T06:00:00Z","to":"2020-11-04T16:00:00Z"},"working_time":{"from":"2020-11-04T06:00:00Z","to":"2020-11-04T16:00:00Z"}},{"availability_time":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T16:00:00Z"},"working_time":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T16:00:00Z"},"trip":{"key":"trip_4_shft_perf_performer_1","trip_time":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T06:20:00Z"},"actions":[{"order":{"key":"order_2_visit#0","location":{"latitude":59.949981,"longitude":30.248191,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-13T06:00:00Z"}},{"time_window":{"from":"2020-11-16T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T06:20:00Z"},"location_time":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-08T06:00:00Z","to":"2020-11-08T16:00:00Z"},"working_time":{"from":"2020-11-08T06:00:00Z","to":"2020-11-08T16:00:00Z"}},{"availability_time":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T16:00:00Z"},"working_time":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T16:00:00Z"},"trip":{"key":"trip_6_shft_perf_performer_1","trip_time":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T06:20:00Z"},"actions":[{"order":{"key":"order_4_visit#1","location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-04T16:00:00Z"}},{"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-11T16:00:00Z"}},{"time_window":{"from":"2020-11-14T06:00:00Z","to":"2020-11-18T16:00:00Z"}},{"time_window":{"from":"2020-11-21T06:00:00Z","to":"2020-11-25T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T06:20:00Z"},"location_time":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T16:00:00Z"},"working_time":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T16:00:00Z"},"trip":{"key":"trip_7_shft_perf_performer_1","trip_time":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T06:20:00Z"},"actions":[{"order":{"key":"order_3_visit#0","location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-10T16:00:00Z"}},{"time_window":{"from":"2020-11-11T06:00:00Z","to":"2020-11-21T16:00:00Z"}},{"time_window":{"from":"2020-11-22T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T06:20:00Z"},"location_time":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-11T06:00:00Z","to":"2020-11-11T16:00:00Z"},"working_time":{"from":"2020-11-11T06:00:00Z","to":"2020-11-11T16:00:00Z"}},{"availability_time":{"from":"2020-11-14T06:00:00Z","to":"2020-11-14T16:00:00Z"},"working_time":{"from":"2020-11-14T06:00:00Z","to":"2020-11-14T16:00:00Z"}},{"availability_time":{"from":"2020-11-13T06:00:00Z","to":"2020-11-13T16:00:00Z"},"working_time":{"from":"2020-11-13T06:00:00Z","to":"2020-11-13T16:00:00Z"}},{"availability_time":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T16:00:00Z"},"working_time":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T16:00:00Z"},"trip":{"key":"trip_11_shft_perf_performer_1","trip_time":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T06:20:00Z"},"actions":[{"order":{"key":"order_4_visit#2","location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-04T16:00:00Z"}},{"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-11T16:00:00Z"}},{"time_window":{"from":"2020-11-14T06:00:00Z","to":"2020-11-18T16:00:00Z"}},{"time_window":{"from":"2020-11-21T06:00:00Z","to":"2020-11-25T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T06:20:00Z"},"location_time":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T16:00:00Z"},"working_time":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T16:00:00Z"},"trip":{"key":"trip_12_shft_perf_performer_1","trip_time":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T06:20:00Z"},"actions":[{"order":{"key":"order_3_visit#1","location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-10T16:00:00Z"}},{"time_window":{"from":"2020-11-11T06:00:00Z","to":"2020-11-21T16:00:00Z"}},{"time_window":{"from":"2020-11-22T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T06:20:00Z"},"location_time":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-18T06:00:00Z","to":"2020-11-18T16:00:00Z"},"working_time":{"from":"2020-11-18T06:00:00Z","to":"2020-11-18T16:00:00Z"}},{"availability_time":{"from":"2020-11-21T06:00:00Z","to":"2020-11-21T16:00:00Z"},"working_time":{"from":"2020-11-21T06:00:00Z","to":"2020-11-21T16:00:00Z"}},{"availability_time":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T16:00:00Z"},"working_time":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T16:00:00Z"},"trip":{"key":"trip_15_shft_perf_performer_1","trip_time":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T06:20:00Z"},"actions":[{"order":{"key":"order_1_visit#0","location":{"latitude":59.99981,"longitude":30.7191,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":10000},"order_time":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T06:20:00Z"},"location_time":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T16:00:00Z"},"working_time":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T16:00:00Z"},"trip":{"key":"trip_16_shft_perf_performer_1","trip_time":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T06:20:00Z"},"actions":[{"order":{"key":"order_4_visit#3","location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-04T16:00:00Z"}},{"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-11T16:00:00Z"}},{"time_window":{"from":"2020-11-14T06:00:00Z","to":"2020-11-18T16:00:00Z"}},{"time_window":{"from":"2020-11-21T06:00:00Z","to":"2020-11-25T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T06:20:00Z"},"location_time":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T16:00:00Z"},"working_time":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T16:00:00Z"},"trip":{"key":"trip_17_shft_perf_performer_1","trip_time":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T06:20:00Z"},"actions":[{"order":{"key":"order_3_visit#2","location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-10T16:00:00Z"}},{"time_window":{"from":"2020-11-11T06:00:00Z","to":"2020-11-21T16:00:00Z"}},{"time_window":{"from":"2020-11-22T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T06:20:00Z"},"location_time":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T06:20:00Z"}}],"waitlist":[]}},{"availability_time":{"from":"2020-11-25T06:00:00Z","to":"2020-11-25T16:00:00Z"},"working_time":{"from":"2020-11-25T06:00:00Z","to":"2020-11-25T16:00:00Z"}},{"availability_time":{"from":"2020-11-26T06:00:00Z","to":"2020-11-26T16:00:00Z"},"working_time":{"from":"2020-11-26T06:00:00Z","to":"2020-11-26T16:00:00Z"}},{"availability_time":{"from":"2020-11-27T06:00:00Z","to":"2020-11-27T16:00:00Z"},"working_time":{"from":"2020-11-27T06:00:00Z","to":"2020-11-27T16:00:00Z"}},{"availability_time":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T16:00:00Z"},"working_time":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T16:00:00Z"},"trip":{"key":"trip_21_shft_perf_performer_1","trip_time":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T06:20:00Z"},"actions":[{"order":{"key":"order_2_visit#1","location":{"latitude":59.949981,"longitude":30.248191,"arrival_duration":0,"departure_duration":0},"visits":[{"time_window":{"from":"2020-11-01T06:00:00Z","to":"2020-11-13T06:00:00Z"}},{"time_window":{"from":"2020-11-16T06:00:00Z","to":"2020-11-28T16:00:00Z"}}],"duration":20,"reward":100000},"order_time":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T06:20:00Z"},"location_time":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T06:20:00Z"}}],"waitlist":[]}}],"tariff":{"basic":{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1000000,"cost_per_minute":1,"max_time":300},"extra":[{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1000000,"cost_per_minute":2,"max_time":240},{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1000000,"cost_per_minute":3,"max_time":120}]}},"statistics":{"total_statistics":{"cost":10200,"reward":910000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":200,"arriving_time":0,"departure_time":0,"total_time":200,"distance":0,"time_window":{"from":"2020-11-02T06:00:00Z","to":"2020-11-28T06:20:00Z"}},"orders_count":10,"performers_count":10,"capacity_utilization":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"trips_statistics":[{"trip_key":"trip_4_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.949981,"longitude":30.248191,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_2_merged","demand_ids":["order_2_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-07T06:00:00Z","to":"2020-11-07T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_17_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_3_merged","demand_ids":["order_3_visit#2#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-24T06:00:00Z","to":"2020-11-24T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_6_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_4_merged","demand_ids":["order_4_visit#1#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-09T06:00:00Z","to":"2020-11-09T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_11_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_4_merged","demand_ids":["order_4_visit#2#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-16T06:00:00Z","to":"2020-11-16T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_15_shft_perf_performer_1","statistics":{"cost":1020,"reward":10000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.99981,"longitude":30.7191,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_1","demand_ids":["order_1_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-22T06:00:00Z","to":"2020-11-22T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_21_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.949981,"longitude":30.248191,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_2_merged","demand_ids":["order_2_visit#1#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-28T06:00:00Z","to":"2020-11-28T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_7_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_3_merged","demand_ids":["order_3_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-10T06:00:00Z","to":"2020-11-10T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_12_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.983293,"longitude":30.360362,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_3_merged","demand_ids":["order_3_visit#1#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-17T06:00:00Z","to":"2020-11-17T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_1_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_4_merged","demand_ids":["order_4_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-02T06:00:00Z","to":"2020-11-02T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_16_shft_perf_performer_1","statistics":{"cost":1020,"reward":100000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T06:20:00Z"}},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":59.927758,"longitude":30.3748233,"arrival_duration":0,"departure_duration":0},"location_key":"loc_order_4_merged","demand_ids":["order_4_visit#3#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"distance":0,"time_window":{"from":"2020-11-23T06:00:00Z","to":"2020-11-23T06:20:00Z"}},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}]},"validations":[],"unplanned_orders":[],"progress":100,"info":{"status":"FINISHED_IN_TIME","result_version":0,"planning_time":0,"waiting_time":0}}, 
                settings = vrt_lss_merchandiser.models.convert_settings.ConvertSettings(
                    route_index_from = 15, 
                    route_index_to = 150, )
            )
        else :
            return ConvertTask(
                plan_task = vrt_lss_merchandiser.models.plan_task.PlanTask(
                    performer = vrt_lss_merchandiser.models.performer.Performer(
                        key = 'performer0001', 
                        start_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        finish_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_type = 'CAR', 
                        shifts = [
                            vrt_lss_merchandiser.models.shift.Shift(
                                availability_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-11-21T09:30+03:00', 
                                    to = '2020-11-21T19:45Z', ), 
                                working_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-11-21T09:30+03:00', 
                                    to = '2020-11-21T19:45Z', ), 
                                trip = vrt_lss_merchandiser.models.trip.Trip(
                                    key = 'trip01', 
                                    trip_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-11-21T09:30+03:00', 
                                        to = '2020-11-21T19:45Z', ), 
                                    actions = [
                                        vrt_lss_merchandiser.models.order_action.OrderAction(
                                            order = vrt_lss_merchandiser.models.order.Order(
                                                key = 'order0001', 
                                                location = vrt_lss_merchandiser.models.location.Location(
                                                    latitude = 55.692789, 
                                                    longitude = 37.554554, 
                                                    arrival_duration = 15, 
                                                    departure_duration = 5, ), 
                                                visits = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-11-21T09:30+03:00', 
                                                            to = '2020-11-21T19:45Z', ), )
                                                    ], 
                                                facts = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-11-21T09:30+03:00', 
                                                            to = '2020-11-21T19:45Z', ), )
                                                    ], 
                                                duration = 30, 
                                                reward = 199.1, ), 
                                            order_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-11-21T09:30+03:00', 
                                                to = '2020-11-21T19:45Z', ), 
                                            location_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-11-21T09:30+03:00', 
                                                to = '2020-11-21T19:45Z', ), )
                                        ], 
                                    waitlist = [
                                        vrt_lss_merchandiser.models.trip_waitlist.Trip_waitlist()
                                        ], ), )
                            ], 
                        tariff = vrt_lss_merchandiser.models.tariff.Tariff(
                            basic = vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                cost_per_shift = 1000, 
                                cost_per_meter = 0.1, 
                                max_length = 200000, 
                                cost_per_minute = 0.2, 
                                max_time = 480, ), 
                            extra = [
                                vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                    cost_per_shift = 1000, 
                                    cost_per_meter = 0.1, 
                                    max_length = 200000, 
                                    cost_per_minute = 0.2, 
                                    max_time = 480, )
                                ], ), ), 
                    orders = [
                        vrt_lss_merchandiser.models.order.Order(
                            key = 'order0001', 
                            location = vrt_lss_merchandiser.models.location.Location(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                arrival_duration = 15, 
                                departure_duration = 5, ), 
                            visits = [
                                vrt_lss_merchandiser.models.event_window.EventWindow(
                                    time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-11-21T09:30+03:00', 
                                        to = '2020-11-21T19:45Z', ), )
                                ], 
                            duration = 30, 
                            reward = 199.1, )
                        ], 
                    settings = vrt_lss_merchandiser.models.plan_settings.PlanSettings(
                        configuration = 'default', 
                        planning_time = 30, 
                        result_ttl = 10, 
                        result_timezone = 3, 
                        predict_slots = 2, 
                        transport_factor = [
                            vrt_lss_merchandiser.models.transport_factor.TransportFactor(
                                transport_type = 'CAR', 
                                speed = 2.5, )
                            ], 
                        capacity_factor = [
                            vrt_lss_merchandiser.models.capacity_factor.CapacityFactor(
                                transport_type = 'CAR', 
                                capacity = vrt_lss_merchandiser.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), )
                            ], 
                        routing = [
                            vrt_lss_merchandiser.models.routing.Routing(
                                transport_type = 'CAR', 
                                matrix = {"waypoints":[{"latitude":59.9345,"longitude":30.1504},{"latitude":59.942383,"longitude":30.258951},{"latitude":59.9545,"longitude":30.2004},{"latitude":59.89527,"longitude":30.261747},{"latitude":59.9745,"longitude":30.5004}],"distances":[[0,5822,1820,14130,23304],[5936,0,4931,8365,17731],[1819,4853,0,13161,22335],[14859,9056,13854,0,21440],[21777,16306,20772,19290,0]],"durations":[[0,13,7,24,36],[13,0,9,13,25],[7,9,0,21,32],[26,14,22,0,30],[34,23,30,28,0]]}, 
                                traffic_jams = [
                                    vrt_lss_merchandiser.models.traffic_factor.TrafficFactor(
                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                            from = '2020-11-21T09:30+03:00', 
                                            to = '2020-11-21T19:45Z', ), 
                                        length_multiplier = 2, 
                                        length_additive = 20, 
                                        time_multiplier = 2, 
                                        time_additive = 30, )
                                    ], )
                            ], 
                        assumptions = vrt_lss_merchandiser.models.plan_assumptions.PlanAssumptions(
                            toll_roads = False, 
                            ferry_crossing = False, 
                            flight_distance = True, 
                            disable_compatibility = True, 
                            disable_capacity = True, 
                            same_order_time_window = True, 
                            expand_shift_time_window = True, ), 
                        precision = 3, ), 
                    merchandiser_settings = vrt_lss_merchandiser.models.merchandiser_settings.MerchandiserSettings(
                        accuracy = 'DAY', ), ),
        )

    def testConvertTask(self):
        """Test ConvertTask"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
