import{Modes as d}from"./types.js";function I(p,a,s,m=30){a===s&&(s=a*1.1+1,a=a/1.1-1);const c=(s-a)/m,l=[];for(let t=a;t<s;t+=c)l.push(t);let e=0;return l.map(t=>{const i=t+c;let n=0;for(;e<p.length;){const r=Math.min(s,p[e].right),o=Math.max(a,p[e].left),h=Math.min(r,i)-Math.max(o,t),u=h/(r-o)*p[e].count;if(h>0&&(n+=u),r>i)break;e++}return{x:t,dx:c,y:n}})}export function transform({data:p,mode:a}){const s=p.map(([e,t,i])=>({time:e,step:t,min:Math.min(...i.map(n=>n[0])),max:Math.max(...i.map(n=>n[1])),items:i.map(([n,r,o])=>({left:n,right:r,count:o}))})),m=Math.min(...s.map(({min:e})=>e)),c=Math.max(...s.map(({max:e})=>e)),l=s.map(({time:e,step:t,items:i})=>I(i,m,c).map(({x:n,dx:r,y:o})=>[e,t,n+r/2,Math.floor(o)]));if(a===d.Overlay)return{min:m,max:c,data:l};if(a===d.Offset){let e=Infinity,t=-Infinity,i=Infinity,n=-Infinity;const r=l.map(o=>{const h=o[0][1];return h>t&&(t=h),h<e&&(e=h),o.reduce((u,[,,g,f])=>(f>n&&(n=f),f<i&&(i=f),[...u,g,h,f]),[])});return{minX:m,maxX:c,minZ:i,maxZ:n,minStep:e,maxStep:t,data:r}}return}
