var onnx=onnx||{},base=base||require("./base"),long=long||{Long:require("long")},protobuf=protobuf||require("./protobuf");onnx.ModelFactory=class{match(t){const r=t.identifier,a=r.split(".").pop().toLowerCase();if(a=="onnx")return!0;if(a=="pb"){if(r.endsWith("saved_model.pb"))return!1;if(r.endsWith("predict_net.pb")||r.endsWith("init_net.pb"))return!1;const e=t.tags("pb");return e.size!==0&&(!(e.size>0&&e.has(1)&&e.get(1)===0&&e.has(2)&&e.get(2)===0&&e.has(9)&&e.get(9)===2)&&!(e.size>0&&Array.from(e.values()).some(o=>o===5)))&&!(e.has(1)&&e.get(1)!=0||e.has(2)&&e.get(2)!=2||e.has(3)&&e.get(3)!=2||e.has(4)&&e.get(4)!=2||e.has(5)&&e.get(5)!=0||e.has(6)&&e.get(6)!=2||e.has(8)&&e.get(8)!=2||e.has(14)&&e.get(14)!=2||!e.has(7)||e.get(7)!=2)}if(a==="pbtxt"||a==="prototxt"||a==="model"){if(r.endsWith("predict_net.pbtxt")||r.endsWith("predict_net.prototxt")||r.endsWith("init_net.pbtxt")||r.endsWith("init_net.prototxt"))return!1;const e=t.tags("pbtxt");if(e.has("ir_version"))return!0;if(e.has("graph")&&a!=="model")return!0}return!1}open(t,r){return r.require("./onnx-proto").then(()=>{let a=null;const e=t.identifier,o=e.split(".").pop().toLowerCase();if(o=="pbtxt"||o=="prototxt")try{onnx.proto=protobuf.get("onnx").onnx;const n=protobuf.TextReader.create(t.text);a=onnx.proto.ModelProto.decodeText(n)}catch(n){throw new onnx.Error("File text format is not onnx.ModelProto ("+n.message+") in '"+e+"'.")}else try{onnx.proto=protobuf.get("onnx").onnx;const n=protobuf.Reader.create(t.buffer);a=onnx.proto.ModelProto.decode(n)}catch(n){throw new onnx.Error("File format is not onnx.ModelProto ("+n.message+") in '"+e+"'.")}return onnx.Metadata.open(r).then(n=>{try{return new onnx.Model(n,a)}catch(i){r.exception(i,!1);const _=i&&i.message?i.message:i.toString();throw new onnx.Error(_.replace(/\.$/,"")+" in '"+e+"'.")}})})}},onnx.Model=class{constructor(t,r){this._graphs=[],this._irVersion=r.ir_version,this._producerName=r.producer_name,this._producerVersion=r.producer_version,this._domain=r.domain,this._modelVersion=r.model_version,this._description=r.doc_string,this._metadata=[],this._imports=null;const a={};if(r.opset_import&&r.opset_import.length>0){const o=[];for(const n of r.opset_import){let i=n.domain||"ai.onnx";const _=i+" v"+n.version;o.includes(_)||o.push(_),i=i=="ai.onnx"?"":i,(!a[i]||a[i]>n.version)&&(a[i]=n.version)}this._imports=o.join(", ")}Object.keys(a).length==0&&(a[""]=1,a["ai.onnx.ml"]=1);let e="";if(r.metadata_props){const o={};for(const n of r.metadata_props)switch(n.key){case"author":this._author=n.value;break;case"company":this._company=n.value;break;case"converted_from":this._converted_from=n.value;break;case"license":this._license=n.value;break;case"license_url":this._licenseUrl=n.value;break;case"Image.BitmapPixelFormat":case"Image.ColorSpaceGamma":case"Image.NominalPixelRange":o[n.key]=n.value;break;default:this._metadata.push({name:n.key,value:n.value})}e=[o["Image.BitmapPixelFormat"],o["Image.ColorSpaceGamma"],o["Image.NominalPixelRange"]].filter(n=>n)}if(this._graphs=[],r&&r.graph){const o=new onnx.GraphMetadata(t,a),n=new onnx.Graph(o,e,r.graph);this._graphs.push(n)}}get format(){return"ONNX"+(this._irVersion?" v"+this._irVersion.toString():"")}get imports(){return this._imports}get producer(){const t=[];return this._producerName&&t.push(this._producerName),this._producerVersion&&this._producerVersion.length>0&&t.push(this._producerVersion),t.length>0?t.join(" "):null}get domain(){return this._domain||null}get description(){return this._description||null}get author(){return this._author||null}get company(){return this._company||null}get source(){return this._converted_from||null}get license(){const t=[];return this._license&&this._license.length>0&&t.push(this._license),this._licenseUrl&&this._licenseUrl.length>0&&t.push("<a href='"+this._licenseUrl+"'>"+this._licenseUrl+"</a>"),t.length>0?t:null}get metadata(){return this._metadata}get graphs(){return this._graphs}},onnx.Graph=class{constructor(t,r,a){if(this._node="",this._description="",this._nodes=[],this._inputs=[],this._outputs=[],a){this._name=a.name||null,this._description=a.doc_string||"";const e=new Map;for(const s of a.initializer)e.set(s.name,new onnx.Tensor(s,"Initializer"));const o=[],n=new Map,i=new Map;for(const s of a.node){for(const p of s.input)n.set(p,n.has(p)?n.get(p)+1:1);for(const p of s.output)i.set(p,n.has(p)?n.get(p)+1:1)}for(const s of a.input)n.delete(s);for(const s of a.output)i.delete(s);for(const s of a.node){let p=!1;if(s.op_type=="Constant"&&s.input.length==0&&s.output.length==1){const h=s.output[0];if(n.has(h)&&n.get(h)==1&&i.has(h)&&i.get(h)==1&&s.attribute.length==1){const l=s.attribute[0];l&&l.name=="value"&&l.t&&(e.set(h,new onnx.Tensor(l.t,"Constant")),p=!0)}}p||o.push(s)}const _=new Map;for(const s of a.quantization_annotation){const p={};for(const h of s.quant_parameter_tensor_names)p[h.key]=h.value;_.set(s.tensor_name,p)}const m=new Map,d=(s,p,h,l,u)=>{if(!m.has(s)){p=l?l.type:p?onnx.Utility.formatType(p,u):null;const c=_.get(s);m.set(s,new onnx.Argument(s,p,l,c,h))}return m.get(s)};for(const s of a.value_info)d(s.name,s.type,s.doc_string,e.get(s.name),r);for(const s of a.input){const p=d(s.name,s.type,s.doc_string,e.get(s.name),r);e.has(s.name)||this._inputs.push(new onnx.Parameter(s.name,[p]))}for(const s of a.output){const p=d(s.name,s.type,s.doc_string,e.get(s.name),r);this._outputs.push(new onnx.Parameter(s.name,[p]))}for(const s of o){let p=[];const h=t.type(s.op_type);if(s.input&&s.input.length>0){let u=0;if(h&&h.inputs){for(const c of h.inputs)if(u<s.input.length||c.option!="optional"){const y=c.option=="variadic"?s.input.length-u:1,T=s.input.slice(u,u+y).map(g=>d(g,null,null,e.get(g),r));u+=y,p.push(new onnx.Parameter(c.name,T))}}else p=p.concat(s.input.slice(u).map((c,y)=>new onnx.Parameter((u+y).toString(),[d(c,null,null,null,r)])))}let l=[];if(s.output&&s.output.length>0){let u=0;if(h&&h.outputs){for(const c of h.outputs)if(u<s.output.length||c.option!="optional"){const y=c.option=="variadic"?s.output.length-u:1,T=s.output.slice(u,u+y).map(g=>d(g,null,null,null,r));u+=y,l.push(new onnx.Parameter(c.name,T))}}else l=l.concat(s.output.slice(u).map((c,y)=>new onnx.Parameter((u+y).toString(),[d(c,null,null,null,r)])))}this._nodes.push(new onnx.Node(t,r,s.op_type,s.domain,s.name,s.doc_string,s.attribute,p,l))}}}get name(){return this._name}get description(){return this._description}get groups(){return!1}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}toString(){return"graph("+this.name+")"}},onnx.Parameter=class{constructor(t,r){this._name=t,this._arguments=r}get name(){return this._name}get visible(){return!0}get arguments(){return this._arguments}},onnx.Argument=class{constructor(t,r,a,e,o){if(typeof t!="string")throw new onnx.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=r||null,this._initializer=a||null,this._annotation=e,this._description=o||""}get name(){return this._name}get type(){return this._type}get description(){return this._description}get quantization(){return this._annotation?Object.keys(this._annotation).map(t=>t+": "+this._annotation[t]).join(", "):null}get initializer(){return this._initializer}},onnx.Node=class{constructor(t,r,a,e,o,n,i,_,m){this._metadata=t,this._type=a,this._domain=e||"",this._name=o||"",this._description=n||"",this._inputs=_,this._outputs=m,this._attributes=(i||[]).map(d=>new onnx.Attribute(this._metadata,r,this.type,d))}get type(){return this._type}get name(){return this._name}get description(){return this._description}get metadata(){return this._metadata.type(this._type)}get domain(){return this._domain}get group(){return null}get attributes(){return this._attributes}get inputs(){return this._inputs}get outputs(){return this._outputs}},onnx.Attribute=class{constructor(t,r,a,e){this._name=e.name,this._description=e.doc_string||"",this._type=null,this._value=null;const o=t.attribute(a,e.name);if(!this._type)if(Object.prototype.hasOwnProperty.call(e,"type")){if(!onnx.Attribute._attributeTypeMap){const i={};i[onnx.proto.AttributeProto.AttributeType.UNDEFINED]="undefined",i[onnx.proto.AttributeProto.AttributeType.FLOAT]="float32",i[onnx.proto.AttributeProto.AttributeType.INT]="int64",i[onnx.proto.AttributeProto.AttributeType.STRING]="string",i[onnx.proto.AttributeProto.AttributeType.TENSOR]="tensor",i[onnx.proto.AttributeProto.AttributeType.GRAPH]="graph",i[onnx.proto.AttributeProto.AttributeType.FLOATS]="float32",i[onnx.proto.AttributeProto.AttributeType.INTS]="int64[]",i[onnx.proto.AttributeProto.AttributeType.STRINGS]="string[]",i[onnx.proto.AttributeProto.AttributeType.TENSORS]="tensor[]",i[onnx.proto.AttributeProto.AttributeType.GRAPHS]="graph[]",onnx.Attribute._attributeTypeMap=i}const n=onnx.Attribute._attributeTypeMap[e.type];this._type=n||onnx.Attribute._attributeTypeMap[onnx.proto.AttributeProto.AttributeType.UNDEFINED]}else o&&o.type&&(this._type=o.type);if(e.ints&&e.ints.length>0)this._value=e.ints;else if(e.floats&&e.floats.length>0)this._value=e.floats;else if(e.strings&&e.strings.length>0)this._value=e.strings.map(n=>onnx.Utility.decodeText(n));else if(e.graphs&&e.graphs.length>0)this._value=e.graphs.map(n=>new onnx.Graph(t,r,n)),this._type="graph[]";else if(e.s&&e.s.length>0)switch(a){case"Int8GivenTensorFill":this._value=Array.from(e.s);break;default:this._value=onnx.Utility.decodeText(e.s)}else Object.prototype.hasOwnProperty.call(e,"f")?this._value=e.f:Object.prototype.hasOwnProperty.call(e,"i")?this._value=e.i:Object.prototype.hasOwnProperty.call(e,"t")?(this._type="tensor",this._value=new onnx.Tensor(e.t).value):Object.prototype.hasOwnProperty.call(e,"g")&&(this._type="graph",this._value=new onnx.Graph(t,r,e.g));o&&Object.prototype.hasOwnProperty.call(o,"default")&&o.default&&this._value==o.default&&(this._visible=!1)}get name(){return this._name}get type(){return this._type}get value(){return this._value}get description(){return this._description}get visible(){return this._visible!=0}},onnx.Tensor=class{constructor(t,r){if(this._tensor=t,this._name=t.name||"",this._kind=r||null,this._type=new onnx.TensorType(this._tensor.data_type,new onnx.TensorShape(this._tensor.dims.map(a=>a)),null),this._tensor.data_type==onnx.proto.TensorProto.DataType.FLOAT16&&this._tensor.int32_data&&this._tensor.int32_data.length>0){const a=new Uint8Array(this._tensor.int32_data.length<<1),e=new DataView(a.buffer,a.byteOffset,a.byteLength),o=this._tensor.int32_data;for(let n=0;n<o.length;n++)e.setUint16(n<<1,o[n],!0);this._tensor.raw_data=a,delete this._tensor.int32_data}}get name(){return this._name}get kind(){return this._kind}get type(){return this._type}get state(){return this._context().state||null}get value(){const t=this._context();return t.state?null:(t.limit=Number.MAX_SAFE_INTEGER,this._decode(t,0))}toString(){const t=this._context();if(t.state)return"";t.limit=1e4;const r=this._decode(t,0);return onnx.Tensor._stringify(r,"","    ")}_context(){const t={index:0,count:0,state:null};if(!this._tensor.data_type)return t.state="Tensor has no data type.",t;if(!this._tensor.dims)return t.state="Tensor has no dimensions.",t;if(this._tensor.data_location===onnx.proto.TensorProto.DataLocation.EXTERNAL)return t.state="External data not implemented.",t;switch(t.dataType=this._type.dataType,t.shape=this._type.shape.dimensions,this._tensor.data_type){case onnx.proto.TensorProto.DataType.FLOAT:this._tensor.float_data&&this._tensor.float_data.length>0?t.data=this._tensor.float_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.DOUBLE:this._tensor.double_data&&this._tensor.double_data.length>0?t.data=this._tensor.double_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.FLOAT16:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.BOOL:case onnx.proto.TensorProto.DataType.INT8:case onnx.proto.TensorProto.DataType.UINT8:case onnx.proto.TensorProto.DataType.INT16:case onnx.proto.TensorProto.DataType.UINT16:case onnx.proto.TensorProto.DataType.INT32:this._tensor.int32_data&&this._tensor.int32_data.length>0?t.data=this._tensor.int32_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.UINT32:this._tensor.uint64_data&&this._tensor.uint64_data.length>0?t.data=this._tensor.uint64_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.INT64:this._tensor.int64_data&&this._tensor.int64_data.length>0?t.data=this._tensor.int64_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;case onnx.proto.TensorProto.DataType.UINT64:this._tensor.uint64_data&&this._tensor.uint64_data.length>0?t.data=this._tensor.uint64_data:this._tensor.raw_data&&this._tensor.raw_data.length>0?t.rawData=new DataView(this._tensor.raw_data.buffer,this._tensor.raw_data.byteOffset,this._tensor.raw_data.byteLength):t.state="Tensor data is empty.";break;default:t.state="Tensor data type is not implemented."}return t}_decode(t,r){const a=t.shape.length!==0?t.shape:[1],e=[],o=a[r];if(r==a.length-1)for(let n=0;n<o;n++){if(t.count>t.limit)return e.push("..."),e;if(t.data){let i=t.data[t.index++];switch(this._tensor.data_type){case onnx.proto.TensorProto.DataType.BOOL:i=i!==0}e.push(i),t.count++}else if(t.rawData)switch(this._tensor.data_type){case onnx.proto.TensorProto.DataType.FLOAT16:e.push(t.rawData.getFloat16(t.index,!0)),t.index+=2,t.count++;break;case onnx.proto.TensorProto.DataType.FLOAT:e.push(t.rawData.getFloat32(t.index,!0)),t.index+=4,t.count++;break;case onnx.proto.TensorProto.DataType.DOUBLE:e.push(t.rawData.getFloat64(t.index,!0)),t.index+=8,t.count++;break;case onnx.proto.TensorProto.DataType.INT8:e.push(t.rawData.getInt8(t.index,!0)),t.index++,t.count++;break;case onnx.proto.TensorProto.DataType.UINT8:e.push(t.rawData.getUint8(t.index,!0)),t.index++,t.count++;break;case onnx.proto.TensorProto.DataType.INT16:e.push(t.rawData.getInt16(t.index,!0)),t.index+=2,t.count++;break;case onnx.proto.TensorProto.DataType.UINT16:e.push(t.rawData.getUint16(t.index,!0)),t.index+=2,t.count++;break;case onnx.proto.TensorProto.DataType.INT32:e.push(t.rawData.getInt32(t.index,!0)),t.index+=4,t.count++;break;case onnx.proto.TensorProto.DataType.UINT32:e.push(t.rawData.getUint32(t.index,!0)),t.index+=4,t.count++;break;case onnx.proto.TensorProto.DataType.INT64:e.push(new long.Long(t.rawData.getUint32(t.index,!0),t.rawData.getUint32(t.index+4,!0),!1)),t.index+=8,t.count++;break;case onnx.proto.TensorProto.DataType.UINT64:e.push(new long.Long(t.rawData.getUint32(t.index,!0),t.rawData.getUint32(t.index+4,!0),!0)),t.index+=8,t.count++;break;case onnx.proto.TensorProto.DataType.BOOL:e.push(t.rawData.getInt8(t.index,!0)!==0),t.index+=1,t.count++}}else for(let n=0;n<o;n++){if(t.count>t.limit)return e.push("..."),e;e.push(this._decode(t,r+1))}return t.shape.length==0?e[0]:e}static _stringify(t,r,a){if(Array.isArray(t)){const e=[];e.push(r+"[");const o=t.map(n=>onnx.Tensor._stringify(n,r+a,a));return o.length>0&&e.push(o.join(`,
`)),e.push(r+"]"),e.join(`
`)}return typeof t=="string"?r+t:t==1/0?r+"Infinity":t==-1/0?r+"-Infinity":isNaN(t)?r+"NaN":r+t.toString()}},onnx.TensorType=class{constructor(t,r,a){this._dataType=onnx.Utility.formatElementType(t),this._shape=r,this._denotation=a||null}get dataType(){return this._dataType}get shape(){return this._shape}get denotation(){return this._denotation}toString(){return this.dataType+this._shape.toString()}},onnx.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions&&this._dimensions.length!=0?"["+this._dimensions.join(",")+"]":""}},onnx.SequenceType=class{constructor(t,r){this._elementType=t,this._denotation=r}get elementType(){return this._elementType}get dennotation(){return this._dennotation}toString(){return"sequence<"+this._elementType.toString()+">"}},onnx.MapType=class{constructor(t,r,a){this._keyType=onnx.Utility.formatElementType(t),this._valueType=r,this._denotation=a}get keyType(){return this._keyType}get valueType(){return this._valueType}get denotation(){return this._denotation}toString(){return"map<"+this._keyType+","+this._valueType.toString()+">"}},onnx.OpaqueType=class{constructor(t,r){this._domain=t,this._name=r}toString(){return"opaque<"+((this._domain?this._domain+".":"")+this._name)+">"}},onnx.GraphMetadata=class{constructor(t,r){this._metadata=t,this._imports=r,this._cache=new Map,this._attributeCache=new Map}type(t){return this._cache.has(t)||this._cache.set(t,this._metadata.type(t,this._imports)),this._cache.get(t)}attribute(t,r){const a=t+":"+r;if(!this._attributeCache.has(a)){const e=this.type(t);if(e&&e.attributes&&e.attributes.length>0)for(const o of e.attributes)this._attributeCache.set(t+":"+o.name,o);this._attributeCache.has(a)||this._attributeCache.set(a,null)}return this._attributeCache.get(a)}},onnx.Metadata=class{static open(t){return onnx.Metadata._metadata?Promise.resolve(onnx.Metadata._metadata):t.request(null,"onnx-metadata.json","utf-8").then(r=>(onnx.Metadata._metadata=new onnx.Metadata(r),onnx.Metadata._metadata)).catch(()=>(onnx.Metadata._metadata=new onnx.Metadata(null),onnx.Metadata._metadata))}constructor(t){if(this._map={},t){const r=JSON.parse(t);if(r){for(const a of r)if(a.name&&a.schema){const e=a.name;a.schema.name=e,this._map[e]=this._map[e]||[],this._map[e].push(a.schema)}}}}type(t,r){let a=null;const e=this._map[t];if(e){let o=-1;for(const n of e){const i=r[n.domain==="ai.onnx"?"":n.domain],_=n.since_version;i>=_&&o<_&&(o=_,a=n)}}return a}},onnx.Utility=class{static decodeText(t){return onnx.Utility._utf8Decoder=onnx.Utility._utf8Decoder||new TextDecoder("utf-8"),onnx.Utility._utf8Decoder.decode(t)}static formatElementType(t){if(!onnx.Utility._elementTypeMap){const a={};a[onnx.proto.TensorProto.DataType.UNDEFINED]="UNDEFINED",a[onnx.proto.TensorProto.DataType.FLOAT]="float32",a[onnx.proto.TensorProto.DataType.UINT8]="uint8",a[onnx.proto.TensorProto.DataType.INT8]="int8",a[onnx.proto.TensorProto.DataType.UINT16]="uint16",a[onnx.proto.TensorProto.DataType.INT16]="int16",a[onnx.proto.TensorProto.DataType.INT32]="int32",a[onnx.proto.TensorProto.DataType.INT64]="int64",a[onnx.proto.TensorProto.DataType.STRING]="string",a[onnx.proto.TensorProto.DataType.BOOL]="bool",a[onnx.proto.TensorProto.DataType.FLOAT16]="float16",a[onnx.proto.TensorProto.DataType.DOUBLE]="float64",a[onnx.proto.TensorProto.DataType.UINT32]="uint32",a[onnx.proto.TensorProto.DataType.UINT64]="uint64",a[onnx.proto.TensorProto.DataType.COMPLEX64]="complex64",a[onnx.proto.TensorProto.DataType.COMPLEX128]="complex128",a[onnx.proto.TensorProto.DataType.BFLOAT16]="bfloat16",onnx.Utility._elementTypeMap=a}const r=onnx.Utility._elementTypeMap[t];return r||onnx.Utility._elementTypeMap[onnx.proto.TensorProto.DataType.UNDEFINED]}static formatType(t,r){if(!t)return null;let a="";switch(t.denotation){case"TENSOR":a="Tensor";break;case"IMAGE":a="Image"+(r?"("+r.join(",")+")":"");break;case"AUDIO":a="Audio";break;case"TEXT":a="Text"}switch(t.value){case"tensor_type":case"sparse_tensor_type":{let e=[];return t.tensor_type.shape&&t.tensor_type.shape.dim&&(e=t.tensor_type.shape.dim.map(o=>o.dim_param?o.dim_param:o.dim_value)),new onnx.TensorType(t.tensor_type.elem_type,new onnx.TensorShape(e),a)}case"map_type":return new onnx.MapType(t.map_type.key_type,onnx.Utility.formatType(t.map_type.value_type,r),a);case"sequence_type":return new onnx.SequenceType(onnx.Utility.formatType(t.sequence_type.elem_type,r),a);case"opaque_type":return new onnx.OpaqueType(t.opaque_type.domain,t.opaque_type.name)}return null}},onnx.Error=class extends Error{constructor(t){super(t),this.name="Error loading ONNX model."}},typeof module!="undefined"&&typeof module.exports=="object"&&(module.exports.ModelFactory=onnx.ModelFactory);
