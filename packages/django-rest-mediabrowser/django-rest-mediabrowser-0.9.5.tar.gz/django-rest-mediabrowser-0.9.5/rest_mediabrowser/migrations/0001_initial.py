# Generated by Django 3.1.1 on 2020-11-23 06:20

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import rest_mediabrowser.models
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=500, verbose_name='name')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_mediabrowser.node')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rest_mediabrowser.collection')),
            ],
            bases=('rest_mediabrowser.node',),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_mediabrowser.node')),
                ('published', models.BooleanField(default=False, verbose_name='Status')),
                ('published_path', models.CharField(blank=True, max_length=500, verbose_name='Published Path')),
                ('extension', models.CharField(blank=True, max_length=50, verbose_name='Extension')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='rest_mediabrowser.collection', verbose_name='collection')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            bases=('rest_mediabrowser.node',),
        ),
        migrations.CreateModel(
            name='NodePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('e', 'Edit'), ('v', 'View')], max_length=2, verbose_name='permission')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes_through', to='rest_mediabrowser.node')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'node')},
            },
        ),
        migrations.AddField(
            model_name='node',
            name='shared_with',
            field=models.ManyToManyField(related_name='shared_nodes', through='rest_mediabrowser.NodePermission', to=settings.AUTH_USER_MODEL, verbose_name='shared_with'),
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('media_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_mediabrowser.media')),
                ('file', models.FileField(max_length=500, storage=django.core.files.storage.FileSystemStorage(location='/app/server/mediabrowser_files'), upload_to=rest_mediabrowser.models.file_upload_path, verbose_name='file')),
            ],
            bases=('rest_mediabrowser.media',),
        ),
        migrations.CreateModel(
            name='MediaImage',
            fields=[
                ('media_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_mediabrowser.media')),
                ('alt_text', models.CharField(blank=True, max_length=100, verbose_name='alternative text')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='height')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='width')),
                ('image', models.ImageField(height_field='height', max_length=500, storage=django.core.files.storage.FileSystemStorage(location='/app/server/mediabrowser_files'), upload_to=rest_mediabrowser.models.image_upload_path, verbose_name='image', width_field='width')),
                ('thumbnail', models.ImageField(blank=True, max_length=500, null=True, storage=django.core.files.storage.FileSystemStorage(location='/app/server/mediabrowser_files'), upload_to=rest_mediabrowser.models.image_thumbnail_path, verbose_name='Thumbnail')),
                ('versions', models.JSONField(blank=True, null=True)),
            ],
            bases=('rest_mediabrowser.media',),
        ),
    ]
