# coding: utf-8

"""
    VeeRoute.LSS Lastmile

    VeeRoute.LSS Lastmile API  # noqa: E501

    The version of the OpenAPI document: 3.6.163884
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_lastmile
from vrt_lss_lastmile.models.possible_event import PossibleEvent  # noqa: E501
from vrt_lss_lastmile.rest import ApiException

class TestPossibleEvent(unittest.TestCase):
    """PossibleEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PossibleEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_lastmile.models.possible_event.PossibleEvent()  # noqa: E501
        if include_optional :
            return PossibleEvent(
                location_key = 'location01', 
                duration = 10, 
                reward = 199.9, 
                time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ), 
                soft_time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', )
            )
        else :
            return PossibleEvent(
                location_key = 'location01',
                time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ),
        )

    def testPossibleEvent(self):
        """Test PossibleEvent"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
