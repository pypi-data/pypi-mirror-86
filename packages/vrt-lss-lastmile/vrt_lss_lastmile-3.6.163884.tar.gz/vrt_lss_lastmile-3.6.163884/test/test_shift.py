# coding: utf-8

"""
    VeeRoute.LSS Lastmile

    VeeRoute.LSS Lastmile API  # noqa: E501

    The version of the OpenAPI document: 3.6.163884
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_lastmile
from vrt_lss_lastmile.models.shift import Shift  # noqa: E501
from vrt_lss_lastmile.rest import ApiException

class TestShift(unittest.TestCase):
    """Shift unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Shift
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_lastmile.models.shift.Shift()  # noqa: E501
        if include_optional :
            return Shift(
                key = 'shift01', 
                shift_type = 'PERFORMER', 
                resource_key = 'performer01', 
                availability_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ), 
                working_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ), 
                start_location_key = 'location01', 
                finish_location_key = 'location01', 
                tariff = vrt_lss_lastmile.models.universal_tariff.UniversalTariff(
                    cost_per_shift = 2000, 
                    constraints = [
                        vrt_lss_lastmile.models.tariff_constraint.TariffConstraint(
                            stage_length = 200000, 
                            cost_per_unit = 1.5, )
                        ], ), 
                attributes = ["Name:X51"]
            )
        else :
            return Shift(
                key = 'shift01',
                shift_type = 'PERFORMER',
                resource_key = 'performer01',
                availability_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ),
                working_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                    from = '2020-11-21T09:30+03:00', 
                    to = '2020-11-21T19:45Z', ),
        )

    def testShift(self):
        """Test Shift"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
