# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/04_utils.ipynb (unless otherwise specified).

__all__ = ['ConcurrentMap']

# Internal Cell
from math import log, log10, log2
from concurrent.futures import ProcessPoolExecutor
import os


def logx(y, x=10):
    return log(y) / log(x)


# Cell
class ConcurrentMap:
    """Helper class to provide `map` function using multiple cores."""
    def __init__(self, n_jobs):
        """Create a ConcurrentMap instance, the map attribute can be used as map function in toolbox.

        **Parameters**

        - n_jobs: number of cores to use. If n_jobs<0, the number will set to the number of cores available.
        """
        if n_jobs < 0:
            n_jobs = os.cpu_count()
        if n_jobs == 1:
            self._executor = None
            self.map = map
        else:
            self._executor = ProcessPoolExecutor(n_jobs)
            self.map = self._executor.map

    def close(self):
        "Close the pool for the `map` function."
        if self._executor is not None:
            self._executor.shutdown()