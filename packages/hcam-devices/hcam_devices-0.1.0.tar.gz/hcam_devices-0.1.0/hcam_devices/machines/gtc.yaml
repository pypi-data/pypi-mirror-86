statechart:
  name: GTC Telescope state
  description: |
    The GTC environment uses a CORBA server to handle language agnostic RPC
    calls to devices on the network. We use this CORBA server to check the
    telescope status, request offsets and check when the telescope is in position.

    An instance of hcam_devices.gtc.corba.TelescopeServer, named "server" is expected in the
    initial context.
  preamble: |
    telpars = None
    rack_temp = None
    humidity = None

  root state:
    name: active
    initial: offline
    states:
      - name: offline
        transitions:
        - target: online
          guard: after(10) and server.ready

      - name: online
        initial: in position
        transitions:
          - target: offline
            guard: after(60) and not server.ready

          - guard: idle(5)
            action: |
              telpars = server.getTelescopeParams()
              humidity = server.getHumidity()
              rack_temp = server.getCabinetTemperature1()

        states:
          - name: offsetting
            on exit: print('telescope ready')
            transitions:
              - target: in position history
                guard: after(0.2) and server.in_position()

          - name: nodding
            on exit: print('telescope ready')
            transitions:
              - target: idle
                guard: after(0.2) and server.in_position()

          - name: in position
            initial: nodding disabled

            transitions:
              - target: offsetting
                event: do_offset
                action: |
                  raoff = event.raoff
                  decoff = event.decoff
                  print('sending offsets to telescope: ', raoff, decoff)
                  server.requestTelescopeOffset(raoff, decoff)

            states:
              - name: in position history
                type: deep history

              - name: nodding disabled
                transitions:
                  - target: nodding enabled
                    event: start_nodding
                  - target: nodding disabled
                    event: stop_nodding

              - name: nodding enabled
                initial: idle
                transitions:
                  - target: nodding disabled
                    event: stop_nodding

                states:
                - name: idle
                  transitions:
                    - target: waiting_for_frame
                      guard: after(0.01)
                      action: |
                        send('trigger_exposure')
                        print('starting exposure')

                - name: waiting_for_frame
                  transitions:
                  - target: nodding
                    event: frame_written
                    action: |
                      raoff = event.raoff
                      decoff = event.decoff
                      print('sending offsets to telescope: ', raoff, decoff)
                      server.requestTelescopeOffset(raoff, decoff)





