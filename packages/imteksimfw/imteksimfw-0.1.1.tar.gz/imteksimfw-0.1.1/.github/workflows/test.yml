name: test

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        dtool-lookup-server-container-composition-version: [0.1.2]
        fireworks-version: [1.9.6]

    steps:
    - name: Git checkout this
      uses: actions/checkout@v2

    - name: Git checkout dtool-lookup-server-container-composition ${{ matrix.dtool-lookup-server-container-composition-version }}
      uses: actions/checkout@v2
      with:
        repository: jotelha/dtool-lookup-server-container-composition
        ref: ${{ matrix.dtool-lookup-server-container-composition-version }}
        path: dtool-lookup-server-container-composition

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install podman
      run: |
        source /etc/os-release
        echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
        curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y install podman
        echo "podman info"
        podman info

    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#using-workflow-commands-to-access-toolkit-functions
    - name: Install podman extras
      id: install-podman-extras
      run: |
        pip install PyYAML
        pip install git+https://github.com/containers/podman-compose.git@devel
        pip install shyaml  # for parsing yaml on command line

        podman info | shyaml get-value store.graphRoot | xargs -I{} echo '::set-output name=podman_graph_root::{}'

    # https://github.com/actions/cache
    - name: Cache container images
      id: cache-container-images 
      uses: actions/cache@v2
      with:
        path: ${{ steps.install-podman-extras.outputs.podman_graph_root }}/vfs-images
        key: podman-graph-root-vfs-images-${{ runner.os }}-dls-${{ matrix.dtool-lookup-server-container-composition-version }}-py-${{ matrix.python-version }}-fw-${{ matrix.fireworks-version }}
        restore-keys: |
          podman-graph-root-vfs-images-${{ runner.os }}-dls-${{ matrix.dtool-lookup-server-container-composition-version }}-py-${{ matrix.python-version }}-fw-${{ matrix.ireworks-version }}
          podman-graph-root-vfs-images-${{ runner.os }}-dls-${{ matrix.dtool-lookup-server-container-composition-version }}-py-${{ matrix.python-version }}-
          podman-graph-root-vfs-images-${{ runner.os }}-dls-${{ matrix.dtool-lookup-server-container-composition-version }}-

    - name: Pull container images and prepare composition
      if: steps.cache-container-images.outputs.cache-hit != 'true'
      run: |
        cd dtool-lookup-server-container-composition 

        podman-compose pull  # won't pull images that have a build command in the compose file
        echo "podman image ls"
        podman image ls

        echo "generate certs and keys"
        cd keys
        bash generate.sh
        bash generate_jwt_key.sh        

    - name: Install basic testing requirements
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel setuptools-scm[toml] importlib-metadata
        pip install flake8 pytest pytest-cov

    - name: Install modified fireworks
      run: |
        pip install git+https://github.com/jotelha/fireworks.git@v${{ matrix.fireworks-version }}-mod

    - name: Install this package
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install ".[testing]"
        echo "pip list"
        pip list

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Provide dtool lookup server ${{ matrix.dtool-lookup-server-version }} and test with pytest
      run: |
        
        cd dtool-lookup-server-container-composition
        podman-compose -p dtool-lookup-server-container-composition up -d --no-build  # will pull missing images with build command in compose file
        cd ..

        sleep 10
       
        echo "podman pod ls"
        podman pod ls
        
        echo "podman container ls --all"
        podman container ls --all
  
        echo "podman volume ls"
        podman volume ls

        echo "podman image ls"
        podman image ls
    
        echo "dtool lookup server log"
        podman logs dtool-lookup-server-container-composition_dtool_lookup_server_1

        echo "dtool lookup client log"
        podman logs dtool-lookup-server-container-composition_dtool_lookup_client_1

        echo "dtool ls smb://test-share"
        podman run -it --pod dtool-lookup-server-container-composition jotelha/dtool-lookup-client dtool ls smb://test-share

        echo "explicitly re-evoke dataset indexing"
        podman exec -it dtool-lookup-server-container-composition_dtool_lookup_server_1 /refresh_index
        
        echo "dtool query '{}'"
        podman run -it --pod dtool-lookup-server-container-composition jotelha/dtool-lookup-client dtool query '{}'

        sleep 10
        pytest --log-level DEBUG --deselect=dtool-lookup-server-container-composition
