# default container
container:
  image: python:3.8


black_task:
  auto_cancellation: true
  name: Black Formatting
  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - pip install `cat requirements/development.txt | grep black`
  test_script:
    - black --check .


lint_task:
  auto_cancellation: true
  name: Flake8 Linting
  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - pip install `cat requirements/development.txt | grep flake8`
  test_script:
    - flake8 napari

linux_task:
  auto_cancellation: true


  matrix:
    env:
      PY_VER: "3.7"
      PYTEST_FLAGS: ""
      PIP_FLAGS: ""
    env:
      PY_VER: "3.7"
      MIN_REQ: "1"
      # needed for NumPy 1.16 compatibility with dask arrays; see:
      # https://github.com/napari/napari/pull/1617#issuecomment-692372655
      NUMPY_EXPERIMENTAL_ARRAY_FUNCTION: "1"
      PIP_FLAGS: ""
    env:
      PY_VER: "3.8"
      PYTEST_FLAGS: ""
      PIP_FLAGS: ""
    env:
      PY_VER: "3.8"
      PYTEST_FLAGS: --perfmon-only
      NAPARI_PERFMON: "1"
      PIP_FLAGS: ""
    env:
      PY_VER: "3.8"
      PYTEST_FLAGS: --async_only
      NAPARI_ASYNC: "1"
      PIP_FLAGS: ""
    env:
      # Early warning signal if upcoming dependency releases will break napari
      PY_VER: "3.8"
      PIP_FLAGS: "--pre"

  name: linux ${PY_VER}

  container:
    image: ubuntu:latest

  env:
    PATH: $HOME/conda/bin:$PATH
    TZ: America/Los_Angeles
    DISPLAY: ":99"
    CODECOV_TOKEN: ENCRYPTED[be41b51dac12576cfe9889ddd604d1f9db97cee5db0d98f7241fc8d5adf8d23da1135cd67e20b2ecec4005ac03083286]

  system_script:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    - apt-get update
    - apt-get install -y libgl1-mesa-glx xvfb libqt5x11extras5 herbstluftwm
    - apt-get install -y libgl1-mesa-glx xvfb libqt5x11extras5 herbstluftwm curl git gcc
    - apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

  conda_script:
    - curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > install.sh
    - bash install.sh -b -p $HOME/conda
    # https://github.com/napari/napari/pull/594#issuecomment-542475164
    - conda install --yes -c conda-forge setuptools
    - conda install -y -n base conda=4.8.3
    - conda install -y python=$PY_VER

  # https://github.com/cirruslabs/cirrus-ci-docs/issues/97
  xvfb_start_background_script: Xvfb $DISPLAY -ac -screen 0 1024x768x24
  # https://pytest-qt.readthedocs.io/en/latest/troubleshooting.html#xvfb-assertionerror-timeouterror-when-using-waituntil-waitexposed-and-ui-events
  herbstluftwm_start_background_script: herbstluftwm

  pip_cache:
    folder: ~/.cache/pip
    fingerprint_script:
      - echo $PYTHON_VERSION
      - cat requirements/test.txt
    populate_script:
      - python -m pip install --retries 3 --upgrade pip
      - python -m pip install --retries 3 -r requirements/test.txt $PIP_FLAGS

  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - python -m pip install --retries 3 -r requirements/test.txt $PIP_FLAGS
    - python -m pip install --retries 3 pytest-cov codecov
    - python tools/minreq.py  # no-op if MIN_REQ is not set
    - python -m pip install -e .[pyside2] $PIP_FLAGS

  check_script:
    - conda list
    - python -c "import napari; print(napari.__version__)"

  test_pyside2_with_coverage_script: |
    if [[ $PYTEST_FLAGS == "" ]]; then
      pytest -v --cov-report=xml --cov=./napari
      codecov
    fi;

  test_pyqt5_script:
    - python -m pip uninstall -y pyside2
    - python -m pip install -e .[pyqt5]
    - pytest napari -v $PYTEST_FLAGS

mac_task:
  auto_cancellation: true

  matrix:
    # not a pull request: run full suite
    - only_if: $CIRRUS_PR == ""
      matrix:
        env:
          PY_VER: "3.7"
          PIP_FLAGS: ""
        env:
          PY_VER: "3.8"
          PIP_FLAGS: ""
        env:
          # Early warning signal if upcoming dependency releases will break napari
          PY_VER: "3.8"
          PIP_FLAGS: "--pre"
    # is a pull request, only run python 3.8
    - only_if: $CIRRUS_PR != ""
      env:
        PY_VER: "3.8"

  name: macos ${PY_VER}
  osx_instance:
    image: catalina-xcode
  env:
    PATH: $HOME/conda/bin:$PATH
  conda_script:
    - curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > install.sh
    - bash install.sh -b -p $HOME/conda
    # https://github.com/napari/napari/pull/594#issuecomment-542475164
    - conda install --yes -c conda-forge setuptools
    - conda install -y -n base conda=4.8.3
    - conda install -y python=$PY_VER

  pip_cache:
    folder: $HOME/Library/Caches/pip
    fingerprint_script:
      - echo $PYTHON_VERSION
      - cat requirements/test.txt
    populate_script:
      - export MACOSX_DEPLOYMENT_TARGET=10.10
      - python -m pip install --retries 3 --upgrade pip
      - python -m pip install --retries 3 -r requirements/test.txt $PIP_FLAGS

  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - python -m pip install --retries 3 -r requirements/test.txt $PIP_FLAGS
    - python -m pip install -e .[pyside2] $PIP_FLAGS

  check_script:
    - conda list
    - python -c "import napari; print(napari.__version__)"

  test_script: pytest -v


win_task:
  auto_cancellation: true

  matrix:
    # not a pull request: run full suite
    - only_if: $CIRRUS_PR == ""
      matrix:
        env:
          PY_VER: "3.7"
          PIP_FLAGS: ""
        env:
          PY_VER: "3.8"
          PIP_FLAGS: ""
        env:
          # Early warning signal if upcoming dependency releases will break napari
          PY_VER: "3.8"
          PIP_FLAGS: "--pre"
    # is a pull request, only run python 3.8
    - only_if: $CIRRUS_PR != ""
      env:
        PY_VER: "3.8"
        PIP_FLAGS: ""

  name: windows ${PY_VER}
  windows_container:
    image: cirrusci/windowsservercore:cmake
    os_version: 2019
  env:
    ANACONDA_LOCATION: $USERPROFILE\anaconda
    PATH: $ANACONDA_LOCATION\Scripts;$ANACONDA_LOCATION;$PATH
    # must set this to its default since it doesn't work in env variables
    # see https://github.com/cirruslabs/cirrus-ci-docs/issues/423
    CIRRUS_WORKING_DIR: C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build
    # https://github.com/vispy/vispy/blob/v0.5.3/appveyor.yml#L44
    VISPY_GL_LIB: $CIRRUS_WORKING_DIR\opengl32.dll
    PYTHON_ARCH: 64

  system_script:
    # install OpenSSL
    - choco install -y openssl.light
    # install OpenGL
    - ps: Invoke-RestMethod -Uri https://raw.githubusercontent.com/vispy/vispy/v0.5.3/make/install_opengl.ps1 -Method Get -OutFile opengl.ps1
    - powershell ./opengl.ps1
    - ps: rm opengl.ps1

  conda_script:
    - choco install -y miniconda3 --params="'/D:%ANACONDA_LOCATION%'"
    # https://github.com/napari/napari/pull/594#issuecomment-542475164
    - conda install --yes -c conda-forge setuptools
    - conda install -y -n base conda=4.8.3
    - conda install -y python=%PY_VER%

  pip_cache:
    folder: $LOCALAPPDATA\pip\Cache
    fingerprint_script:
      - echo $PYTHON_VERSION
      - type requirements\test.txt
    populate_script:
      - python -m pip install --retries 3 --upgrade pip
      - python -m pip install --retries 3 -r requirements/test.txt %PIP_FLAGS%

  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - python -m pip install --retries 3 -r requirements/test.txt %PIP_FLAGS%
    - python -m pip install -e .[pyside2] %PIP_FLAGS%

  check_script:
    - conda list
    - python -c "import napari; print(napari.__version__)"

  test_script: pytest -v -o qt_no_exception_capture=1


check_manifest_task:
  auto_cancellation: true
  name: Check Manifest
  depends_on:
    - linux 3.8
    - macos 3.8
    - windows 3.8

  install_script:
    - python -m pip install --retries 3 --upgrade pip
    - python -m pip install --retries 3 check-manifest

  test_script:
    - check-manifest
