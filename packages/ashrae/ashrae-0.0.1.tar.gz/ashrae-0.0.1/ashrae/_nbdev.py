# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"evaluate_torch": "all_meters_one_model.ipynb",
         "cnr": "all_meters_one_model.ipynb",
         "EmbeddingFeatures": "all_meters_one_model.ipynb",
         "EmbeddingFeatures.replace_cat_features_with_embeddings": "all_meters_one_model.ipynb",
         "EmbeddingFeatures.embedding_assignment_func": "all_meters_one_model.ipynb",
         "EmbeddingFeatures.predict_with_embeddings": "all_meters_one_model.ipynb",
         "pick_random": "all_meters_one_model.ipynb",
         "pretty_dictionary": "all_meters_one_model.ipynb",
         "get_tabular_object": "feature_testing.ipynb",
         "train_predict": "feature_testing.ipynb",
         "SPLIT_PARAMS": "feature_testing.ipynb",
         "hist_plot_preds": "feature_testing.ipynb",
         "BoldlyWrongTimeseries": "feature_testing.ipynb",
         "BoldlyWrongTimeseries.plot_boldly_wrong": "feature_testing.ipynb",
         "BoldlyWrongTimeseries.init_widgets": "feature_testing.ipynb",
         "BoldlyWrongTimeseries.run_boldly": "feature_testing.ipynb",
         "BoldlyWrongTimeseries.click_boldly_wrong": "feature_testing.ipynb",
         "InspectTimeseries": "inspection.ipynb",
         "InspectTimeseries.init_widgets": "inspection.ipynb",
         "InspectTimeseries.inspect_boldly": "inspection.ipynb",
         "InspectTimeseries.click_boldly": "inspection.ipynb",
         "InspectTimeseries.select_boldly_all": "inspection.ipynb",
         "InspectTimeseries.select_boldly_random": "inspection.ipynb",
         "InspectTimeseries.select_boldly_filled_weeks": "inspection.ipynb",
         "InspectTimeseries.select_boldly_outlying": "inspection.ipynb",
         "InspectTimeseries.plot_boldly": "inspection.ipynb",
         "get_leaderboard_distribution": "leaderboard.ipynb",
         "DATA_PATH": "loading.ipynb",
         "N_TRAIN": "loading.ipynb",
         "N_TEST": "loading.ipynb",
         "get_csvs": "loading.ipynb",
         "CSV_NAMES_MAP": "loading.ipynb",
         "get_meter_data": "loading.ipynb",
         "get_nan_stats": "loading.ipynb",
         "show_nans": "loading.ipynb",
         "test_meter_train_and_test_set": "loading.ipynb",
         "get_building_data": "loading.ipynb",
         "test_building": "loading.ipynb",
         "get_weather_data": "loading.ipynb",
         "test_weather": "loading.ipynb",
         "load_all": "loading.ipynb",
         "split_dataset": "preprocessing.ipynb",
         "Processor": "preprocessing.ipynb",
         "DEP_VAR": "preprocessing.ipynb",
         "TIME_COL": "preprocessing.ipynb",
         "Processor.fix_bid_363": "preprocessing.ipynb",
         "Processor.remove_0s_meter0": "preprocessing.ipynb",
         "Processor.remove_not_summer_0s_meter_2_and_3": "preprocessing.ipynb",
         "Processor.remove_bad_meter0_readings_of_first_141days": "preprocessing.ipynb",
         "Processor.fix_bid_1099": "preprocessing.ipynb",
         "Processor.remove_imputed_weeks": "preprocessing.ipynb",
         "Processor.remove_outliers": "preprocessing.ipynb",
         "Processor.add_random_noise_features": "preprocessing.ipynb",
         "Processor.add_building_features": "preprocessing.ipynb",
         "Processor.add_weather_features": "preprocessing.ipynb",
         "site_GMT_offsets": "preprocessing.ipynb",
         "GMT_offset_map": "preprocessing.ipynb",
         "Processor.add_time_features": "preprocessing.ipynb",
         "Processor.add_dep_var_stats": "preprocessing.ipynb",
         "DEFAULT_GRP_COLS": "preprocessing.ipynb",
         "Processor.add_onehot_encoded": "preprocessing.ipynb",
         "DEFAULT_ONEHOT_COLS": "preprocessing.ipynb",
         "align_test": "preprocessing.ipynb",
         "test_var_names": "preprocessing.ipynb",
         "store_var_names": "preprocessing.ipynb",
         "load_var_names": "preprocessing.ipynb",
         "store_df": "preprocessing.ipynb",
         "load_df": "preprocessing.ipynb",
         "preprocess_all": "preprocessing.ipynb"}

modules = ["modelling.py",
           "feature_testing.py",
           "inspection.py",
           "leaderboard.py",
           "loading.py",
           "preprocessing.py"]

doc_url = "https://eschmidt42.github.io/ashrae/"

git_url = "https://github.com/eschmidt42/ashrae/tree/master/"

def custom_doc_links(name): return None
