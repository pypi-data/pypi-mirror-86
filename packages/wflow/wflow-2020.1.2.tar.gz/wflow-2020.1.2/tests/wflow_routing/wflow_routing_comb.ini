


[inputmapstacks]
Inwater = /inmaps/IW
# this is optional inflow (positive) or outflow (negative) of the kin-wave reservoir in m^3/sec
Inflow = /inmaps/IF 


[run]
# either a runinfo file or a start and end-time are required
#runinfo=runinfo.xml
starttime= 1995-01-31 00:00:00
endtime= 1995-02-28 00:00:00
# required, base timestep of the model
timestepsecs = 86400
#start model with cold state
reinit=1

# Model parameters and settings
[model]
modeltype= wflow_routing

AnnualDischarge=2290
# Alpha for wiver-width estimation 5 for mountain stream 60 for the river rhine
Alpha=120
WIMaxScale=0.8
Tslice=1
# Maximum upstream distance to update the flow in metres
UpdMaxDist=300000.0
#SubCatchFlowOnly = 1


[framework]
# outputformat for the *dynamic* mapstacks (not the states and summary maps)
# 1: pcraster
# 2: numpy
# 3: matlab

# netcdfoutput requires also outputformat = 1 (default) and additionally the name of the file
#netcdfoutput = outmaps.nc
#netcdfwritebuffer=100

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 0

[outputmaps]
self.InwaterForcing=inwf
#self.SurfaceRunoff=_run
#self.Qfloodplain=_qfp
#self.Qchannel=_qch
#self.Qbankfull=_qbn
#self.WaterLevelFP=_levfp
#self.WaterLevelCH=_levch
#self.InwaterMM=_IW
#self.Qbankfull=_qbnk
#self.floodcells=fcel
#self.Qtot=QQQ
#self.Pch =ch
#self.Pfp = fp
#self.Alpha = al
#self.AlphaCh = alch
#self.AlphaFP = alfp
#self.Inflow = inf
#self.Outflow = out
#self.OutflowDwn = outd
#self.MassBalKinWave = wat
#self.ReservoirVolume = vol

[summary]
self.TopoLdd=ldd.map


#[outputtss_0]
#samplemap=staticmaps/wflow_reservoirlocs.map
#self.ReservoirVolume=resvol.tss
#self.ResPecrFull=pec.tss
#self.Outflow=of.tss


# The section below is for the BMI and low level API. It can be empty if you do not use this
[API]
#states
SurfaceRunoff = 2, m^3/s
WaterLevel = 2, m
IW = 0, mm/timestep