# coding: utf-8

"""
    VeeRoute.LSS Clustering

    VeeRoute.LSS Clustering API  # noqa: E501

    The version of the OpenAPI document: 3.6.163884
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_clustering
from vrt_lss_clustering.models.unclustered_point import UnclusteredPoint  # noqa: E501
from vrt_lss_clustering.rest import ApiException

class TestUnclusteredPoint(unittest.TestCase):
    """UnclusteredPoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UnclusteredPoint
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_clustering.models.unclustered_point.UnclusteredPoint()  # noqa: E501
        if include_optional :
            return UnclusteredPoint(
                point = vrt_lss_clustering.models.cluster_point.ClusterPoint(
                    key = 'location01', 
                    location = vrt_lss_clustering.models.location.Location(
                        latitude = 55.692789, 
                        longitude = 37.554554, 
                        arrival_duration = 15, 
                        departure_duration = 5, ), 
                    duration = 30, ), 
                reason = 'undefined'
            )
        else :
            return UnclusteredPoint(
                point = vrt_lss_clustering.models.cluster_point.ClusterPoint(
                    key = 'location01', 
                    location = vrt_lss_clustering.models.location.Location(
                        latitude = 55.692789, 
                        longitude = 37.554554, 
                        arrival_duration = 15, 
                        departure_duration = 5, ), 
                    duration = 30, ),
        )

    def testUnclusteredPoint(self):
        """Test UnclusteredPoint"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
