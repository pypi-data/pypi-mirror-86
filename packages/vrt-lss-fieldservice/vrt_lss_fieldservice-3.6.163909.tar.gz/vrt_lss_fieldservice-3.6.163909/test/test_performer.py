# coding: utf-8

"""
    VeeRoute.LSS Field Service Engineers

    VeeRoute.LSS Field Service Engineers API  # noqa: E501

    The version of the OpenAPI document: 3.6.163909
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_fieldservice
from vrt_lss_fieldservice.models.performer import Performer  # noqa: E501
from vrt_lss_fieldservice.rest import ApiException

class TestPerformer(unittest.TestCase):
    """Performer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Performer
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_fieldservice.models.performer.Performer()  # noqa: E501
        if include_optional :
            return Performer(
                key = 'performer0001', 
                start_location = vrt_lss_fieldservice.models.location.Location(
                    latitude = 55.692789, 
                    longitude = 37.554554, 
                    arrival_duration = 15, 
                    departure_duration = 5, ), 
                finish_location = vrt_lss_fieldservice.models.location.Location(
                    latitude = 55.692789, 
                    longitude = 37.554554, 
                    arrival_duration = 15, 
                    departure_duration = 5, ), 
                features = ["B1","Special"], 
                transport_type = 'CAR', 
                shifts = [
                    vrt_lss_fieldservice.models.shift.Shift(
                        availability_time = vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', ), 
                        working_time = vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', ), )
                    ], 
                tariff = vrt_lss_fieldservice.models.tariff.Tariff(
                    basic = vrt_lss_fieldservice.models.tariff_primary.TariffPrimary(
                        cost_per_shift = 1000, 
                        cost_per_meter = 0.1, 
                        max_length = 200000, 
                        cost_per_minute = 0.2, 
                        max_time = 480, ), 
                    extra = [
                        vrt_lss_fieldservice.models.tariff_primary.TariffPrimary(
                            cost_per_shift = 1000, 
                            cost_per_meter = 0.1, 
                            max_length = 200000, 
                            cost_per_minute = 0.2, 
                            max_time = 480, )
                        ], )
            )
        else :
            return Performer(
                key = 'performer0001',
                shifts = [
                    vrt_lss_fieldservice.models.shift.Shift(
                        availability_time = vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', ), 
                        working_time = vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', ), )
                    ],
        )

    def testPerformer(self):
        """Test Performer"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
