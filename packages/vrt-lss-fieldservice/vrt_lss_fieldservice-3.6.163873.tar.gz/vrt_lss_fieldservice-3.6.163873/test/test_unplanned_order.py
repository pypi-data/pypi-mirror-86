# coding: utf-8

"""
    VeeRoute.LSS Field Service Engineers

    VeeRoute.LSS Field Service Engineers API  # noqa: E501

    The version of the OpenAPI document: 3.6.163873
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_fieldservice
from vrt_lss_fieldservice.models.unplanned_order import UnplannedOrder  # noqa: E501
from vrt_lss_fieldservice.rest import ApiException

class TestUnplannedOrder(unittest.TestCase):
    """UnplannedOrder unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UnplannedOrder
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_fieldservice.models.unplanned_order.UnplannedOrder()  # noqa: E501
        if include_optional :
            return UnplannedOrder(
                order = vrt_lss_fieldservice.models.order.Order(
                    key = 'order0001', 
                    location = vrt_lss_fieldservice.models.location.Location(
                        latitude = 55.692789, 
                        longitude = 37.554554, 
                        arrival_duration = 15, 
                        departure_duration = 5, ), 
                    time_windows = [
                        vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', )
                        ], 
                    duration = 30, 
                    cost = vrt_lss_fieldservice.models.order_cost.OrderCost(
                        reward = 199.1, 
                        penalty = vrt_lss_fieldservice.models.cost_penalty.CostPenalty(
                            start_time = '2020-11-21T17:00Z', 
                            period = 60, 
                            value = 1000, 
                            max_value = 10000, ), ), 
                    restrictions = ["Special"], 
                    blacklist = ["A0"], ), 
                reason = 'undefined'
            )
        else :
            return UnplannedOrder(
                order = vrt_lss_fieldservice.models.order.Order(
                    key = 'order0001', 
                    location = vrt_lss_fieldservice.models.location.Location(
                        latitude = 55.692789, 
                        longitude = 37.554554, 
                        arrival_duration = 15, 
                        departure_duration = 5, ), 
                    time_windows = [
                        vrt_lss_fieldservice.models.time_window.TimeWindow(
                            from = '2020-11-21T09:30+03:00', 
                            to = '2020-11-21T19:45Z', )
                        ], 
                    duration = 30, 
                    cost = vrt_lss_fieldservice.models.order_cost.OrderCost(
                        reward = 199.1, 
                        penalty = vrt_lss_fieldservice.models.cost_penalty.CostPenalty(
                            start_time = '2020-11-21T17:00Z', 
                            period = 60, 
                            value = 1000, 
                            max_value = 10000, ), ), 
                    restrictions = ["Special"], 
                    blacklist = ["A0"], ),
        )

    def testUnplannedOrder(self):
        """Test UnplannedOrder"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
