[tox]
tox_pyenv_fallback=False
envlist =
    isort
    black
    flake8
    pydocstyle
    doc8
    sphinx
    py3{5,6,7,8,9}_{min,latest}
    deploy

[testenv:flake8]
basepython = python3.7
depends = black
deps = 
    flake8 
    flake8-bugbear
skip_install = True
commands = flake8 -v

[testenv:isort]
basepython = python3.9
deps = 
    isort
skip_install = True
commands = isort . --recursive --apply

[testenv:black]
basepython = python3.9
depends = isort
deps = black
skip_install = True
commands = black --line-length 79 setup.py plot_benchmark.py numpy_ipps tests

[testenv:pydocstyle]
basepython = python3.9
depends = black
deps = pydocstyle
skip_install = True
commands = pydocstyle numpy_ipps

[testenv:doc8]
basepython = python3.9
depends = black
deps =
    doc8
    pygments
skip_install = True
commands = doc8

[testenv:sphinx]
basepython = python3.8
depends =
    black
install_command =
    python -m pip install --upgrade --upgrade-strategy eager --cache-dir={toxinidir}/.cache/pip {packages} {opts}
deps = 
    breathe<4.15
    sphinx<3
    sphinxcontrib-apidoc
    sphinx_rtd_theme 
    m2r
whitelist_externals = rm
commands =
    rm -fr docs/source/api
    sphinx-build -W -b html docs/source docs/build/html
    sphinx-build -W -b linkcheck docs/source docs/build/linkcheck
parallel_show_output = true

[testenv:deploy]
basepython = python3.9
deps = 
    twine
skip_install = True
whitelist_externals = 
    rm
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME}
    TWINE_PASSWORD = {env:TWINE_PASSWORD}
commands =
    rm -fr dist
    python setup.py sdist
    twine upload dist/*

[testenv]
basepython = 
    py35_{min,latest}: python3.5
    py36_{min,latest}: python3.6
    py37_{min,latest}: python3.7
    py38_{min,latest}: python3.8
    py39_{min,latest}: python3.9
depends =
    py3{5,6,7,8,9}_{min,latest}: black
install_command =
    python -m pip install --upgrade --upgrade-strategy eager --cache-dir={toxinidir}/.cache/pip --no-binary numpy {packages} {opts}
skip_install = 
    py3{5,6,7,8,9}_{min,latest}: False
deps =
    py3{5,6,7,8,9}_{min,latest}: psutil
    py3{5,6,7,8,9}_{min,latest}: pyqt5<5.15
    py3{5,6,7,8,9}_{min,latest}: pytest >= 3.1
    py3{5,6,7,8,9}_{min,latest}: pytest-benchmark
    py3{5,6,7,8,9}_{min,latest}: pytest-html
    py3{5,6,7,8,9}_{min,latest}: matplotlib

    py3{5,6,7,8,9}_min: cffi ==0.9
    py3{5,6,7}_min: numpy ==1.15
    py3{5,6,7}_min: regex ==2014.1.10
setenv =
    py3{5,6,7,8,9}_{min,latest}: NUMPY_IPPS_FAST_TEST = {env:NUMPY_IPPS_FAST_TEST}
    py3{5,6,7,8,9}_{min,latest}: PYTHONOPTIMIZE = 1
    py35_{min,latest}: PYTHONVERSION = 3.5
    py36_{min,latest}: PYTHONVERSION = 3.6
    py37_{min,latest}: PYTHONVERSION = 3.7
    py38_{min,latest}: PYTHONVERSION = 3.8
    py39_{min,latest}: PYTHONVERSION = 3.9
    py3{5,6,7,8,9}_min: PYTHONUPDATE = min
    py3{5,6,7,8,9}_latest: PYTHONUPDATE = latest
whitelist_externals = 
    py3{5,6,7,8,9}_{min,latest}: numactl
parallel_show_output = true
commands =
    py3{5,6,7,8,9}_{min,latest}: numactl --physcpubind=0 pytest {posargs} \
    py3{5,6,7,8,9}_{min,latest}:     --no-header --no-summary \
    py3{5,6,7,8,9}_{min,latest}:     --benchmark-calibration-precision=2000000 --benchmark-disable-gc \
    py3{5,6,7,8,9}_{min,latest}:     --junitxml=log/test_{envname}.xml -o junit_suite_name=test_{envname} \
    py3{5,6,7,8,9}_{min,latest}:     --benchmark-storage=log --benchmark-save=benchmark_{envname} \
    py3{5,6,7,8,9}_{min,latest}:     --html=log/test_html_{envname}/report.html
    py3{5,6,7,8,9}_{min,latest}: python plot_benchmark.py
