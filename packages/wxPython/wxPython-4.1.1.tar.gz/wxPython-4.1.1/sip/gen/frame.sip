//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxFRAME_NO_TASKBAR;
const int wxFRAME_TOOL_WINDOW;
const int wxFRAME_FLOAT_ON_PARENT;
class wxFrame : wxTopLevelWindow
{
    %Docstring
        Frame()
        Frame(parent, id=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)
        
        A frame is a window whose size and position can (usually) be changed
        by the user.
    %End
    %TypeHeaderCode
        #include <wx/frame.h>
    %End

public:
    wxFrame();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxFrame(
        wxWindow * parent,
        wxWindowID id = wxID_ANY,
        const wxString & title = wxEmptyString,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxDEFAULT_FRAME_STYLE,
        const wxString & name = wxFrameNameStr
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxFrame();

    void Centre(
        int direction = wxBOTH
    );
    %Docstring
        Centre(direction=BOTH)
        
        Centres the frame on the display.
    %End

    bool Create(
        wxWindow * parent,
        wxWindowID id = wxID_ANY,
        const wxString & title = wxEmptyString,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxDEFAULT_FRAME_STYLE,
        const wxString & name = wxFrameNameStr
    )   /TransferThis/;
    %Docstring
        Create(parent, id=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr) -> bool
        
        Used in two-step frame construction.
    %End

    wxStatusBar * CreateStatusBar(
        int number = 1,
        long style = wxSTB_DEFAULT_STYLE,
        wxWindowID id = 0,
        const wxString & name = wxStatusBarNameStr
    );
    %Docstring
        CreateStatusBar(number=1, style=STB_DEFAULT_STYLE, id=0, name=StatusBarNameStr) -> StatusBar
        
        Creates a status bar at the bottom of the frame.
    %End

    wxToolBar * CreateToolBar(
        long style = wxTB_DEFAULT_STYLE,
        wxWindowID id = wxID_ANY,
        const wxString & name = wxToolBarNameStr
    );
    %Docstring
        CreateToolBar(style=TB_DEFAULT_STYLE, id=ID_ANY, name=ToolBarNameStr) -> ToolBar
        
        Creates a toolbar at the top or left of the frame.
    %End

    virtual
    void DoGiveHelp(
        const wxString & text,
        bool show
    );
    %Docstring
        DoGiveHelp(text, show)
        
        Method used to show help string of the selected menu toolbar item.
    %End

    virtual
    wxPoint GetClientAreaOrigin() const;
    %Docstring
        GetClientAreaOrigin() -> Point
        
        Returns the origin of the frame client area (in client coordinates).
    %End

    wxMenuBar * GetMenuBar() const;
    %Docstring
        GetMenuBar() -> MenuBar
        
        Returns a pointer to the menubar currently associated with the frame
        (if any).
    %End

    wxStatusBar * GetStatusBar() const;
    %Docstring
        GetStatusBar() -> StatusBar
        
        Returns a pointer to the status bar currently associated with the
        frame (if any).
    %End

    int GetStatusBarPane() const;
    %Docstring
        GetStatusBarPane() -> int
        
        Returns the status bar pane used to display menu and toolbar help.
    %End

    wxToolBar * GetToolBar() const;
    %Docstring
        GetToolBar() -> ToolBar
        
        Returns a pointer to the toolbar currently associated with the frame
        (if any).
    %End

    virtual
    wxStatusBar * OnCreateStatusBar(
        int number,
        long style,
        wxWindowID id,
        const wxString & name
    );
    %Docstring
        OnCreateStatusBar(number, style, id, name) -> StatusBar
        
        Virtual function called when a status bar is requested by
        CreateStatusBar().
    %End

    virtual
    wxToolBar * OnCreateToolBar(
        long style,
        wxWindowID id,
        const wxString & name
    );
    %Docstring
        OnCreateToolBar(style, id, name) -> ToolBar
        
        Virtual function called when a toolbar is requested by
        CreateToolBar().
    %End

    bool ProcessCommand(
        int id
    );
    %Docstring
        ProcessCommand(id) -> bool
        
        Simulate a menu command.
    %End

    void SetMenuBar(
        wxMenuBar * menuBar   /Transfer/
    );
    %Docstring
        SetMenuBar(menuBar)
        
        Tells the frame to show the given menu bar.
    %End

    void SetStatusBar(
        wxStatusBar * statusBar
    );
    %Docstring
        SetStatusBar(statusBar)
        
        Associates a status bar with the frame.
    %End

    void SetStatusBarPane(
        int n
    );
    %Docstring
        SetStatusBarPane(n)
        
        Set the status bar pane used to display menu and toolbar help.
    %End

    void SetStatusText(
        const wxString & text,
        int number = 0
    );
    %Docstring
        SetStatusText(text, number=0)
        
        Sets the status bar text and updates the status bar display.
    %End

    void SetStatusWidths(
        const wxArrayInt& widths
    );
    %Docstring
        SetStatusWidths(widths)
        
        Sets the widths of the fields in the status bar.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxFrame_SetStatusWidths(sipCpp, widths);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxFrame_SetStatusWidths(wxFrame* self, const wxArrayInt* widths)
    {
        const int* ptr = &widths->front();
        self->SetStatusWidths(widths->size(), ptr);
    }
    %End

    void SetToolBar(
        wxToolBar * toolBar
    );
    %Docstring
        SetToolBar(toolBar)
        
        Associates a toolbar with the frame.
    %End

    void PushStatusText(
        const wxString & text,
        int number = 0
    );
    %Docstring
        PushStatusText(text, number=0)
    %End

    void PopStatusText(
        int number = 0
    );
    %Docstring
        PopStatusText(number=0)
    %End

    %Property(name=MenuBar, get=GetMenuBar, set=SetMenuBar)
    %Property(name=StatusBar, get=GetStatusBar, set=SetStatusBar)
    %Property(name=StatusBarPane, get=GetStatusBarPane, set=SetStatusBarPane)
    %Property(name=ToolBar, get=GetToolBar, set=SetToolBar)
    public:
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

};  // end of class wxFrame



//---------------------------------------------------------------------------

