//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxFD_DEFAULT_STYLE;
enum 
{
    wxFD_OPEN,
    wxFD_SAVE,
    wxFD_OVERWRITE_PROMPT,
    wxFD_NO_FOLLOW,
    wxFD_FILE_MUST_EXIST,
    wxFD_CHANGE_DIR,
    wxFD_PREVIEW,
    wxFD_MULTIPLE,
    wxFD_SHOW_HIDDEN
};

const char* wxFileDialogNameStr;

class wxFileDialog : wxDialog
{
    %Docstring
        FileDialog(parent, message=FileSelectorPromptStr, defaultDir=EmptyString, defaultFile=EmptyString, wildcard=FileSelectorDefaultWildcardStr, style=FD_DEFAULT_STYLE, pos=DefaultPosition, size=DefaultSize, name=FileDialogNameStr)
        
        This class represents the file chooser dialog.
    %End
    %TypeHeaderCode
        #include <wx/filedlg.h>
    %End

public:
    wxFileDialog(
        wxWindow * parent,
        const wxString & message = wxFileSelectorPromptStr,
        const wxString & defaultDir = wxEmptyString,
        const wxString & defaultFile = wxEmptyString,
        const wxString & wildcard = wxFileSelectorDefaultWildcardStr,
        long style = wxFD_DEFAULT_STYLE,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxString & name = wxFileDialogNameStr
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxFileDialog();

    wxString GetCurrentlySelectedFilename() const;
    %Docstring
        GetCurrentlySelectedFilename() -> String
        
        Returns the path of the file currently selected in dialog.
    %End

    int GetCurrentlySelectedFilterIndex() const;
    %Docstring
        GetCurrentlySelectedFilterIndex() -> int
        
        Returns the file type filter index currently selected in dialog.
    %End

    wxString GetDirectory() const;
    %Docstring
        GetDirectory() -> String
        
        Returns the default directory.
    %End

    wxWindow * GetExtraControl() const;
    %Docstring
        GetExtraControl() -> Window
        
        If functions SetExtraControlCreator() and ShowModal() were called,
        returns the extra window.
    %End

    wxString GetFilename() const;
    %Docstring
        GetFilename() -> String
        
        Returns the default filename.
    %End

    wxArrayString* GetFilenames()   /Factory/;
    %Docstring
        GetFilenames() -> ArrayString
        
        Returns a list of filenames chosen in the dialog.  This function
        should only be used with the dialogs which have wx.MULTIPLE style,
        use GetFilename for the others.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileDialog_GetFilenames(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxArrayString* _wxFileDialog_GetFilenames(wxFileDialog* self)
    {
        wxArrayString* arr = new wxArrayString;
        self->GetFilenames(*arr);
        return arr;
    }
    %End

    int GetFilterIndex() const;
    %Docstring
        GetFilterIndex() -> int
        
        Returns the index into the list of filters supplied, optionally, in
        the wildcard parameter.
    %End

    wxString GetMessage() const;
    %Docstring
        GetMessage() -> String
        
        Returns the message that will be displayed on the dialog.
    %End

    wxString GetPath() const;
    %Docstring
        GetPath() -> String
        
        Returns the full path (directory and filename) of the selected file.
    %End

    wxArrayString* GetPaths()   /Factory/;
    %Docstring
        GetPaths() -> ArrayString
        
        Returns a list of the full paths of the files chosen. This function
        should only be used with the dialogs which have wx.MULTIPLE style, use
        GetPath for the others.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxFileDialog_GetPaths(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxArrayString* _wxFileDialog_GetPaths(wxFileDialog* self)
    {
        wxArrayString* arr = new wxArrayString;
        self->GetPaths(*arr);
        return arr;
    }
    %End

    wxString GetWildcard() const;
    %Docstring
        GetWildcard() -> String
        
        Returns the file dialog wildcard.
    %End

    void SetDirectory(
        const wxString & directory
    );
    %Docstring
        SetDirectory(directory)
        
        Sets the default directory.
    %End

    void SetFilename(
        const wxString & setfilename
    );
    %Docstring
        SetFilename(setfilename)
        
        Sets the default filename.
    %End

    void SetFilterIndex(
        int filterIndex
    );
    %Docstring
        SetFilterIndex(filterIndex)
        
        Sets the default filter index, starting from zero.
    %End

    void SetMessage(
        const wxString & message
    );
    %Docstring
        SetMessage(message)
        
        Sets the message that will be displayed on the dialog.
    %End

    void SetPath(
        const wxString & path
    );
    %Docstring
        SetPath(path)
        
        Sets the path (the combined directory and filename that will be
        returned when the dialog is dismissed).
    %End

    void SetWildcard(
        const wxString & wildCard
    );
    %Docstring
        SetWildcard(wildCard)
        
        Sets the wildcard, which can contain multiple file types, for example:
        "BMP files (*.bmp)|*.bmp|GIF files (*.gif)|*.gif".
    %End

    int ShowModal();
    %Docstring
        ShowModal() -> int
        
        Shows the dialog, returning wxID_OK if the user pressed OK, and
        wxID_CANCEL otherwise.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=CurrentlySelectedFilename, get=GetCurrentlySelectedFilename)
    %Property(name=CurrentlySelectedFilterIndex, get=GetCurrentlySelectedFilterIndex)
    %Property(name=Directory, get=GetDirectory, set=SetDirectory)
    %Property(name=ExtraControl, get=GetExtraControl)
    %Property(name=Filename, get=GetFilename, set=SetFilename)
    %Property(name=Filenames, get=GetFilenames)
    %Property(name=FilterIndex, get=GetFilterIndex, set=SetFilterIndex)
    %Property(name=Message, get=GetMessage, set=SetMessage)
    %Property(name=Path, get=GetPath, set=SetPath)
    %Property(name=Paths, get=GetPaths)
    %Property(name=Wildcard, get=GetWildcard, set=SetWildcard)
};  // end of class wxFileDialog


wxString wxFileSelector(
    const wxString & message,
    const wxString & default_path = wxEmptyString,
    const wxString & default_filename = wxEmptyString,
    const wxString & default_extension = wxEmptyString,
    const wxString & wildcard = wxFileSelectorDefaultWildcardStr,
    int flags = 0,
    wxWindow * parent = NULL,
    int x = wxDefaultCoord,
    int y = wxDefaultCoord
);
%Docstring
    FileSelector(message, default_path=EmptyString, default_filename=EmptyString, default_extension=EmptyString, wildcard=FileSelectorDefaultWildcardStr, flags=0, parent=None, x=DefaultCoord, y=DefaultCoord) -> String
    
    Pops up a file selector box.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End

wxString wxFileSelectorEx(
    const wxString & message = wxFileSelectorPromptStr,
    const wxString & default_path = wxEmptyString,
    const wxString & default_filename = wxEmptyString,
    int * indexDefaultExtension = NULL,
    const wxString & wildcard = wxFileSelectorDefaultWildcardStr,
    int flags = 0,
    wxWindow * parent = NULL,
    int x = wxDefaultCoord,
    int y = wxDefaultCoord
);
%Docstring
    FileSelectorEx(message=FileSelectorPromptStr, default_path=EmptyString, default_filename=EmptyString, indexDefaultExtension=None, wildcard=FileSelectorDefaultWildcardStr, flags=0, parent=None, x=DefaultCoord, y=DefaultCoord) -> String
    
    An extended version of wxFileSelector()
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End

wxString wxLoadFileSelector(
    const wxString & what,
    const wxString & extension,
    const wxString & default_name = wxEmptyString,
    wxWindow * parent = NULL
);
%Docstring
    LoadFileSelector(what, extension, default_name=EmptyString, parent=None) -> String
    
    Shows a file dialog asking the user for a file name for opening a
    file.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End

wxString wxSaveFileSelector(
    const wxString & what,
    const wxString & extension,
    const wxString & default_name = wxEmptyString,
    wxWindow * parent = NULL
);
%Docstring
    SaveFileSelector(what, extension, default_name=EmptyString, parent=None) -> String
    
    Shows a file dialog asking the user for a file name for saving a file.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End


//---------------------------------------------------------------------------

