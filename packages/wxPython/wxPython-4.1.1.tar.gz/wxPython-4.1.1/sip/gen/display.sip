//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/display.h>
%End


//---------------------------------------------------------------------------

class wxDisplay
{
    %Docstring
        Display()
        Display(index)
        Display(window)
        
        Determines the sizes and locations of displays connected to the
        system.
    %End
    %TypeHeaderCode
        #include <wx/display.h>
    %End

public:
    wxDisplay();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxDisplay(
        unsigned int index
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxDisplay(
        const wxWindow * window
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxDisplay();

    bool ChangeMode(
        const wxVideoMode & mode = wxDefaultVideoMode
    );
    %Docstring
        ChangeMode(mode=DefaultVideoMode) -> bool
        
        Changes the video mode of this display to the mode specified in the
        mode parameter.
    %End

    wxRect GetClientArea() const;
    %Docstring
        GetClientArea() -> Rect
        
        Returns the client area of the display.
    %End

    wxVideoMode GetCurrentMode() const;
    %Docstring
        GetCurrentMode() -> VideoMode
        
        Returns the current video mode that this display is in.
    %End

    wxRect GetGeometry() const;
    %Docstring
        GetGeometry() -> Rect
        
        Returns the bounding rectangle of the display whose index was passed
        to the constructor.
    %End

    wxArrayVideoModes GetModes(
        const wxVideoMode & mode = wxDefaultVideoMode
    ) const;
    %Docstring
        GetModes(mode=DefaultVideoMode) -> ArrayVideoModes
        
        Fills and returns an array with all the video modes that are supported
        by this display, or video modes that are supported by this display and
        match the mode parameter (if mode is not wxDefaultVideoMode).
    %End

    wxString GetName() const;
    %Docstring
        GetName() -> String
        
        Returns the display's name.
    %End

    wxSize GetPPI() const;
    %Docstring
        GetPPI() -> Size
        
        Returns display resolution in pixels per inch.
    %End

    double GetScaleFactor() const;
    %Docstring
        GetScaleFactor() -> double
        
        Returns scaling factor used by this display.
    %End

    bool IsPrimary() const;
    %Docstring
        IsPrimary() -> bool
        
        Returns true if the display is the primary display.
    %End

    static
    unsigned int GetCount();
    %Docstring
        GetCount() -> unsignedint
        
        Returns the number of connected displays.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    int GetFromPoint(
        const wxPoint & pt
    );
    %Docstring
        GetFromPoint(pt) -> int
        
        Returns the index of the display on which the given point lies, or
        wxNOT_FOUND if the point is not on any connected display.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    int GetFromWindow(
        const wxWindow * win
    );
    %Docstring
        GetFromWindow(win) -> int
        
        Returns the index of the display on which the given window lies.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    int GetStdPPIValue();
    %Docstring
        GetStdPPIValue() -> int
        
        Returns default display resolution for the current platform in pixels
        per inch.
    %End

    static
    wxSize GetStdPPI();
    %Docstring
        GetStdPPI() -> Size
        
        Returns default display resolution for the current platform as wxSize.
    %End

    private:
        wxDisplay& operator=(const wxDisplay&);


    private:
        wxDisplay(const wxDisplay&);


    %Property(name=ClientArea, get=GetClientArea)
    %Property(name=CurrentMode, get=GetCurrentMode)
    %Property(name=Geometry, get=GetGeometry)
    %Property(name=Name, get=GetName)
};  // end of class wxDisplay



//---------------------------------------------------------------------------

