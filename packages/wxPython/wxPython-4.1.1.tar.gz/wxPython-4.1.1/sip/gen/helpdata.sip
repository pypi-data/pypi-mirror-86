//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _html.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxHtmlBookRecord
{
    %Docstring
        HtmlBookRecord(bookfile, basepath, title, start)
        
        Helper class for wxHtmlHelpData.
    %End
    %TypeHeaderCode
        #include <wx/html/helpdata.h>
    %End

public:
    wxHtmlBookRecord(
        const wxString & bookfile,
        const wxString & basepath,
        const wxString & title,
        const wxString & start
    );

    wxString GetBookFile() const;
    %Docstring
        GetBookFile() -> String
    %End

    wxString GetTitle() const;
    %Docstring
        GetTitle() -> String
    %End

    wxString GetStart() const;
    %Docstring
        GetStart() -> String
    %End

    wxString GetBasePath() const;
    %Docstring
        GetBasePath() -> String
    %End

    void SetContentsRange(
        int start,
        int end
    );
    %Docstring
        SetContentsRange(start, end)
    %End

    int GetContentsStart() const;
    %Docstring
        GetContentsStart() -> int
    %End

    int GetContentsEnd() const;
    %Docstring
        GetContentsEnd() -> int
    %End

    void SetTitle(
        const wxString & title
    );
    %Docstring
        SetTitle(title)
    %End

    void SetBasePath(
        const wxString & path
    );
    %Docstring
        SetBasePath(path)
    %End

    void SetStart(
        const wxString & start
    );
    %Docstring
        SetStart(start)
    %End

    wxString GetFullPath(
        const wxString & page
    ) const;
    %Docstring
        GetFullPath(page) -> String
    %End

    public:


    %Property(name=BasePath, get=GetBasePath, set=SetBasePath)
    %Property(name=BookFile, get=GetBookFile)
    %Property(name=ContentsEnd, get=GetContentsEnd)
    %Property(name=ContentsStart, get=GetContentsStart)
    %Property(name=Start, get=GetStart, set=SetStart)
    %Property(name=Title, get=GetTitle, set=SetTitle)
};  // end of class wxHtmlBookRecord


class wxHtmlHelpDataItem
{
    %Docstring
        HtmlHelpDataItem()
        
        Helper class for wxHtmlHelpData.
    %End
    %TypeHeaderCode
        #include <wx/html/helpdata.h>
    %End

public:
    wxHtmlHelpDataItem();

    int level;

    wxHtmlHelpDataItem * parent;

    int id;

    wxString name;

    wxString page;

    wxHtmlBookRecord * book;

    wxString GetFullPath() const;
    %Docstring
        GetFullPath() -> String
    %End

    wxString GetIndentedName() const;
    %Docstring
        GetIndentedName() -> String
    %End

    public:


    %Property(name=FullPath, get=GetFullPath)
    %Property(name=IndentedName, get=GetIndentedName)
};  // end of class wxHtmlHelpDataItem


class wxHtmlHelpData : wxObject
{
    %Docstring
        HtmlHelpData()
        
        This class is used by wxHtmlHelpController and wxHtmlHelpFrame to
        access HTML help items.
    %End
    %TypeHeaderCode
        #include <wx/html/helpdata.h>
    %End

public:
    wxHtmlHelpData();

    bool AddBook(
        const wxString & book_url
    );
    %Docstring
        AddBook(book_url) -> bool
        
        Adds new book.
    %End

    wxString FindPageById(
        int id
    );
    %Docstring
        FindPageById(id) -> String
        
        Returns page's URL based on integer ID stored in project.
    %End

    wxString FindPageByName(
        const wxString & page
    );
    %Docstring
        FindPageByName(page) -> String
        
        Returns page's URL based on its (file)name.
    %End

    const wxHtmlBookRecArray & GetBookRecArray() const;
    %Docstring
        GetBookRecArray() -> HtmlBookRecArray
        
        Returns array with help books info.
    %End

    const wxHtmlHelpDataItems & GetContentsArray() const;
    %Docstring
        GetContentsArray() -> HtmlHelpDataItems
        
        Returns reference to array with contents entries.
    %End

    const wxHtmlHelpDataItems & GetIndexArray() const;
    %Docstring
        GetIndexArray() -> HtmlHelpDataItems
        
        Returns reference to array with index entries.
    %End

    void SetTempDir(
        const wxString & path
    );
    %Docstring
        SetTempDir(path)
        
        Sets the temporary directory where binary cached versions of MS HTML
        Workshop files will be stored.
    %End

    private:
        wxHtmlHelpData(const wxHtmlHelpData&);


    public:


    %Property(name=BookRecArray, get=GetBookRecArray)
    %Property(name=ContentsArray, get=GetContentsArray)
    %Property(name=IndexArray, get=GetIndexArray)
};  // end of class wxHtmlHelpData


class wxHtmlBookRecArray
{
public:
    SIP_SSIZE_T __len__();
    %MethodCode
        sipRes = sipCpp->GetCount();
    %End

            wxHtmlBookRecord& __getitem__(long index);
        %MethodCode
            if (0 > index)
                index += sipCpp->GetCount();

            if ((index < sipCpp->GetCount()) && (0 <= index)) {
                sipRes = &sipCpp->Item(index);
            }
            else {
                wxPyErr_SetString(PyExc_IndexError, "sequence index out of range");
                sipError = sipErrorFail;
            }
        %End
        

    int __contains__(wxHtmlBookRecord& obj);
    %MethodCode
        int idx = sipCpp->Index(*obj, false);
        sipRes = idx != wxNOT_FOUND;
    %End

    void append(wxHtmlBookRecord& obj);
    %MethodCode
        sipCpp->Add(*obj);
    %End

    // TODO:  add support for index(value, [start, [stop]])
    int index(wxHtmlBookRecord& obj);
    %MethodCode
        int idx = sipCpp->Index(*obj, false);
        if (idx == wxNOT_FOUND) {
            sipError = sipErrorFail;
            wxPyErr_SetString(PyExc_ValueError,
                              "sequence.index(x): x not in sequence");
            }
        sipRes = idx;
    %End
};

%Extract(id=pycode_html)
def _HtmlBookRecArray___repr__(self):
    return "HtmlBookRecArray: " + repr(list(self))
HtmlBookRecArray.__repr__ = _HtmlBookRecArray___repr__
del _HtmlBookRecArray___repr__
%End


class wxHtmlHelpDataItems
{
public:
    SIP_SSIZE_T __len__();
    %MethodCode
        sipRes = sipCpp->GetCount();
    %End

            wxHtmlHelpDataItem& __getitem__(long index);
        %MethodCode
            if (0 > index)
                index += sipCpp->GetCount();

            if ((index < sipCpp->GetCount()) && (0 <= index)) {
                sipRes = &sipCpp->Item(index);
            }
            else {
                wxPyErr_SetString(PyExc_IndexError, "sequence index out of range");
                sipError = sipErrorFail;
            }
        %End
        

    int __contains__(wxHtmlHelpDataItem& obj);
    %MethodCode
        int idx = sipCpp->Index(*obj, false);
        sipRes = idx != wxNOT_FOUND;
    %End

    void append(wxHtmlHelpDataItem& obj);
    %MethodCode
        sipCpp->Add(*obj);
    %End

    // TODO:  add support for index(value, [start, [stop]])
    int index(wxHtmlHelpDataItem& obj);
    %MethodCode
        int idx = sipCpp->Index(*obj, false);
        if (idx == wxNOT_FOUND) {
            sipError = sipErrorFail;
            wxPyErr_SetString(PyExc_ValueError,
                              "sequence.index(x): x not in sequence");
            }
        sipRes = idx;
    %End
};

%Extract(id=pycode_html)
def _HtmlHelpDataItems___repr__(self):
    return "HtmlHelpDataItems: " + repr(list(self))
HtmlHelpDataItems.__repr__ = _HtmlHelpDataItems___repr__
del _HtmlHelpDataItems___repr__
%End



//---------------------------------------------------------------------------

