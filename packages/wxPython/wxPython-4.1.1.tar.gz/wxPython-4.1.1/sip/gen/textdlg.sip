//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/textdlg.h>
%End


//---------------------------------------------------------------------------

const int wxTextEntryDialogStyle;
const char* wxGetTextFromUserPromptStr;

const char* wxGetPasswordFromUserPromptStr;

class wxTextEntryDialog : wxDialog
{
    %Docstring
        TextEntryDialog()
        TextEntryDialog(parent, message, caption=GetTextFromUserPromptStr, value=EmptyString, style=TextEntryDialogStyle, pos=DefaultPosition)
        
        This class represents a dialog that requests a one-line text string
        from the user.
    %End
    %TypeHeaderCode
        #include <wx/textdlg.h>
    %End

public:
    wxTextEntryDialog();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxTextEntryDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption = wxGetTextFromUserPromptStr,
        const wxString & value = wxEmptyString,
        long style = wxTextEntryDialogStyle,
        const wxPoint & pos = wxDefaultPosition
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxTextEntryDialog();

    bool Create(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption = wxGetTextFromUserPromptStr,
        const wxString & value = wxEmptyString,
        long style = wxTextEntryDialogStyle,
        const wxPoint & pos = wxDefaultPosition
    )   /TransferThis/;
    %Docstring
        Create(parent, message, caption=GetTextFromUserPromptStr, value=EmptyString, style=TextEntryDialogStyle, pos=DefaultPosition) -> bool
    %End

    wxString GetValue() const;
    %Docstring
        GetValue() -> String
        
        Returns the text that the user has entered if the user has pressed OK,
        or the original value if the user has pressed Cancel.
    %End

    void SetMaxLength(
        unsigned long len
    );
    %Docstring
        SetMaxLength(len)
        
        This function sets the maximum number of characters the user can enter
        into this dialog.
    %End

    void SetValue(
        const wxString & value
    );
    %Docstring
        SetValue(value)
        
        Sets the default text value.
    %End

    void ForceUpper();
    %Docstring
        ForceUpper()
        
        Convert all text entered into the text control used by the dialog to
        upper case.
    %End

    int ShowModal();
    %Docstring
        ShowModal() -> int
        
        Shows the dialog, returning wxID_OK if the user pressed OK, and
        wxID_CANCEL otherwise.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxTextEntryDialog


class wxPasswordEntryDialog : wxTextEntryDialog
{
    %Docstring
        PasswordEntryDialog(parent, message, caption=GetPasswordFromUserPromptStr, defaultValue=EmptyString, style=TextEntryDialogStyle, pos=DefaultPosition)
        
        This class represents a dialog that requests a one-line password
        string from the user.
    %End
    %TypeHeaderCode
        #include <wx/textdlg.h>
    %End

public:
    wxPasswordEntryDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption = wxGetPasswordFromUserPromptStr,
        const wxString & defaultValue = wxEmptyString,
        long style = wxTextEntryDialogStyle,
        const wxPoint & pos = wxDefaultPosition
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

};  // end of class wxPasswordEntryDialog


wxString wxGetTextFromUser(
    const wxString & message,
    const wxString & caption = wxGetTextFromUserPromptStr,
    const wxString & default_value = wxEmptyString,
    wxWindow * parent = NULL,
    int x = wxDefaultCoord,
    int y = wxDefaultCoord,
    bool centre = true
);
%Docstring
    GetTextFromUser(message, caption=GetTextFromUserPromptStr, default_value=EmptyString, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True) -> String
    
    Pop up a dialog box with title set to caption, message, and a
    default_value.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End

wxString wxGetPasswordFromUser(
    const wxString & message,
    const wxString & caption = wxGetPasswordFromUserPromptStr,
    const wxString & default_value = wxEmptyString,
    wxWindow * parent = NULL,
    int x = wxDefaultCoord,
    int y = wxDefaultCoord,
    bool centre = true
);
%Docstring
    GetPasswordFromUser(message, caption=GetPasswordFromUserPromptStr, default_value=EmptyString, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True) -> String
    
    Similar to wxGetTextFromUser() but the text entered in the dialog is
    not shown on screen but replaced with stars.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End


//---------------------------------------------------------------------------

