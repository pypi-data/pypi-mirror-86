//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxSL_HORIZONTAL;
const int wxSL_VERTICAL;
const int wxSL_TICKS;
const int wxSL_AUTOTICKS;
const int wxSL_LEFT;
const int wxSL_TOP;
const int wxSL_RIGHT;
const int wxSL_BOTTOM;
const int wxSL_BOTH;
const int wxSL_SELRANGE;
const int wxSL_INVERSE;
const int wxSL_MIN_MAX_LABELS;
const int wxSL_VALUE_LABEL;
const int wxSL_LABELS;
const char* wxSliderNameStr;

class wxSlider : wxControl
{
    %Docstring
        Slider()
        Slider(parent, id=ID_ANY, value=0, minValue=0, maxValue=100, pos=DefaultPosition, size=DefaultSize, style=SL_HORIZONTAL, validator=DefaultValidator, name=SliderNameStr)
        
        A slider is a control with a handle which can be pulled back and forth
        to change the value.
    %End
    %TypeHeaderCode
        #include <wx/slider.h>
    %End

public:
    wxSlider();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxSlider(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        int value = 0,
        int minValue = 0,
        int maxValue = 100,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxSL_HORIZONTAL,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxSliderNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxSlider();

    void ClearSel();
    %Docstring
        ClearSel()
        
        Clears the selection, for a slider with the wxSL_SELRANGE style.
    %End

    void ClearTicks();
    %Docstring
        ClearTicks()
        
        Clears the ticks.
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        int value = 0,
        int minValue = 0,
        int maxValue = 100,
        const wxPoint & point = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxSL_HORIZONTAL,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxSliderNameStr
    );
    %Docstring
        Create(parent, id=ID_ANY, value=0, minValue=0, maxValue=100, point=DefaultPosition, size=DefaultSize, style=SL_HORIZONTAL, validator=DefaultValidator, name=SliderNameStr) -> bool
        
        Used for two-step slider construction.
    %End

    int GetLineSize() const;
    %Docstring
        GetLineSize() -> int
        
        Returns the line size.
    %End

    int GetMax() const;
    %Docstring
        GetMax() -> int
        
        Gets the maximum slider value.
    %End

    int GetMin() const;
    %Docstring
        GetMin() -> int
        
        Gets the minimum slider value.
    %End

    int GetPageSize() const;
    %Docstring
        GetPageSize() -> int
        
        Returns the page size.
    %End

    int GetSelEnd() const;
    %Docstring
        GetSelEnd() -> int
        
        Returns the selection end point.
    %End

    int GetSelStart() const;
    %Docstring
        GetSelStart() -> int
        
        Returns the selection start point.
    %End

    int GetThumbLength() const;
    %Docstring
        GetThumbLength() -> int
        
        Returns the thumb length.
    %End

    int GetTickFreq() const;
    %Docstring
        GetTickFreq() -> int
        
        Returns the tick frequency.
    %End

    int GetValue() const;
    %Docstring
        GetValue() -> int
        
        Gets the current slider value.
    %End

    void SetLineSize(
        int lineSize
    );
    %Docstring
        SetLineSize(lineSize)
        
        Sets the line size for the slider.
    %End

    void SetMin(
        int minValue
    );
    %Docstring
        SetMin(minValue)
        
        Sets the minimum slider value.
    %End

    void SetMax(
        int maxValue
    );
    %Docstring
        SetMax(maxValue)
        
        Sets the maximum slider value.
    %End

    void SetPageSize(
        int pageSize
    );
    %Docstring
        SetPageSize(pageSize)
        
        Sets the page size for the slider.
    %End

    void SetRange(
        int minValue,
        int maxValue
    );
    %Docstring
        SetRange(minValue, maxValue)
        
        Sets the minimum and maximum slider values.
    %End

    void SetSelection(
        int startPos,
        int endPos
    );
    %Docstring
        SetSelection(startPos, endPos)
        
        Sets the selection.
    %End

    void SetThumbLength(
        int len
    );
    %Docstring
        SetThumbLength(len)
        
        Sets the slider thumb length.
    %End

    void SetTick(
        int tickPos
    );
    %Docstring
        SetTick(tickPos)
        
        Sets a tick position.
    %End

    void SetTickFreq(
        int freq
    );
    %Docstring
        SetTickFreq(freq)
        
        Sets the tick mark frequency and position.
    %End

    void SetValue(
        int value
    );
    %Docstring
        SetValue(value)
        
        Sets the slider position.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=LineSize, get=GetLineSize, set=SetLineSize)
    %Property(name=Max, get=GetMax, set=SetMax)
    %Property(name=Min, get=GetMin, set=SetMin)
    %Property(name=PageSize, get=GetPageSize, set=SetPageSize)
    %Property(name=SelEnd, get=GetSelEnd)
    %Property(name=SelStart, get=GetSelStart)
    %Property(name=ThumbLength, get=GetThumbLength, set=SetThumbLength)
    %Property(name=TickFreq, get=GetTickFreq, set=SetTickFreq)
    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxSlider


%Extract(id=pycode_core)
def _Slider_GetRange(self):
    return (self.GetMin(), self.GetMax())
Slider.GetRange = _Slider_GetRange
del _Slider_GetRange
%End

%Extract(id=pycode_core)
Slider.Range = property(Slider.GetRange)
%End


//---------------------------------------------------------------------------

