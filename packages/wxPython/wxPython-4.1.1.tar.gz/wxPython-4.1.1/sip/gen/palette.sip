//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxPalette : wxGDIObject
{
    %Docstring
        Palette()
        Palette(palette)
        Palette(red, green, blue)
        
        A palette is a table that maps pixel values to RGB colours.
    %End
    %TypeHeaderCode
        #include <wx/palette.h>
    %End

    %TypeCode
        // a helper function to be used in the Create method and one of the Ctors
        bool _paletteCreateHelper(wxPalette* self,
                                  PyObject* red, PyObject* green, PyObject* blue) {
            bool rval = false;
            wxPyThreadBlocker blocker;
            char* errMsg = "Expected a sequence of integer objects";
        
            if (!PySequence_Check(red) || !PySequence_Check(green) || !PySequence_Check(blue)) {
                PyErr_SetString(PyExc_TypeError, errMsg);
                return rval;
            }
        
            Py_ssize_t count = PySequence_Size(red);
            if (PySequence_Size(green) != count || PySequence_Size(blue) != count) {
                PyErr_SetString(PyExc_ValueError, "Sequence lengths must be equal");
                return rval;
            }
        
            unsigned char* redArray = new unsigned char[count];
            unsigned char* greenArray = new unsigned char[count];
            unsigned char* blueArray = new unsigned char[count];
        
            for (Py_ssize_t i = 0; i < count; i++) {
                PyObject* redItem = PySequence_ITEM(red, i);
                PyObject* greenItem = PySequence_ITEM(green, i);
                PyObject* blueItem = PySequence_ITEM(blue, i);
                if (!wxPyInt_Check(redItem) || !wxPyInt_Check(greenItem) || !wxPyInt_Check(blueItem)) {
                    PyErr_SetString(PyExc_TypeError, errMsg);
                    goto pch_exit;
                }
        
                long redLong = wxPyInt_AsLong(redItem);
                long greenLong = wxPyInt_AsLong(greenItem);
                long blueLong = wxPyInt_AsLong(blueItem);
                Py_DECREF(redItem);
                Py_DECREF(greenItem);
                Py_DECREF(blueItem);
                if (redLong < 0 || redLong > 255 || greenLong < 0 || greenLong > 255 || blueLong < 0 || blueLong > 255) {
                    PyErr_SetString(PyExc_ValueError, "Sequence values must be in the 0..255 range");
                    goto pch_exit;
                }
                redArray[i] = redLong;
                greenArray[i] = greenLong;
                blueArray[i] = blueLong;
            }
        
            rval = self->Create(count, redArray, greenArray, blueArray);
        
        pch_exit:
            delete[] redArray;
            delete[] greenArray;
            delete[] blueArray;
            return rval;
        }
    %End
public:
    wxPalette();

    wxPalette(
        const wxPalette & palette
    );

    wxPalette(PyObject* red,  PyObject* green,  PyObject* blue)   /NoDerived/;
    %MethodCode
        PyErr_Clear();
        sipCpp = _wxPalette_ctor(red, green, blue);
    %End
    %TypeCode
    wxPalette* _wxPalette_ctor(PyObject* red, PyObject* green, PyObject* blue)
    {
        wxPalette* pal = new wxPalette;
        _paletteCreateHelper(pal, red, green, blue);
        if (PyErr_Occurred()) {
            delete pal;
            return NULL;
        }
        return pal;
    }
    %End

    ~wxPalette();

    PyObject* Create(PyObject* red,  PyObject* green,  PyObject* blue);
    %Docstring
        Create(red, green, blue) -> bool
        
        Creates a palette from 3 sequences of integers, one for each red, blue
        or green component.
        
        :param red: A sequence of integer values in the range 0..255
        inclusive.
        :param green: A sequence of integer values in the range 0..255
        inclusive.
        :param blue: A sequence of integer values in the range 0..255
        inclusive.
        
        .. note:: All sequences must be the same length.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxPalette_Create(sipCpp, red, green, blue);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    PyObject* _wxPalette_Create(wxPalette* self, PyObject* red, PyObject* green, PyObject* blue)
    {
        bool rval = _paletteCreateHelper(self, red, green, blue);
        wxPyThreadBlocker blocker;
        if (PyErr_Occurred())
            return NULL;
        if (rval)
            Py_RETURN_TRUE;
        else
            Py_RETURN_FALSE;
    }
    %End

    int GetColoursCount() const;
    %Docstring
        GetColoursCount() -> int
        
        Returns number of entries in palette.
    %End

    int GetPixel(
        unsigned char red   /PyInt/,
        unsigned char green   /PyInt/,
        unsigned char blue   /PyInt/
    ) const;
    %Docstring
        GetPixel(red, green, blue) -> int
        
        Returns a pixel value (index into the palette) for the given RGB
        values.
    %End

    PyObject* GetRGB(int pixel);
    %Docstring
        GetRGB(pixel) -> (red, green, blue)
        
        Returns RGB values for a given palette index.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxPalette_GetRGB(sipCpp, pixel);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    PyObject* _wxPalette_GetRGB(wxPalette* self, int pixel)
    {
        unsigned char red;
        unsigned char green;
        unsigned char blue;
        wxPyThreadBlocker blocker;
        if (!self->GetRGB(pixel, &red, &green, &blue)) {
            PyErr_SetString(PyExc_IndexError, "Pixel out of range");
            return NULL;
        }
        PyObject* rv = PyTuple_New(3);
        PyTuple_SetItem(rv, 0, wxPyInt_FromLong(red));
        PyTuple_SetItem(rv, 1, wxPyInt_FromLong(green));
        PyTuple_SetItem(rv, 2, wxPyInt_FromLong(blue));
        return rv;
    }
    %End

    bool IsOk() const;
    %Docstring
        IsOk() -> bool
        
        Returns true if palette data is present.
    %End

    public:


    %Property(name=ColoursCount, get=GetColoursCount)
    %Property(name=RGB, get=GetRGB)
};  // end of class wxPalette


wxPalette wxNullPalette;


//---------------------------------------------------------------------------

