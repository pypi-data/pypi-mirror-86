//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxIMAGELIST_DRAW_NORMAL;
const int wxIMAGELIST_DRAW_TRANSPARENT;
const int wxIMAGELIST_DRAW_SELECTED;
const int wxIMAGELIST_DRAW_FOCUSED;
enum 
{
    wxIMAGE_LIST_NORMAL,
    wxIMAGE_LIST_SMALL,
    wxIMAGE_LIST_STATE
};

class wxImageList : wxObject
{
    %Docstring
        ImageList()
        ImageList(width, height, mask=True, initialCount=1)
        
        A wxImageList contains a list of images, which are stored in an
        unspecified form.
    %End
    %TypeHeaderCode
        #include <wx/imaglist.h>
    %End

public:
    wxImageList();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxImageList(
        int width,
        int height,
        bool mask = true,
        int initialCount = 1
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    int Add(
        const wxBitmap & bitmap,
        const wxBitmap & mask = wxNullBitmap
    );
    %Docstring
        Add(bitmap, mask=NullBitmap) -> int
        Add(bitmap, maskColour) -> int
        Add(icon) -> int
        
        Adds a new image or images using a bitmap and optional mask bitmap.
    %End

    int Add(
        const wxBitmap & bitmap,
        const wxColour & maskColour
    );

    int Add(
        const wxIcon & icon
    );

    bool Create(
        int width,
        int height,
        bool mask = true,
        int initialCount = 1
    );
    %Docstring
        Create(width, height, mask=True, initialCount=1) -> bool
        
        Initializes the list.
    %End

    bool Draw(
        int index,
        wxDC & dc,
        int x,
        int y,
        int flags = wxIMAGELIST_DRAW_NORMAL,
        bool solidBackground = false
    );
    %Docstring
        Draw(index, dc, x, y, flags=IMAGELIST_DRAW_NORMAL, solidBackground=False) -> bool
        
        Draws a specified image onto a device context.
    %End

    wxBitmap GetBitmap(
        int index
    ) const;
    %Docstring
        GetBitmap(index) -> Bitmap
        
        Returns the bitmap corresponding to the given index.
    %End

    wxIcon GetIcon(
        int index
    ) const;
    %Docstring
        GetIcon(index) -> Icon
        
        Returns the icon corresponding to the given index.
    %End

    int GetImageCount() const;
    %Docstring
        GetImageCount() -> int
        
        Returns the number of images in the list.
    %End

    void GetSize(
        int index,
        int & width   /Out/,
        int & height   /Out/
    ) const;
    %Docstring
        GetSize(index) -> (width, height)
        GetSize() -> Size
        
        Retrieves the size of the images in the list.
    %End

    wxSize GetSize() const;

    bool Remove(
        int index
    );
    %Docstring
        Remove(index) -> bool
        
        Removes the image at the given position.
    %End

    bool RemoveAll();
    %Docstring
        RemoveAll() -> bool
        
        Removes all the images in the list.
    %End

    bool Replace(
        int index,
        const wxBitmap & bitmap,
        const wxBitmap & mask = wxNullBitmap
    );
    %Docstring
        Replace(index, bitmap, mask=NullBitmap) -> bool
        Replace(index, icon) -> bool
        
        Replaces the existing image with the new image.
    %End

    bool Replace(
        int index,
        const wxIcon & icon
    );

    private:
        wxImageList(const wxImageList&);


    private:
        wxImageList& operator=(const wxImageList&);


    public:


    %Property(name=ImageCount, get=GetImageCount)
    %Property(name=Size, get=GetSize)
};  // end of class wxImageList



//---------------------------------------------------------------------------

