//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxRichMessageDialog : wxGenericMessageDialog
{
    %Docstring
        RichMessageDialog(parent, message, caption=MessageBoxCaptionStr, style=OK|CENTRE)
        
        Extension of wxMessageDialog with additional functionality.
    %End
    %TypeHeaderCode
        #include <wx/richmsgdlg.h>
    %End

public:
    wxRichMessageDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption = wxMessageBoxCaptionStr,
        long style = wxOK|wxCENTRE
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    void ShowCheckBox(
        const wxString & checkBoxText,
        bool checked = false
    );
    %Docstring
        ShowCheckBox(checkBoxText, checked=False)
        
        Shows a checkbox with a given label or hides it.
    %End

    wxString GetCheckBoxText() const;
    %Docstring
        GetCheckBoxText() -> String
        
        Retrieves the label for the checkbox.
    %End

    void ShowDetailedText(
        const wxString & detailedText
    );
    %Docstring
        ShowDetailedText(detailedText)
        
        Shows or hides a detailed text and an expander that is used to show or
        hide the detailed text.
    %End

    wxString GetDetailedText() const;
    %Docstring
        GetDetailedText() -> String
        
        Retrieves the detailed text.
    %End

    void SetFooterText(
        const wxString & footerText
    );
    %Docstring
        SetFooterText(footerText)
        
        Shows or hides a footer text that is used at the bottom of the dialog
        together with an optional icon.
    %End

    wxString GetFooterText() const;
    %Docstring
        GetFooterText() -> String
        
        Retrieves the footer text.
    %End

    void SetFooterIcon(
        int icon
    );
    %Docstring
        SetFooterIcon(icon)
        
        Specify the footer icon set together with the footer text.
    %End

    int GetFooterIcon() const;
    %Docstring
        GetFooterIcon() -> int
        
        Retrieves the footer icon.
    %End

    bool IsCheckBoxChecked() const;
    %Docstring
        IsCheckBoxChecked() -> bool
        
        Retrieves the state of the checkbox.
    %End

    int ShowModal();
    %Docstring
        ShowModal() -> int
        
        Shows the dialog, returning one of wxID_OK, wxID_CANCEL, wxID_YES,
        wxID_NO.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=CheckBoxText, get=GetCheckBoxText)
    %Property(name=DetailedText, get=GetDetailedText)
    %Property(name=FooterIcon, get=GetFooterIcon, set=SetFooterIcon)
    %Property(name=FooterText, get=GetFooterText, set=SetFooterText)
};  // end of class wxRichMessageDialog



//---------------------------------------------------------------------------

