//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#if !wxUSE_UIACTIONSIMULATOR
class wxUIActionSimulator;

class wxUIActionSimulator {
public:
    wxUIActionSimulator()
        { wxPyRaiseNotImplemented(); }

    bool MouseMove(long x, long y)
        { return false; }

    bool MouseMove(const wxPoint &point)
        { return false; }

    bool MouseDown(int button=wxMOUSE_BTN_LEFT)
        { return false; }

    bool MouseUp(int button=wxMOUSE_BTN_LEFT)
        { return false; }

    bool MouseClick(int button=wxMOUSE_BTN_LEFT)
        { return false; }

    bool MouseDblClick(int button=wxMOUSE_BTN_LEFT)
        { return false; }

    bool MouseDragDrop(long x1, long y1, long x2, long y2, int button=wxMOUSE_BTN_LEFT)
        { return false; }

    bool KeyDown(int keycode, int modifiers=wxMOD_NONE)
        { return false; }

    bool KeyUp(int keycode, int modifiers=wxMOD_NONE)
        { return false; }

    bool Char(int keycode, int modifiers=wxMOD_NONE)
        { return false; }

    bool Select(const wxString &text)
        { return false; }

    bool Text(const char *text)
        { return false; }

};
#endif //!wxUSE_UIACTIONSIMULATOR

%End


//---------------------------------------------------------------------------

class wxUIActionSimulator
{
    %Docstring
        UIActionSimulator()
        
        wxUIActionSimulator is a class used to simulate user interface actions
        such as a mouse click or a key press.
    %End
    %TypeHeaderCode
        #include <wx/uiaction.h>
    %End

public:
    wxUIActionSimulator();

    bool MouseMove(
        long x,
        long y
    );
    %Docstring
        MouseMove(x, y) -> bool
        MouseMove(point) -> bool
        
        Move the mouse to the specified coordinates.
    %End

    bool MouseMove(
        const wxPoint & point
    );

    bool MouseDown(
        int button = wxMOUSE_BTN_LEFT
    );
    %Docstring
        MouseDown(button=MOUSE_BTN_LEFT) -> bool
        
        Press a mouse button.
    %End

    bool MouseUp(
        int button = wxMOUSE_BTN_LEFT
    );
    %Docstring
        MouseUp(button=MOUSE_BTN_LEFT) -> bool
        
        Release a mouse button.
    %End

    bool MouseClick(
        int button = wxMOUSE_BTN_LEFT
    );
    %Docstring
        MouseClick(button=MOUSE_BTN_LEFT) -> bool
        
        Click a mouse button.
    %End

    bool MouseDblClick(
        int button = wxMOUSE_BTN_LEFT
    );
    %Docstring
        MouseDblClick(button=MOUSE_BTN_LEFT) -> bool
        
        Double-click a mouse button.
    %End

    bool MouseDragDrop(
        long x1,
        long y1,
        long x2,
        long y2,
        int button = wxMOUSE_BTN_LEFT
    );
    %Docstring
        MouseDragDrop(x1, y1, x2, y2, button=MOUSE_BTN_LEFT) -> bool
        
        Perform a drag and drop operation.
    %End

    bool KeyDown(
        int keycode,
        int modifiers = wxMOD_NONE
    );
    %Docstring
        KeyDown(keycode, modifiers=MOD_NONE) -> bool
        
        Press a key.
    %End

    bool KeyUp(
        int keycode,
        int modifiers = wxMOD_NONE
    );
    %Docstring
        KeyUp(keycode, modifiers=MOD_NONE) -> bool
        
        Release a key.
    %End

    bool Char(
        int keycode,
        int modifiers = wxMOD_NONE
    );
    %Docstring
        Char(keycode, modifiers=MOD_NONE) -> bool
        
        Press and release a key.
    %End

    bool Select(
        const wxString & text
    );
    %Docstring
        Select(text) -> bool
        
        Simulate selection of an item with the given text.
    %End

    bool Text(
        const char * text
    );
    %Docstring
        Text(text) -> bool
        
        Emulate typing in the keys representing the given string.
    %End

    private:
        wxUIActionSimulator(const wxUIActionSimulator&);


    private:
        wxUIActionSimulator& operator=(const wxUIActionSimulator&);


};  // end of class wxUIActionSimulator


const int wxUSE_UIACTIONSIMULATOR;

//---------------------------------------------------------------------------

