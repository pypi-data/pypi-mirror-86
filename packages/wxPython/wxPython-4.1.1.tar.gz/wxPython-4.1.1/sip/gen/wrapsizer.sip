//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/wrapsizer.h>
%End


//---------------------------------------------------------------------------

enum 
{
    wxEXTEND_LAST_ON_EACH_LINE,
    wxREMOVE_LEADING_SPACES,
    wxWRAPSIZER_DEFAULT_FLAGS
};

class wxWrapSizer : wxBoxSizer
{
    %Docstring
        WrapSizer(orient=HORIZONTAL, flags=WRAPSIZER_DEFAULT_FLAGS)
        
        A wrap sizer lays out its items in a single line, like a box sizer  as
        long as there is space available in that direction.
    %End
    %TypeHeaderCode
        #include <wx/wrapsizer.h>
    %End

public:
    wxWrapSizer(
        int orient = wxHORIZONTAL,
        int flags = wxWRAPSIZER_DEFAULT_FLAGS
    );

    bool InformFirstDirection(
        int direction,
        int size,
        int availableOtherDir
    );
    %Docstring
        InformFirstDirection(direction, size, availableOtherDir) -> bool
        
        Not used by an application.
    %End

    virtual
    void RepositionChildren(
        const wxSize & minSize
    );
    %Docstring
        RepositionChildren(minSize)
        
        Method which must be overridden in the derived sizer classes.
    %End

    virtual
    wxSize CalcMin();
    %Docstring
        CalcMin() -> Size
        
        Implements the calculation of a box sizer's minimal.
    %End


protected:
    virtual
    bool IsSpaceItem(
        wxSizerItem * item
    ) const;
    %Docstring
        IsSpaceItem(item) -> bool
        
        Can be overridden in the derived classes to treat some normal items as
        spacers.
    %End

};  // end of class wxWrapSizer



//---------------------------------------------------------------------------

