//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/toolbook.h>
%End


//---------------------------------------------------------------------------

const int wxTBK_BUTTONBAR;
const int wxTBK_HORZ_LAYOUT;
wxEventType wxEVT_TOOLBOOK_PAGE_CHANGED   /PyName=wxEVT_TOOLBOOK_PAGE_CHANGED/;

wxEventType wxEVT_TOOLBOOK_PAGE_CHANGING   /PyName=wxEVT_TOOLBOOK_PAGE_CHANGING/;

class wxToolbook : wxBookCtrlBase
{
    %Docstring
        Toolbook()
        Toolbook(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString)
        
        wxToolbook is a class similar to wxNotebook but which uses a wxToolBar
        to show the labels instead of the tabs.
    %End
    %TypeHeaderCode
        #include <wx/toolbook.h>
    %End

public:
    wxToolbook();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxToolbook(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxEmptyString
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxEmptyString
    );
    %Docstring
        Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString) -> bool
        
        Create the tool book control that has already been constructed with
        the default constructor.
    %End

    wxToolBar* GetToolBar();
    %Docstring
        GetToolBar() -> ToolBar
        
        Return the toolbar used for page selection.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxToolbook_GetToolBar(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxToolBar* _wxToolbook_GetToolBar(wxToolbook* self)
    {
        return (wxToolBar*)self->GetToolBar();
    }
    %End

    bool EnablePage(
        size_t page,
        bool enable
    );
    %Docstring
        EnablePage(page, enable) -> bool
        EnablePage(page, enable) -> bool
        
        Enables or disables the specified page.
    %End

    bool EnablePage(
        wxWindow * page,
        bool enable
    );

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual int GetPageImage(size_t nPage) const;


    virtual bool SetPageImage(size_t page, int image);


    virtual wxString GetPageText(size_t nPage) const;


    virtual bool SetPageText(size_t page, const wxString& text);


    virtual int GetSelection() const;


    virtual int SetSelection(size_t page);


    virtual int ChangeSelection(size_t page);


    virtual int HitTest(const wxPoint& pt, long* flags /Out/ = NULL) const;


    virtual bool InsertPage(size_t index, wxWindow * page, const wxString & text, bool select = false, int imageId = NO_IMAGE);


    virtual bool DeleteAllPages();


    public:


    %Property(name=ToolBar, get=GetToolBar)
};  // end of class wxToolbook


%Extract(id=pycode_core)
EVT_TOOLBOOK_PAGE_CHANGED  = wx.PyEventBinder( wxEVT_TOOLBOOK_PAGE_CHANGED, 1 )
EVT_TOOLBOOK_PAGE_CHANGING = wx.PyEventBinder( wxEVT_TOOLBOOK_PAGE_CHANGING, 1 )

# deprecated wxEVT aliases
wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED   = wxEVT_TOOLBOOK_PAGE_CHANGED
wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING  = wxEVT_TOOLBOOK_PAGE_CHANGING

%End


//---------------------------------------------------------------------------

