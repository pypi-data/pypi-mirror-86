//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/unichar.h>
%End


//---------------------------------------------------------------------------

class wxUniChar
{
    %Docstring
        UniChar(c)
        UniChar(c)
        
        This class represents a single Unicode character.
    %End
    %TypeHeaderCode
        #include <wx/unichar.h>
    %End

public:
    wxUniChar(
        long c
    );

    wxUniChar(
        unsigned long c
    );

    typedef wxUint32 value_type;

    value_type GetValue() const;
    %Docstring
        GetValue() -> value_type
        
        Returns Unicode code point value of the character.
    %End

    bool IsAscii() const;
    %Docstring
        IsAscii() -> bool
        
        Returns true if the character is an ASCII character (i.e. if its value
        is less than 128).
    %End

    bool GetAsChar(
        char * c
    ) const;
    %Docstring
        GetAsChar(c) -> bool
        
        Returns true if the character is representable as a single byte in the
        current locale encoding.
    %End

    bool IsBMP() const;
    %Docstring
        IsBMP() -> bool
        IsBMP(value) -> bool
        
        Returns true if the character is a BMP character (i.e. if its value is
        less than 0x10000).
    %End

    static
    bool IsBMP(
        wxUint32 value
    );

    bool IsSupplementary() const;
    %Docstring
        IsSupplementary() -> bool
        IsSupplementary(value) -> bool
        
        Returns true if the character is a supplementary character (i.e.
        between 0x10000 and 0x10FFFF).
    %End

    static
    bool IsSupplementary(
        wxUint32 value
    );

    wxUint16 HighSurrogate() const;
    %Docstring
        HighSurrogate() -> Uint16
        HighSurrogate(value) -> Uint16
        
        Returns the high surrogate code unit for the supplementary character.
    %End

    static
    wxUint16 HighSurrogate(
        wxUint32 value
    );

    wxUint16 LowSurrogate() const;
    %Docstring
        LowSurrogate() -> Uint16
        LowSurrogate(value) -> Uint16
        
        Returns the low surrogate code unit for the supplementary character.
    %End

    static
    wxUint16 LowSurrogate(
        wxUint32 value
    );

    public:


    %Property(name=Value, get=GetValue)
};  // end of class wxUniChar



//---------------------------------------------------------------------------

