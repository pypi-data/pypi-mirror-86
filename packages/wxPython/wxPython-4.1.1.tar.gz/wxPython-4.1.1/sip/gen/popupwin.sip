//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------
%ModuleCode
#include <wx/popupwin.h>
%End

//---------------------------------------------------------------------------

const int wxPU_CONTAINS_CONTROLS;
class wxPopupWindow : wxNonOwnedWindow
{
    %Docstring
        PopupWindow()
        PopupWindow(parent, flags=BORDER_NONE)
        
        A special kind of top level window used for popup menus, combobox
        popups and such.
    %End
    %TypeHeaderCode
        #include <wx/popupwin.h>
    %End

public:
    wxPopupWindow();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxPopupWindow(
        wxWindow * parent   /TransferThis/,
        int flags = wxBORDER_NONE
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        int flags = wxBORDER_NONE
    );
    %Docstring
        Create(parent, flags=BORDER_NONE) -> bool
        
        Create method for two-step creation.
    %End

    virtual
    void Position(
        const wxPoint & ptOrigin,
        const wxSize & sizePopup
    );
    %Docstring
        Position(ptOrigin, sizePopup)
        
        Move the popup window to the right position, i.e. such that it is
        entirely visible.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

};  // end of class wxPopupWindow


class wxPopupTransientWindow : wxPopupWindow
{
    %Docstring
        PopupTransientWindow()
        PopupTransientWindow(parent, flags=BORDER_NONE)
        
        A wxPopupWindow which disappears automatically when the user clicks
        mouse outside it or if it loses focus in any other way.
    %End
    %TypeHeaderCode
        #include <wx/popupwin.h>
    %End

public:
    wxPopupTransientWindow();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxPopupTransientWindow(
        wxWindow * parent   /TransferThis/,
        int flags = wxBORDER_NONE
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    void Popup(
        wxWindow * focus = NULL
    );
    %Docstring
        Popup(focus=None)
        
        Popup the window (this will show it too).
    %End

    virtual
    void Dismiss();
    %Docstring
        Dismiss()
        
        Hide the window.
    %End

    virtual
    bool ProcessLeftDown(
        wxMouseEvent & event
    );
    %Docstring
        ProcessLeftDown(event) -> bool
        
        Called when a mouse is pressed while the popup is shown.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End


protected:
    virtual
    void OnDismiss();
    %Docstring
        OnDismiss()
        
        This is called when the popup is disappeared because of anything else
        but direct call to Dismiss().
    %End

};  // end of class wxPopupTransientWindow



//---------------------------------------------------------------------------

