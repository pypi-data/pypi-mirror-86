//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxFindReplaceFlags
{
    wxFR_DOWN,
    wxFR_WHOLEWORD,
    wxFR_MATCHCASE
};

enum wxFindReplaceDialogStyles
{
    wxFR_REPLACEDIALOG,
    wxFR_NOUPDOWN,
    wxFR_NOMATCHCASE,
    wxFR_NOWHOLEWORD
};

wxEventType wxEVT_FIND   /PyName=wxEVT_FIND/;

wxEventType wxEVT_FIND_NEXT   /PyName=wxEVT_FIND_NEXT/;

wxEventType wxEVT_FIND_REPLACE   /PyName=wxEVT_FIND_REPLACE/;

wxEventType wxEVT_FIND_REPLACE_ALL   /PyName=wxEVT_FIND_REPLACE_ALL/;

wxEventType wxEVT_FIND_CLOSE   /PyName=wxEVT_FIND_CLOSE/;

class wxFindDialogEvent : wxCommandEvent
{
    %Docstring
        FindDialogEvent(commandType=wxEVT_NULL, id=0)
        
        wxFindReplaceDialog events.
    %End
    %TypeHeaderCode
        #include <wx/fdrepdlg.h>
    %End

public:
    wxFindDialogEvent(
        wxEventType commandType = wxEVT_NULL,
        int id = 0
    );

    wxFindReplaceDialog * GetDialog() const;
    %Docstring
        GetDialog() -> FindReplaceDialog
        
        Return the pointer to the dialog which generated this event.
    %End

    wxString GetFindString() const;
    %Docstring
        GetFindString() -> String
        
        Return the string to find (never empty).
    %End

    int GetFlags() const;
    %Docstring
        GetFlags() -> int
        
        Get the currently selected flags: this is the combination of the
        wxFindReplaceFlags enumeration values.
    %End

    const wxString & GetReplaceString() const;
    %Docstring
        GetReplaceString() -> String
        
        Return the string to replace the search string with (only for replace
        and replace all events).
    %End

    public:
    virtual wxEvent* Clone() const /Factory/;


    private:
        wxFindDialogEvent& operator=(const wxFindDialogEvent&);


    public:


    %Property(name=Dialog, get=GetDialog)
    %Property(name=FindString, get=GetFindString)
    %Property(name=Flags, get=GetFlags)
    %Property(name=ReplaceString, get=GetReplaceString)
};  // end of class wxFindDialogEvent


class wxFindReplaceData : wxObject
{
    %Docstring
        FindReplaceData(flags=0)
        
        wxFindReplaceData holds the data for wxFindReplaceDialog.
    %End
    %TypeHeaderCode
        #include <wx/fdrepdlg.h>
    %End

public:
    wxFindReplaceData(
        wxUint32 flags = 0
    );

    const wxString & GetFindString() const;
    %Docstring
        GetFindString() -> String
        
        Get the string to find.
    %End

    int GetFlags() const;
    %Docstring
        GetFlags() -> int
        
        Get the combination of wxFindReplaceFlags values.
    %End

    const wxString & GetReplaceString() const;
    %Docstring
        GetReplaceString() -> String
        
        Get the replacement string.
    %End

    void SetFindString(
        const wxString & str
    );
    %Docstring
        SetFindString(str)
        
        Set the string to find (used as initial value by the dialog).
    %End

    void SetFlags(
        wxUint32 flags
    );
    %Docstring
        SetFlags(flags)
        
        Set the flags to use to initialize the controls of the dialog.
    %End

    void SetReplaceString(
        const wxString & str
    );
    %Docstring
        SetReplaceString(str)
        
        Set the replacement string (used as initial value by the dialog).
    %End

    public:


    %Property(name=FindString, get=GetFindString, set=SetFindString)
    %Property(name=Flags, get=GetFlags, set=SetFlags)
    %Property(name=ReplaceString, get=GetReplaceString, set=SetReplaceString)
};  // end of class wxFindReplaceData


class wxFindReplaceDialog : wxDialog
{
    %Docstring
        FindReplaceDialog()
        FindReplaceDialog(parent, data, title=EmptyString, style=0)
        
        wxFindReplaceDialog is a standard modeless dialog which is used to
        allow the user to search for some text (and possibly replace it with
        something else).
    %End
    %TypeHeaderCode
        #include <wx/fdrepdlg.h>
    %End

public:
    wxFindReplaceDialog();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxFindReplaceDialog(
        wxWindow * parent,
        wxFindReplaceData * data   /KeepReference/,
        const wxString & title = wxEmptyString,
        int style = 0
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxFindReplaceDialog();

    bool Create(
        wxWindow * parent,
        wxFindReplaceData * data,
        const wxString & title = wxEmptyString,
        int style = 0
    )   /TransferThis/;
    %Docstring
        Create(parent, data, title=EmptyString, style=0) -> bool
        
        Creates the dialog; use wxWindow::Show to show it on screen.
    %End

    const wxFindReplaceData * GetData() const;
    %Docstring
        GetData() -> FindReplaceData
        
        Get the wxFindReplaceData object used by this dialog.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Data, get=GetData)
};  // end of class wxFindReplaceDialog


%Extract(id=pycode_core)
EVT_FIND = wx.PyEventBinder( wxEVT_FIND, 1 )
EVT_FIND_NEXT = wx.PyEventBinder( wxEVT_FIND_NEXT, 1 )
EVT_FIND_REPLACE = wx.PyEventBinder( wxEVT_FIND_REPLACE, 1 )
EVT_FIND_REPLACE_ALL = wx.PyEventBinder( wxEVT_FIND_REPLACE_ALL, 1 )
EVT_FIND_CLOSE = wx.PyEventBinder( wxEVT_FIND_CLOSE, 1 )

# deprecated wxEVT aliases
wxEVT_COMMAND_FIND              = wxEVT_FIND
wxEVT_COMMAND_FIND_NEXT         = wxEVT_FIND_NEXT
wxEVT_COMMAND_FIND_REPLACE      = wxEVT_FIND_REPLACE
wxEVT_COMMAND_FIND_REPLACE_ALL  = wxEVT_FIND_REPLACE_ALL
wxEVT_COMMAND_FIND_CLOSE        = wxEVT_FIND_CLOSE

%End


//---------------------------------------------------------------------------

