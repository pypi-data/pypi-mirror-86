//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/notebook.h>
%End


//---------------------------------------------------------------------------

const int wxNB_DEFAULT;
const int wxNB_TOP;
const int wxNB_BOTTOM;
const int wxNB_LEFT;
const int wxNB_RIGHT;
const int wxNB_FIXEDWIDTH;
const int wxNB_MULTILINE;
const int wxNB_NOPAGETHEME;
enum 
{
    wxNB_HITTEST_NOWHERE,
    wxNB_HITTEST_ONICON,
    wxNB_HITTEST_ONLABEL,
    wxNB_HITTEST_ONITEM,
    wxNB_HITTEST_ONPAGE
};

wxEventType wxEVT_NOTEBOOK_PAGE_CHANGED   /PyName=wxEVT_NOTEBOOK_PAGE_CHANGED/;

wxEventType wxEVT_NOTEBOOK_PAGE_CHANGING   /PyName=wxEVT_NOTEBOOK_PAGE_CHANGING/;

const char* wxNotebookNameStr;

class wxNotebook : wxBookCtrlBase
{
    %Docstring
        Notebook()
        Notebook(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=NotebookNameStr)
        
        This class represents a notebook control, which manages multiple
        windows with associated tabs.
    %End
    %TypeHeaderCode
        #include <wx/notebook.h>
    %End

public:
    wxNotebook();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxNotebook(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxNotebookNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxNotebook();

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxNotebookNameStr
    );
    %Docstring
        Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=NotebookNameStr) -> bool
        
        Creates a notebook control.
    %End

    int GetRowCount() const;
    %Docstring
        GetRowCount() -> int
        
        Returns the number of rows in the notebook control.
    %End

    wxColour GetThemeBackgroundColour() const;
    %Docstring
        GetThemeBackgroundColour() -> Colour
        
        If running under Windows and themes are enabled for the application,
        this function returns a suitable colour for painting the background of
        a notebook page, and can be passed to SetBackgroundColour().
    %End

    void SetPadding(
        const wxSize & padding
    );
    %Docstring
        SetPadding(padding)
        
        Sets the amount of space around each page's icon and label, in pixels.
    %End

    int GetPageImage(
        size_t nPage
    ) const;
    %Docstring
        GetPageImage(nPage) -> int
        
        Returns the image index for the given page.
    %End

    bool SetPageImage(
        size_t page,
        int image
    );
    %Docstring
        SetPageImage(page, image) -> bool
        
        Sets the image index for the given page.
    %End

    wxString GetPageText(
        size_t nPage
    ) const;
    %Docstring
        GetPageText(nPage) -> String
        
        Returns the string for the given page.
    %End

    bool SetPageText(
        size_t page,
        const wxString & text
    );
    %Docstring
        SetPageText(page, text) -> bool
        
        Sets the text for the given page.
    %End

    int GetSelection() const;
    %Docstring
        GetSelection() -> int
        
        Returns the currently selected page, or wxNOT_FOUND if none was
        selected.
    %End

    int SetSelection(
        size_t page
    );
    %Docstring
        SetSelection(page) -> int
        
        Sets the selection to the given page, returning the previous
        selection.
    %End

    int ChangeSelection(
        size_t page
    );
    %Docstring
        ChangeSelection(page) -> int
        
        Changes the selection to the given page, returning the previous
        selection.
    %End

    bool InsertPage(
        size_t index,
        wxWindow * page,
        const wxString & text,
        bool select = false,
        int imageId = NO_IMAGE
    );
    %Docstring
        InsertPage(index, page, text, select=False, imageId=NO_IMAGE) -> bool
        
        Inserts a new page at the specified position.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual int HitTest(const wxPoint& pt, long* flags /Out/ = NULL) const;


    virtual bool DeleteAllPages();


    public:


    %Property(name=RowCount, get=GetRowCount)
    %Property(name=Selection, get=GetSelection, set=SetSelection)
    %Property(name=ThemeBackgroundColour, get=GetThemeBackgroundColour)
};  // end of class wxNotebook


%Extract(id=pycode_core)
EVT_NOTEBOOK_PAGE_CHANGED  = wx.PyEventBinder( wxEVT_NOTEBOOK_PAGE_CHANGED, 1 )
EVT_NOTEBOOK_PAGE_CHANGING = wx.PyEventBinder( wxEVT_NOTEBOOK_PAGE_CHANGING, 1 )

%End

%Extract(id=pycode_core)
# Aliases for the "best book" control as described in the overview
BookCtrl =                       Notebook
wxEVT_BOOKCTRL_PAGE_CHANGED =    wxEVT_NOTEBOOK_PAGE_CHANGED
wxEVT_BOOKCTRL_PAGE_CHANGING =   wxEVT_NOTEBOOK_PAGE_CHANGING
EVT_BOOKCTRL_PAGE_CHANGED =      EVT_NOTEBOOK_PAGE_CHANGED
EVT_BOOKCTRL_PAGE_CHANGING =     EVT_NOTEBOOK_PAGE_CHANGING

# deprecated wxEVT aliases
wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGED   = wxEVT_BOOKCTRL_PAGE_CHANGED
wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGING  = wxEVT_BOOKCTRL_PAGE_CHANGING
wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED   = wxEVT_NOTEBOOK_PAGE_CHANGED
wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING  = wxEVT_NOTEBOOK_PAGE_CHANGING

%End

%Extract(id=pycode_core)
# Add wx.NotebookPage alias, as seen in the documentation
NotebookPage = Window

%End


//---------------------------------------------------------------------------

