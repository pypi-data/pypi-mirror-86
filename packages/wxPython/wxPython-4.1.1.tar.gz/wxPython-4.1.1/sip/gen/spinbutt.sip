//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxSpinButton : wxControl
{
    %Docstring
        SpinButton()
        SpinButton(parent, id=-1, pos=DefaultPosition, size=DefaultSize, style=SP_VERTICAL, name="spinButton")
        
        A wxSpinButton has two small up and down (or left and right) arrow
        buttons.
    %End
    %TypeHeaderCode
        #include <wx/spinbutt.h>
    %End

public:
    wxSpinButton();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxSpinButton(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = -1,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxSP_VERTICAL,
        const wxString & name = "spinButton"
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxSpinButton();

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = -1,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxSP_VERTICAL,
        const wxString & name = "wxSpinButton"
    );
    %Docstring
        Create(parent, id=-1, pos=DefaultPosition, size=DefaultSize, style=SP_VERTICAL, name="wxSpinButton") -> bool
        
        Scrollbar creation function called by the spin button constructor.
    %End

    int GetMax() const;
    %Docstring
        GetMax() -> int
        
        Returns the maximum permissible value.
    %End

    int GetMin() const;
    %Docstring
        GetMin() -> int
        
        Returns the minimum permissible value.
    %End

    int GetValue() const;
    %Docstring
        GetValue() -> int
        
        Returns the current spin button value.
    %End

    void SetRange(
        int min,
        int max
    );
    %Docstring
        SetRange(min, max)
        
        Sets the range of the spin button.
    %End

    void SetValue(
        int value
    );
    %Docstring
        SetValue(value)
        
        Sets the value of the spin button.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Value, get=GetValue, set=SetValue)
};  // end of class wxSpinButton


%Extract(id=pycode_core)
def _SpinButton_GetRange(self):
    return (self.GetMin(), self.GetMax())
SpinButton.GetRange = _SpinButton_GetRange
del _SpinButton_GetRange
%End

%Extract(id=pycode_core)
def _SpinButton_SetMin(self, minVal):
    self.SetRange(minVal, self.GetMax())
SpinButton.SetMin = _SpinButton_SetMin
del _SpinButton_SetMin
%End

%Extract(id=pycode_core)
def _SpinButton_SetMax(self, maxVal):
    self.SetRange(self.GetMin(), maxVal)
SpinButton.SetMax = _SpinButton_SetMax
del _SpinButton_SetMax
%End

%Extract(id=pycode_core)
SpinButton.Max = property(SpinButton.GetMax, SpinButton.SetMax)
%End

%Extract(id=pycode_core)
SpinButton.Min = property(SpinButton.GetMin, SpinButton.SetMin)
%End

%Extract(id=pycode_core)
SpinButton.Range = property(SpinButton.GetRange)
%End

class wxSpinEvent : wxNotifyEvent
{
    %Docstring
        SpinEvent(commandType=wxEVT_NULL, id=0)
        
        This event class is used for the events generated by wxSpinButton and
        wxSpinCtrl.
    %End
    %TypeHeaderCode
        #include <wx/spinbutt.h>
    %End

public:
    wxSpinEvent(
        wxEventType commandType = wxEVT_NULL,
        int id = 0
    );

    int GetPosition() const;
    %Docstring
        GetPosition() -> int
        
        Retrieve the current spin button or control value.
    %End

    void SetPosition(
        int pos
    );
    %Docstring
        SetPosition(pos)
        
        Set the value associated with the event.
    %End

    public:
    virtual wxEvent* Clone() const /Factory/;


    private:
        wxSpinEvent& operator=(const wxSpinEvent&);


    public:


    %Property(name=Position, get=GetPosition, set=SetPosition)
};  // end of class wxSpinEvent


%Extract(id=pycode_core)
EVT_SPIN_UP   = wx.PyEventBinder( wxEVT_SPIN_UP, 1)
EVT_SPIN_DOWN = wx.PyEventBinder( wxEVT_SPIN_DOWN, 1)
EVT_SPIN      = wx.PyEventBinder( wxEVT_SPIN, 1)

%End


//---------------------------------------------------------------------------

