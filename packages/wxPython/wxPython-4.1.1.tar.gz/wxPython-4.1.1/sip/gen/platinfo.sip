//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxOperatingSystemId
{
    wxOS_UNKNOWN,
    wxOS_MAC_OS,
    wxOS_MAC_OSX_DARWIN,
    wxOS_MAC,
    wxOS_WINDOWS_NT,
    wxOS_WINDOWS,
    wxOS_UNIX_LINUX,
    wxOS_UNIX_FREEBSD,
    wxOS_UNIX_OPENBSD,
    wxOS_UNIX_NETBSD,
    wxOS_UNIX_SOLARIS,
    wxOS_UNIX_AIX,
    wxOS_UNIX_HPUX,
    wxOS_UNIX
};

enum wxPortId
{
    wxPORT_UNKNOWN,
    wxPORT_BASE,
    wxPORT_MSW,
    wxPORT_MOTIF,
    wxPORT_GTK,
    wxPORT_DFB,
    wxPORT_X11,
    wxPORT_MAC,
    wxPORT_COCOA,
    wxPORT_QT
};

enum wxArchitecture
{
    wxARCH_INVALID,
    wxARCH_32,
    wxARCH_64,
    wxARCH_MAX
};

enum wxEndianness
{
    wxENDIAN_INVALID,
    wxENDIAN_BIG,
    wxENDIAN_LITTLE,
    wxENDIAN_PDP,
    wxENDIAN_MAX
};

class wxPlatformInfo   /PyName=PlatformInformation/
{
    %Docstring
        PlatformInfo()
        PlatformInfo(pid, tkMajor=-1, tkMinor=-1, id=OS_UNKNOWN, osMajor=-1, osMinor=-1, arch=ARCH_INVALID, endian=ENDIAN_INVALID)
        
        This class holds information about the operating system, the toolkit
        and the basic architecture of the machine where the application is
        currently running.
    %End
    %TypeHeaderCode
        #include <wx/platinfo.h>
    %End

public:
    wxPlatformInfo();

    wxPlatformInfo(
        wxPortId pid,
        int tkMajor = -1,
        int tkMinor = -1,
        wxOperatingSystemId id = wxOS_UNKNOWN,
        int osMajor = -1,
        int osMinor = -1,
        wxArchitecture arch = wxARCH_INVALID,
        wxEndianness endian = wxENDIAN_INVALID
    );

    static
    wxArchitecture GetArch(
        const wxString & arch
    );
    %Docstring
        GetArch(arch) -> Architecture
        
        Converts the given string to a wxArchitecture enum value or to
        wxARCH_INVALID if the given string is not a valid architecture string
        (i.e.
    %End

    wxEndianness GetEndianness() const;
    %Docstring
        GetEndianness() -> Endianness
        
        Returns the endianness ID of this wxPlatformInfo instance.
    %End

    wxOperatingSystemId GetOperatingSystemId() const;
    %Docstring
        GetOperatingSystemId() -> OperatingSystemId
        
        Returns the operating system ID of this wxPlatformInfo instance.
    %End

    wxPortId GetPortId() const;
    %Docstring
        GetPortId() -> PortId
        
        Returns the wxWidgets port ID associated with this wxPlatformInfo
        instance.
    %End

    wxString GetArchName() const;
    %Docstring
        GetArchName() -> String
        
        Returns the name for the architecture of this wxPlatformInfo instance.
    %End

    wxString GetEndiannessName() const;
    %Docstring
        GetEndiannessName() -> String
        
        Returns the name for the endianness of this wxPlatformInfo instance.
    %End

    wxString GetOperatingSystemFamilyName() const;
    %Docstring
        GetOperatingSystemFamilyName() -> String
        
        Returns the operating system family name of the OS associated with
        this wxPlatformInfo instance.
    %End

    wxString GetOperatingSystemIdName() const;
    %Docstring
        GetOperatingSystemIdName() -> String
        
        Returns the operating system name of the OS associated with this
        wxPlatformInfo instance.
    %End

    wxString GetPortIdName() const;
    %Docstring
        GetPortIdName() -> String
        
        Returns the name of the wxWidgets port ID associated with this
        wxPlatformInfo instance.
    %End

    wxString GetPortIdShortName() const;
    %Docstring
        GetPortIdShortName() -> String
        
        Returns the short name of the wxWidgets port ID associated with this
        wxPlatformInfo instance.
    %End

    static
    wxString GetOperatingSystemDirectory();
    %Docstring
        GetOperatingSystemDirectory() -> String
        
        Returns the operating system directory.
    %End

    wxArchitecture GetArchitecture() const;
    %Docstring
        GetArchitecture() -> Architecture
        
        Returns the architecture ID of this wxPlatformInfo instance.
    %End

    int GetOSMajorVersion() const;
    %Docstring
        GetOSMajorVersion() -> int
        
        Returns the run-time major version of the OS associated with this
        wxPlatformInfo instance.
    %End

    int GetOSMinorVersion() const;
    %Docstring
        GetOSMinorVersion() -> int
        
        Returns the run-time minor version of the OS associated with this
        wxPlatformInfo instance.
    %End

    int GetOSMicroVersion() const;
    %Docstring
        GetOSMicroVersion() -> int
        
        Returns the run-time micro version of the OS associated with this
        wxPlatformInfo instance.
    %End

    wxString GetOperatingSystemDescription() const;
    %Docstring
        GetOperatingSystemDescription() -> String
        
        Returns the description of the operating system of this wxPlatformInfo
        instance.
    %End

    wxLinuxDistributionInfo GetLinuxDistributionInfo() const;
    %Docstring
        GetLinuxDistributionInfo() -> LinuxDistributionInfo
        
        Returns the Linux distribution info associated with this
        wxPlatformInfo instance.
    %End

    wxString GetDesktopEnvironment() const;
    %Docstring
        GetDesktopEnvironment() -> String
        
        Returns the desktop environment associated with this wxPlatformInfo
        instance.
    %End

    int GetToolkitMajorVersion() const;
    %Docstring
        GetToolkitMajorVersion() -> int
        
        Returns the run-time major version of the toolkit associated with this
        wxPlatformInfo instance.
    %End

    int GetToolkitMinorVersion() const;
    %Docstring
        GetToolkitMinorVersion() -> int
        
        Returns the run-time minor version of the toolkit associated with this
        wxPlatformInfo instance.
    %End

    int GetToolkitMicroVersion() const;
    %Docstring
        GetToolkitMicroVersion() -> int
        
        Returns the run-time micro version of the toolkit associated with this
        wxPlatformInfo instance.
    %End

    void SetArchitecture(
        wxArchitecture n
    );
    %Docstring
        SetArchitecture(n)
        
        Sets the architecture enum value associated with this wxPlatformInfo
        instance.
    %End

    void SetEndianness(
        wxEndianness n
    );
    %Docstring
        SetEndianness(n)
        
        Sets the endianness enum value associated with this wxPlatformInfo
        instance.
    %End

    void SetOSVersion(
        int major,
        int minor,
        int micro = 0
    );
    %Docstring
        SetOSVersion(major, minor, micro=0)
        
        Sets the version of the operating system associated with this
        wxPlatformInfo instance.
    %End

    void SetOperatingSystemId(
        wxOperatingSystemId n
    );
    %Docstring
        SetOperatingSystemId(n)
        
        Sets the operating system associated with this wxPlatformInfo
        instance.
    %End

    void SetPortId(
        wxPortId n
    );
    %Docstring
        SetPortId(n)
        
        Sets the wxWidgets port ID associated with this wxPlatformInfo
        instance.
    %End

    void SetToolkitVersion(
        int major,
        int minor,
        int micro = 0
    );
    %Docstring
        SetToolkitVersion(major, minor, micro=0)
        
        Sets the version of the toolkit associated with this wxPlatformInfo
        instance.
    %End

    void SetOperatingSystemDescription(
        const wxString & desc
    );
    %Docstring
        SetOperatingSystemDescription(desc)
        
        Sets the operating system description associated with this
        wxPlatformInfo instance.
    %End

    void SetDesktopEnvironment(
        const wxString & de
    );
    %Docstring
        SetDesktopEnvironment(de)
        
        Sets the desktop environment associated with this wxPlatformInfo
        instance.
    %End

    void SetLinuxDistributionInfo(
        const wxLinuxDistributionInfo & di
    );
    %Docstring
        SetLinuxDistributionInfo(di)
        
        Sets the linux distribution info associated with this wxPlatformInfo
        instance.
    %End

    bool CheckOSVersion(
        int major,
        int minor,
        int micro = 0
    ) const;
    %Docstring
        CheckOSVersion(major, minor, micro=0) -> bool
        
        Returns true if the OS version is at least major.minor.micro.
    %End

    bool CheckToolkitVersion(
        int major,
        int minor,
        int micro = 0
    ) const;
    %Docstring
        CheckToolkitVersion(major, minor, micro=0) -> bool
        
        Returns true if the toolkit version is at least major.minor.micro.
    %End

    bool IsOk() const;
    %Docstring
        IsOk() -> bool
        
        Returns true if this instance is fully initialized with valid values.
    %End

    bool IsUsingUniversalWidgets() const;
    %Docstring
        IsUsingUniversalWidgets() -> bool
        
        Returns true if this wxPlatformInfo describes wxUniversal build.
    %End

    bool operator!=(
        const wxPlatformInfo & t
    ) const;

    bool operator==(
        const wxPlatformInfo & t
    ) const;

    static
    const wxPlatformInfo & Get();
    %Docstring
        Get() -> PlatformInfo
        
        Returns the global wxPlatformInfo object, initialized with the values
        for the currently running platform.
    %End

    public:


    %Property(name=ArchName, get=GetArchName)
    %Property(name=Architecture, get=GetArchitecture, set=SetArchitecture)
    %Property(name=DesktopEnvironment, get=GetDesktopEnvironment, set=SetDesktopEnvironment)
    %Property(name=Endianness, get=GetEndianness, set=SetEndianness)
    %Property(name=EndiannessName, get=GetEndiannessName)
    %Property(name=LinuxDistributionInfo, get=GetLinuxDistributionInfo, set=SetLinuxDistributionInfo)
    %Property(name=OSMajorVersion, get=GetOSMajorVersion)
    %Property(name=OSMicroVersion, get=GetOSMicroVersion)
    %Property(name=OSMinorVersion, get=GetOSMinorVersion)
    %Property(name=OperatingSystemDescription, get=GetOperatingSystemDescription, set=SetOperatingSystemDescription)
    %Property(name=OperatingSystemFamilyName, get=GetOperatingSystemFamilyName)
    %Property(name=OperatingSystemId, get=GetOperatingSystemId, set=SetOperatingSystemId)
    %Property(name=OperatingSystemIdName, get=GetOperatingSystemIdName)
    %Property(name=PortId, get=GetPortId, set=SetPortId)
    %Property(name=PortIdName, get=GetPortIdName)
    %Property(name=PortIdShortName, get=GetPortIdShortName)
    %Property(name=ToolkitMajorVersion, get=GetToolkitMajorVersion)
    %Property(name=ToolkitMicroVersion, get=GetToolkitMicroVersion)
    %Property(name=ToolkitMinorVersion, get=GetToolkitMinorVersion)
};  // end of class wxPlatformInfo


struct wxLinuxDistributionInfo
{
    %Docstring
        A structure containing information about a Linux distribution as
        returned by the lsb_release utility.
    %End
    %TypeHeaderCode
        #include <wx/platinfo.h>
    %End

    wxString Id;

    wxString Release;

    wxString CodeName;

    wxString Description;

    bool operator==(
        const wxLinuxDistributionInfo & ldi
    ) const;

    bool operator!=(
        const wxLinuxDistributionInfo & ldi
    ) const;

};  // end of class wxLinuxDistributionInfo



//---------------------------------------------------------------------------

