//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _html.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum 
{
    wxID_HTML_PANEL,
    wxID_HTML_BACK,
    wxID_HTML_FORWARD,
    wxID_HTML_UPNODE,
    wxID_HTML_UP,
    wxID_HTML_DOWN,
    wxID_HTML_PRINT,
    wxID_HTML_OPENFILE,
    wxID_HTML_OPTIONS,
    wxID_HTML_BOOKMARKSLIST,
    wxID_HTML_BOOKMARKSADD,
    wxID_HTML_BOOKMARKSREMOVE,
    wxID_HTML_TREECTRL,
    wxID_HTML_INDEXPAGE,
    wxID_HTML_INDEXLIST,
    wxID_HTML_INDEXTEXT,
    wxID_HTML_INDEXBUTTON,
    wxID_HTML_INDEXBUTTONALL,
    wxID_HTML_NOTEBOOK,
    wxID_HTML_SEARCHPAGE,
    wxID_HTML_SEARCHTEXT,
    wxID_HTML_SEARCHLIST,
    wxID_HTML_SEARCHBUTTON,
    wxID_HTML_SEARCHCHOICE,
    wxID_HTML_COUNTINFO
};

class wxHtmlHelpWindow : wxWindow
{
    %Docstring
        HtmlHelpWindow(data=None)
        HtmlHelpWindow(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.TAB_TRAVERSAL|wx.BORDER_NONE, helpStyle=HF_DEFAULT_STYLE, data=None)
        
        This class is used by wxHtmlHelpController to display help within a
        frame or dialog, but you can use it yourself to create an embedded
        HTML help window.
    %End
    %TypeHeaderCode
        #include <wx/html/helpwnd.h>
    %End

public:
    wxHtmlHelpWindow(
        wxHtmlHelpData * data = NULL
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxHtmlHelpWindow(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        int style = wxTAB_TRAVERSAL|wxBORDER_NONE,
        int helpStyle = wxHF_DEFAULT_STYLE,
        wxHtmlHelpData * data = NULL
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        int style = wxTAB_TRAVERSAL|wxBORDER_NONE,
        int helpStyle = wxHF_DEFAULT_STYLE
    );
    %Docstring
        Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.TAB_TRAVERSAL|wx.BORDER_NONE, helpStyle=HF_DEFAULT_STYLE) -> bool
        
        Creates the help window.
    %End

    bool Display(
        const wxString & x
    );
    %Docstring
        Display(x) -> bool
        Display(id) -> bool
        
        Displays page x.
    %End

    bool Display(
        int id
    );

    bool DisplayContents();
    %Docstring
        DisplayContents() -> bool
        
        Displays contents panel.
    %End

    bool DisplayIndex();
    %Docstring
        DisplayIndex() -> bool
        
        Displays index panel.
    %End

    wxHtmlHelpData * GetData();
    %Docstring
        GetData() -> HtmlHelpData
        
        Returns the wxHtmlHelpData object, which is usually a pointer to the
        controller's data.
    %End

    bool KeywordSearch(
        const wxString & keyword,
        wxHelpSearchMode mode = wxHELP_SEARCH_ALL
    );
    %Docstring
        KeywordSearch(keyword, mode=wx.HELP_SEARCH_ALL) -> bool
        
        Search for given keyword.
    %End

    void ReadCustomization(
        wxConfigBase * cfg,
        const wxString & path = wxEmptyString
    );
    %Docstring
        ReadCustomization(cfg, path=wx.EmptyString)
        
        Reads the user's settings for this window.
    %End

    void UseConfig(
        wxConfigBase * config,
        const wxString & rootpath = wxEmptyString
    );
    %Docstring
        UseConfig(config, rootpath=wx.EmptyString)
        
        Associates a wxConfig object with the help window.
    %End

    void WriteCustomization(
        wxConfigBase * cfg,
        const wxString & path = wxEmptyString
    );
    %Docstring
        WriteCustomization(cfg, path=wx.EmptyString)
        
        Saves the user's settings for this window.
    %End

    void RefreshLists();
    %Docstring
        RefreshLists()
        
        Refresh all panels.
    %End

    wxHtmlHelpController * GetController() const;
    %Docstring
        GetController() -> HtmlHelpController
    %End

    void SetController(
        wxHtmlHelpController * controller   /Transfer/
    );
    %Docstring
        SetController(controller)
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Controller, get=GetController, set=SetController)
    %Property(name=Data, get=GetData)

protected:
    void CreateSearch();
    %Docstring
        CreateSearch()
        
        Creates search panel.
    %End

    void AddToolbarButtons(
        wxToolBar * toolBar,
        int style
    );
    %Docstring
        AddToolbarButtons(toolBar, style)
        
        You may override this virtual method to add more buttons to the help
        window's toolbar.
    %End

    void CreateContents();
    %Docstring
        CreateContents()
        
        Creates contents panel.
    %End

    void CreateIndex();
    %Docstring
        CreateIndex()
        
        Creates index panel.
    %End

};  // end of class wxHtmlHelpWindow



//---------------------------------------------------------------------------

