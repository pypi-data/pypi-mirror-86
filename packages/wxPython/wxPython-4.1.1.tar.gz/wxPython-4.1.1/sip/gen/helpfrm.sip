//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _html.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxHF_TOOLBAR;
const int wxHF_CONTENTS;
const int wxHF_INDEX;
const int wxHF_SEARCH;
const int wxHF_BOOKMARKS;
const int wxHF_OPEN_FILES;
const int wxHF_PRINT;
const int wxHF_FLAT_TOOLBAR;
const int wxHF_MERGE_BOOKS;
const int wxHF_ICONS_BOOK;
const int wxHF_ICONS_BOOK_CHAPTER;
const int wxHF_ICONS_FOLDER;
const int wxHF_DEFAULT_STYLE;
class wxHtmlHelpFrame : wxFrame
{
    %Docstring
        HtmlHelpFrame(data=None)
        HtmlHelpFrame(parent, id=wx.ID_ANY, title=wx.EmptyString, style=HF_DEFAULT_STYLE, data=None, config=None, rootpath=wx.EmptyString)
        
        This class is used by wxHtmlHelpController to display help.
    %End
    %TypeHeaderCode
        #include <wx/html/helpfrm.h>
    %End

public:
    wxHtmlHelpFrame(
        wxHtmlHelpData * data = NULL
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxHtmlHelpFrame(
        wxWindow * parent,
        wxWindowID id = wxID_ANY,
        const wxString & title = wxEmptyString,
        int style = wxHF_DEFAULT_STYLE,
        wxHtmlHelpData * data = NULL,
        wxConfigBase * config = NULL,
        const wxString & rootpath = wxEmptyString
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    void AddToolbarButtons(
        wxToolBar * toolBar,
        int style
    );
    %Docstring
        AddToolbarButtons(toolBar, style)
        
        You may override this virtual method to add more buttons to the help
        window's toolbar.
    %End

    bool Create(
        wxWindow * parent,
        wxWindowID id = wxID_ANY,
        const wxString & title = wxEmptyString,
        int style = wxHF_DEFAULT_STYLE,
        wxConfigBase * config = NULL,
        const wxString & rootpath = wxEmptyString
    )   /TransferThis/;
    %Docstring
        Create(parent, id=wx.ID_ANY, title=wx.EmptyString, style=HF_DEFAULT_STYLE, config=None, rootpath=wx.EmptyString) -> bool
        
        Creates the frame.
    %End

    wxHtmlHelpController * GetController() const;
    %Docstring
        GetController() -> HtmlHelpController
        
        Returns the help controller associated with the frame.
    %End

    void SetController(
        wxHtmlHelpController * controller   /Transfer/
    );
    %Docstring
        SetController(controller)
        
        Sets the help controller associated with the frame.
    %End

    void SetTitleFormat(
        const wxString & format
    );
    %Docstring
        SetTitleFormat(format)
        
        Sets the frame's title format.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Controller, get=GetController, set=SetController)
};  // end of class wxHtmlHelpFrame



//---------------------------------------------------------------------------

