//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxBK_DEFAULT;
const int wxBK_TOP;
const int wxBK_BOTTOM;
const int wxBK_LEFT;
const int wxBK_RIGHT;
const int wxBK_ALIGN_MASK;
enum 
{
    wxBK_HITTEST_NOWHERE,
    wxBK_HITTEST_ONICON,
    wxBK_HITTEST_ONLABEL,
    wxBK_HITTEST_ONITEM,
    wxBK_HITTEST_ONPAGE
};

class wxBookCtrlBase : wxControl, wxWithImages   /Abstract/
{
    %Docstring
        BookCtrlBase()
        BookCtrlBase(parent, winid, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString)
        
        A book control is a convenient way of displaying multiple pages of
        information, displayed one page at a time.
    %End
    %TypeHeaderCode
        #include <wx/bookctrl.h>
    %End

public:
    enum 
    {
        NO_IMAGE    
    };

    wxBookCtrlBase();

    wxBookCtrlBase(
        wxWindow * parent,
        wxWindowID winid,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxEmptyString
    );

    virtual
    int GetPageImage(
        size_t nPage
    ) const = 0;
    %Docstring
        GetPageImage(nPage) -> int
        
        Returns the image index for the given page.
    %End

    virtual
    bool SetPageImage(
        size_t page,
        int image
    ) = 0;
    %Docstring
        SetPageImage(page, image) -> bool
        
        Sets the image index for the given page.
    %End

    virtual
    wxString GetPageText(
        size_t nPage
    ) const = 0;
    %Docstring
        GetPageText(nPage) -> String
        
        Returns the string for the given page.
    %End

    virtual
    bool SetPageText(
        size_t page,
        const wxString & text
    ) = 0;
    %Docstring
        SetPageText(page, text) -> bool
        
        Sets the text for the given page.
    %End

    virtual
    int GetSelection() const = 0;
    %Docstring
        GetSelection() -> int
        
        Returns the currently selected page, or wxNOT_FOUND if none was
        selected.
    %End

    wxWindow * GetCurrentPage() const;
    %Docstring
        GetCurrentPage() -> Window
        
        Returns the currently selected page or NULL.
    %End

    virtual
    int SetSelection(
        size_t page
    ) = 0;
    %Docstring
        SetSelection(page) -> int
        
        Sets the selection to the given page, returning the previous
        selection.
    %End

    void AdvanceSelection(
        bool forward = true
    );
    %Docstring
        AdvanceSelection(forward=True)
        
        Cycles through the tabs.
    %End

    virtual
    int ChangeSelection(
        size_t page
    ) = 0;
    %Docstring
        ChangeSelection(page) -> int
        
        Changes the selection to the given page, returning the previous
        selection.
    %End

    int FindPage(
        const wxWindow * page
    ) const;
    %Docstring
        FindPage(page) -> int
        
        Returns the index of the specified tab window or wxNOT_FOUND if not
        found.
    %End

    virtual
    bool AddPage(
        wxWindow * page,
        const wxString & text,
        bool select = false,
        int imageId = NO_IMAGE
    );
    %Docstring
        AddPage(page, text, select=False, imageId=NO_IMAGE) -> bool
        
        Adds a new page.
    %End

    virtual
    bool DeleteAllPages();
    %Docstring
        DeleteAllPages() -> bool
        
        Deletes all pages.
    %End

    virtual
    bool DeletePage(
        size_t page
    );
    %Docstring
        DeletePage(page) -> bool
        
        Deletes the specified page, and the associated window.
    %End

    virtual
    bool InsertPage(
        size_t index,
        wxWindow * page,
        const wxString & text,
        bool select = false,
        int imageId = NO_IMAGE
    ) = 0;
    %Docstring
        InsertPage(index, page, text, select=False, imageId=NO_IMAGE) -> bool
        
        Inserts a new page at the specified position.
    %End

    virtual
    bool RemovePage(
        size_t page
    );
    %Docstring
        RemovePage(page) -> bool
        
        Deletes the specified page, without deleting the associated window.
    %End

    virtual
    size_t GetPageCount() const;
    %Docstring
        GetPageCount() -> size_t
        
        Returns the number of pages in the control.
    %End

    wxWindow * GetPage(
        size_t page
    ) const;
    %Docstring
        GetPage(page) -> Window
        
        Returns the window at the given page position.
    %End

    bool Create(
        wxWindow * parent,
        wxWindowID winid,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxEmptyString
    );
    %Docstring
        Create(parent, winid, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString) -> bool
        
        Constructs the book control with the given parameters.
    %End

    virtual
    void SetPageSize(
        const wxSize & size
    );
    %Docstring
        SetPageSize(size)
        
        Sets the width and height of the pages.
    %End

    virtual
    int HitTest(
        const wxPoint & pt,
        long * flags   /Out/ = NULL
    ) const;
    %Docstring
        HitTest(pt) -> (int, flags)
        
        Returns the index of the tab at the specified position or wxNOT_FOUND
        if none.
    %End

    public:


    %Property(name=CurrentPage, get=GetCurrentPage)
    %Property(name=PageCount, get=GetPageCount)
    %Property(name=Selection, get=GetSelection, set=SetSelection)
};  // end of class wxBookCtrlBase


class wxBookCtrlEvent : wxNotifyEvent
{
    %Docstring
        BookCtrlEvent(eventType=wxEVT_NULL, id=0, sel=NOT_FOUND, oldSel=NOT_FOUND)
        
        This class represents the events generated by book controls
        (wxNotebook, wxListbook, wxChoicebook, wxTreebook, wxAuiNotebook).
    %End
    %TypeHeaderCode
        #include <wx/bookctrl.h>
    %End

public:
    wxBookCtrlEvent(
        wxEventType eventType = wxEVT_NULL,
        int id = 0,
        int sel = wxNOT_FOUND,
        int oldSel = wxNOT_FOUND
    );

    int GetOldSelection() const;
    %Docstring
        GetOldSelection() -> int
        
        Returns the page that was selected before the change, wxNOT_FOUND if
        none was selected.
    %End

    int GetSelection() const;
    %Docstring
        GetSelection() -> int
        
        Returns the currently selected page, or wxNOT_FOUND if none was
        selected.
    %End

    void SetOldSelection(
        int page
    );
    %Docstring
        SetOldSelection(page)
        
        Sets the id of the page selected before the change.
    %End

    void SetSelection(
        int page
    );
    %Docstring
        SetSelection(page)
        
        Sets the selection member variable.
    %End

    public:


    %Property(name=OldSelection, get=GetOldSelection, set=SetOldSelection)
    %Property(name=Selection, get=GetSelection, set=SetSelection)
};  // end of class wxBookCtrlEvent



//---------------------------------------------------------------------------

