//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxMsgCatalog;


class wxTranslations
{
    %Docstring
        Translations()
        
        This class allows getting translations for strings.
    %End
    %TypeHeaderCode
        #include <wx/translation.h>
    %End

public:
    wxTranslations();

    void SetLoader(
        wxTranslationsLoader * loader   /Transfer/
    );
    %Docstring
        SetLoader(loader)
        
        Changes loader use to read catalogs to a non-default one.
    %End

    void SetLanguage(
        wxLanguage lang
    );
    %Docstring
        SetLanguage(lang)
        SetLanguage(lang)
        
        Sets translations language to use.
    %End

    void SetLanguage(
        const wxString & lang
    );

    wxArrayString GetAvailableTranslations(
        const wxString & domain
    ) const;
    %Docstring
        GetAvailableTranslations(domain) -> ArrayString
        
        Returns list of all translations of domain that were found.
    %End

    wxString GetBestTranslation(
        const wxString & domain,
        wxLanguage msgIdLanguage
    );
    %Docstring
        GetBestTranslation(domain, msgIdLanguage) -> String
        GetBestTranslation(domain, msgIdLanguage="en") -> String
        
        Returns the best UI language for the domain.
    %End

    wxString GetBestTranslation(
        const wxString & domain,
        const wxString & msgIdLanguage = "en"
    );

    bool AddStdCatalog();
    %Docstring
        AddStdCatalog() -> bool
        
        Add standard wxWidgets catalogs ("wxstd" and possible port-specific
        catalogs).
    %End

    bool AddCatalog(
        const wxString & domain,
        wxLanguage msgIdLanguage = wxLANGUAGE_ENGLISH_US
    );
    %Docstring
        AddCatalog(domain, msgIdLanguage=LANGUAGE_ENGLISH_US) -> bool
        
        Add a catalog for use with the current locale.
    %End

    bool IsLoaded(
        const wxString & domain
    ) const;
    %Docstring
        IsLoaded(domain) -> bool
        
        Check if the given catalog is loaded, and returns true if it is.
    %End

    const wxString * GetTranslatedString(
        const wxString & origString,
        const wxString & domain = wxEmptyString
    ) const;
    %Docstring
        GetTranslatedString(origString, domain=EmptyString) -> String
        GetTranslatedString(origString, n, domain=EmptyString) -> String
        
        Retrieves the translation for a string in all loaded domains unless
        the domain parameter is specified (and then only this catalog/domain
        is searched).
    %End

    const wxString * GetTranslatedString(
        const wxString & origString,
        unsigned n,
        const wxString & domain = wxEmptyString
    ) const;

    wxString GetHeaderValue(
        const wxString & header,
        const wxString & domain = wxEmptyString
    ) const;
    %Docstring
        GetHeaderValue(header, domain=EmptyString) -> String
        
        Returns the header value for header header.
    %End

    static
    wxTranslations * Get();
    %Docstring
        Get() -> Translations
        
        Returns current translations object, may return NULL.
    %End

    static
    void Set(
        wxTranslations * t   /Transfer/
    );
    %Docstring
        Set(t)
        
        Sets current translations object.
    %End

    public:


};  // end of class wxTranslations


class wxTranslationsLoader   /Abstract/
{
    %Docstring
        TranslationsLoader()
        
        Abstraction of translations discovery and loading.
    %End
    %TypeHeaderCode
        #include <wx/translation.h>
    %End

public:
    wxTranslationsLoader();

    virtual
    wxMsgCatalog * LoadCatalog(
        const wxString & domain,
        const wxString & lang
    ) = 0   /Factory/;
    %Docstring
        LoadCatalog(domain, lang) -> MsgCatalog
        
        Called to load requested catalog.
    %End

    virtual
    wxArrayString GetAvailableTranslations(
        const wxString & domain
    ) const = 0;
    %Docstring
        GetAvailableTranslations(domain) -> ArrayString
        
        Implements wxTranslations::GetAvailableTranslations().
    %End

};  // end of class wxTranslationsLoader


class wxFileTranslationsLoader : wxTranslationsLoader
{
    %Docstring
        Standard wxTranslationsLoader implementation.
    %End
    %TypeHeaderCode
        #include <wx/translation.h>
    %End

public:
    static
    void AddCatalogLookupPathPrefix(
        const wxString & prefix
    );
    %Docstring
        AddCatalogLookupPathPrefix(prefix)
        
        Add a prefix to the catalog lookup path: the message catalog files
        will be looked up under prefix/lang/LC_MESSAGES and prefix/lang
        directories (in this order).
    %End

        virtual wxMsgCatalog *LoadCatalog(const wxString& domain, const wxString& lang);
        virtual wxArrayString GetAvailableTranslations(const wxString& domain) const;


};  // end of class wxFileTranslationsLoader


const wxString & wxGetTranslation(
    const wxString & string,
    const wxString & domain = wxEmptyString,
    const wxString & context = wxEmptyString
);
%Docstring
    GetTranslation(string, domain=EmptyString, context=EmptyString) -> String
    GetTranslation(string, plural, n, domain=EmptyString, context=EmptyString) -> String
    
    This function returns the translation of string in the current
    locale().
%End
const wxString & wxGetTranslation(
    const wxString & string,
    const wxString & plural,
    unsigned n,
    const wxString & domain = wxEmptyString,
    const wxString & context = wxEmptyString
);



//---------------------------------------------------------------------------

