//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _html.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum 
{
    wxPAGE_ODD,
    wxPAGE_EVEN,
    wxPAGE_ALL
};

class wxHtmlDCRenderer : wxObject
{
    %Docstring
        HtmlDCRenderer()
        
        This class can render HTML document into a specified area of a DC.
    %End
    %TypeHeaderCode
        #include <wx/html/htmprint.h>
    %End

public:
    wxHtmlDCRenderer();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    int GetTotalWidth() const;
    %Docstring
        GetTotalWidth() -> int
        
        Returns the width of the HTML text in pixels.
    %End

    int GetTotalHeight() const;
    %Docstring
        GetTotalHeight() -> int
        
        Returns the height of the HTML text in pixels.
    %End

    int FindNextPageBreak(
        int pos
    ) const;
    %Docstring
        FindNextPageBreak(pos) -> int
        
        Finds the next page break after the specified (vertical) position.
    %End

    void Render(
        int x,
        int y,
        int from_ = 0,
        int to_ = INT_MAX
    );
    %Docstring
        Render(x, y, from_=0, to_=INT_MAX)
        
        Renders HTML text to the DC.
    %End

    void SetDC(
        wxDC * dc,
        double pixel_scale = 1.0
    );
    %Docstring
        SetDC(dc, pixel_scale=1.0)
        
        Assign DC instance to the renderer.
    %End

    void SetFonts(
        const wxString & normal_face,
        const wxString & fixed_face,
        const wxArrayInt& sizes
    );
    %Docstring
        SetFonts(normal_face, fixed_face, sizes)
        
        This function sets font sizes and faces.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxHtmlDCRenderer_SetFonts(sipCpp, normal_face, fixed_face, sizes);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxHtmlDCRenderer_SetFonts(wxHtmlDCRenderer* self, const wxString * normal_face, const wxString * fixed_face, const wxArrayInt* sizes)
    {
        if (sizes->GetCount() != 7) {
            wxPyErr_SetString(PyExc_ValueError, "Sequence of 7 integers expected.");
            return;
        }
        self->SetFonts(*normal_face, *fixed_face, &sizes->Item(0));
    }
    %End

    void SetStandardFonts(
        int size = -1,
        const wxString & normal_face = wxEmptyString,
        const wxString & fixed_face = wxEmptyString
    );
    %Docstring
        SetStandardFonts(size=-1, normal_face=wx.EmptyString, fixed_face=wx.EmptyString)
        
        Sets font sizes to be relative to the given size or the system default
        size; use either specified or default font.
    %End

    void SetHtmlText(
        const wxString & html,
        const wxString & basepath = wxEmptyString,
        bool isdir = true
    );
    %Docstring
        SetHtmlText(html, basepath=wx.EmptyString, isdir=True)
        
        Assign text to the renderer.
    %End

    void SetHtmlCell(
        wxHtmlContainerCell & cell
    );
    %Docstring
        SetHtmlCell(cell)
        
        Associate the given HTML contents to the renderer.
    %End

    void SetSize(
        int width,
        int height
    );
    %Docstring
        SetSize(width, height)
        
        Set size of output rectangle, in pixels.
    %End

    private:
        wxHtmlDCRenderer(const wxHtmlDCRenderer&);


    public:


    %Property(name=TotalHeight, get=GetTotalHeight)
    %Property(name=TotalWidth, get=GetTotalWidth)
};  // end of class wxHtmlDCRenderer


class wxHtmlEasyPrinting : wxObject
{
    %Docstring
        HtmlEasyPrinting(name="Printing", parentWindow=None)
        
        This class provides very simple interface to printing architecture.
    %End
    %TypeHeaderCode
        #include <wx/html/htmprint.h>
    %End

public:
    enum PromptMode
    {
        Prompt_Never,
        Prompt_Once,
        Prompt_Always    
    };

    wxHtmlEasyPrinting(
        const wxString & name = "Printing",
        wxWindow * parentWindow = NULL
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    const wxString & GetName() const;
    %Docstring
        GetName() -> String
        
        Returns the current name being used for preview frames and setup
        dialogs.
    %End

    wxPageSetupDialogData * GetPageSetupData();
    %Docstring
        GetPageSetupData() -> wx.PageSetupDialogData
        
        Returns a pointer to wxPageSetupDialogData instance used by this
        class.
    %End

    wxWindow * GetParentWindow() const;
    %Docstring
        GetParentWindow() -> wx.Window
        
        Gets the parent window for dialogs.
    %End

    wxPrintData * GetPrintData();
    %Docstring
        GetPrintData() -> wx.PrintData
        
        Returns pointer to wxPrintData instance used by this class.
    %End

    void PageSetup();
    %Docstring
        PageSetup()
        
        Display page setup dialog and allows the user to modify settings.
    %End

    bool PreviewFile(
        const wxString & htmlfile
    );
    %Docstring
        PreviewFile(htmlfile) -> bool
        
        Preview HTML file.
    %End

    bool PreviewText(
        const wxString & htmltext,
        const wxString & basepath = wxEmptyString
    );
    %Docstring
        PreviewText(htmltext, basepath=wx.EmptyString) -> bool
        
        Preview HTML text (not file!).
    %End

    bool PrintFile(
        const wxString & htmlfile
    );
    %Docstring
        PrintFile(htmlfile) -> bool
        
        Print HTML file.
    %End

    bool PrintText(
        const wxString & htmltext,
        const wxString & basepath = wxEmptyString
    );
    %Docstring
        PrintText(htmltext, basepath=wx.EmptyString) -> bool
        
        Print HTML text (not file!).
    %End

    void SetFonts(
        const wxString & normal_face,
        const wxString & fixed_face,
        const wxArrayInt& sizes
    );
    %Docstring
        SetFonts(normal_face, fixed_face, sizes)
        
        Sets fonts.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxHtmlEasyPrinting_SetFonts(sipCpp, normal_face, fixed_face, sizes);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxHtmlEasyPrinting_SetFonts(wxHtmlEasyPrinting* self, const wxString * normal_face, const wxString * fixed_face, const wxArrayInt* sizes)
    {
        if (sizes->GetCount() != 7) {
            wxPyErr_SetString(PyExc_ValueError, "Sequence of 7 integers expected.");
            return;
        }
        self->SetFonts(*normal_face, *fixed_face, &sizes->Item(0));
    }
    %End

    void SetName(
        const wxString & name
    );
    %Docstring
        SetName(name)
        
        Sets the name used for preview frames and setup dialogs.
    %End

    void SetStandardFonts(
        int size = -1,
        const wxString & normal_face = wxEmptyString,
        const wxString & fixed_face = wxEmptyString
    );
    %Docstring
        SetStandardFonts(size=-1, normal_face=wx.EmptyString, fixed_face=wx.EmptyString)
        
        Sets default font sizes and/or default font size.
    %End

    void SetFooter(
        const wxString & footer,
        int pg = wxPAGE_ALL
    );
    %Docstring
        SetFooter(footer, pg=PAGE_ALL)
        
        Set page footer.
    %End

    void SetHeader(
        const wxString & header,
        int pg = wxPAGE_ALL
    );
    %Docstring
        SetHeader(header, pg=PAGE_ALL)
        
        Set page header.
    %End

    void SetParentWindow(
        wxWindow * window
    );
    %Docstring
        SetParentWindow(window)
        
        Sets the parent window for dialogs.
    %End

    void SetPromptMode(
        PromptMode promptMode
    );
    %Docstring
        SetPromptMode(promptMode)
        
        Enable or disable showing the dialog before printing.
    %End

    private:
        wxHtmlEasyPrinting(const wxHtmlEasyPrinting&);


    public:


    %Property(name=Name, get=GetName, set=SetName)
    %Property(name=PageSetupData, get=GetPageSetupData)
    %Property(name=ParentWindow, get=GetParentWindow, set=SetParentWindow)
    %Property(name=PrintData, get=GetPrintData)
};  // end of class wxHtmlEasyPrinting


class wxHtmlPrintout : wxPrintout
{
    %Docstring
        HtmlPrintout(title="Printout")
        
        This class serves as printout class for HTML documents.
    %End
    %TypeHeaderCode
        #include <wx/html/htmprint.h>
    %End

public:
    wxHtmlPrintout(
        const wxString & title = "Printout"
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    void SetFonts(
        const wxString & normal_face,
        const wxString & fixed_face,
        const wxArrayInt& sizes
    );
    %Docstring
        SetFonts(normal_face, fixed_face, sizes)
        
        This function sets font sizes and faces.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxHtmlPrintout_SetFonts(sipCpp, normal_face, fixed_face, sizes);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxHtmlPrintout_SetFonts(wxHtmlPrintout* self, const wxString * normal_face, const wxString * fixed_face, const wxArrayInt* sizes)
    {
        if (sizes->GetCount() != 7) {
            wxPyErr_SetString(PyExc_ValueError, "Sequence of 7 integers expected.");
            return;
        }
        self->SetFonts(*normal_face, *fixed_face, &sizes->Item(0));
    }
    %End

    void SetFooter(
        const wxString & footer,
        int pg = wxPAGE_ALL
    );
    %Docstring
        SetFooter(footer, pg=PAGE_ALL)
        
        Set page footer.
    %End

    void SetHeader(
        const wxString & header,
        int pg = wxPAGE_ALL
    );
    %Docstring
        SetHeader(header, pg=PAGE_ALL)
        
        Set page header.
    %End

    void SetHtmlFile(
        const wxString & htmlfile
    );
    %Docstring
        SetHtmlFile(htmlfile)
        
        Prepare the class for printing this HTML file.
    %End

    void SetHtmlText(
        const wxString & html,
        const wxString & basepath = wxEmptyString,
        bool isdir = true
    );
    %Docstring
        SetHtmlText(html, basepath=wx.EmptyString, isdir=True)
        
        Prepare the class for printing this HTML text.
    %End

    void SetMargins(
        float top = 25.2,
        float bottom = 25.2,
        float left = 25.2,
        float right = 25.2,
        float spaces = 5
    );
    %Docstring
        SetMargins(top=25.2, bottom=25.2, left=25.2, right=25.2, spaces=5)
        SetMargins(pageSetupData)
        
        Sets margins in millimeters.
    %End

    void SetMargins(
        const wxPageSetupDialogData & pageSetupData
    );

    static
    void AddFilter(
        wxHtmlFilter * filter
    );
    %Docstring
        AddFilter(filter)
        
        Adds a filter to the static list of filters for wxHtmlPrintout.
    %End

    private:
        wxHtmlPrintout(const wxHtmlPrintout&);


            bool OnPrintPage(int page);
            bool HasPage(int page);
            void GetPageInfo(int *minPage, int *maxPage, int *selPageFrom, int *selPageTo);
            bool OnBeginDocument(int startPage, int endPage);
            void OnPreparePrinting();


    public:


};  // end of class wxHtmlPrintout



//---------------------------------------------------------------------------

