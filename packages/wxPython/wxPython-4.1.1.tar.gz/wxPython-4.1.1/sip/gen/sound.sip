//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _adv.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/sound.h>
#include "wxpybuffer.h"
%End


//---------------------------------------------------------------------------

const int wxSOUND_SYNC;
const int wxSOUND_ASYNC;
const int wxSOUND_LOOP;
class wxSound : wxObject
{
    %Docstring
        Sound()
        Sound(fileName)
        
        This class represents a short sound (loaded from Windows WAV file),
        that can be stored in memory and played.
    %End
    %TypeHeaderCode
        #include <wx/sound.h>
    %End

public:
    wxSound();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxSound(
        const wxString & fileName
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual
    ~wxSound();

    bool Play(
        unsigned flags = wxSOUND_ASYNC
    ) const;
    %Docstring
        Play(flags=SOUND_ASYNC) -> bool
        
        Plays the sound file.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    bool Play(
        const wxString & filename,
        unsigned flags = wxSOUND_ASYNC
    )   /PyName=PlaySound/;
    %Docstring
        PlaySound(filename, flags=SOUND_ASYNC) -> bool
        
        Plays the sound file.
    %End

    bool Create(
        const wxString & fileName
    );
    %Docstring
        Create(fileName) -> bool
        
        Constructs a wave object from a file or resource.
    %End

    bool IsOk() const;
    %Docstring
        IsOk() -> bool
        
        Returns true if the object contains a successfully loaded file or
        resource, false otherwise.
    %End

    static
    void Stop();
    %Docstring
        Stop()
        
        If a sound is played, this function stops it.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    private:
        wxSound(const wxSound&);


    public:


    bool CreateFromData(wxPyBuffer* data);
    %Docstring
        CreateFromData(data) -> bool
        
        Create a sound object from data in a memory buffer in WAV format.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxSound_CreateFromData(sipCpp, data);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    bool _wxSound_CreateFromData(wxSound* self, wxPyBuffer* data)
    {
        return self->Create((size_t)data->m_len, data->m_ptr);
    }
    %End

    int __nonzero__();
    %Docstring
        __nonzero__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxSound___nonzero__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxSound___nonzero__(wxSound* self)
    {
        return self->IsOk();
    }
    %End

    int __bool__();
    %Docstring
        __bool__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxSound___bool__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxSound___bool__(wxSound* self)
    {
        return self->IsOk();
    }
    %End

};  // end of class wxSound



//---------------------------------------------------------------------------

