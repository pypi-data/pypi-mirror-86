//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxLanguage
{
    wxLANGUAGE_DEFAULT,
    wxLANGUAGE_UNKNOWN,
    wxLANGUAGE_ABKHAZIAN,
    wxLANGUAGE_AFAR,
    wxLANGUAGE_AFRIKAANS,
    wxLANGUAGE_ALBANIAN,
    wxLANGUAGE_AMHARIC,
    wxLANGUAGE_ARABIC,
    wxLANGUAGE_ARABIC_ALGERIA,
    wxLANGUAGE_ARABIC_BAHRAIN,
    wxLANGUAGE_ARABIC_EGYPT,
    wxLANGUAGE_ARABIC_IRAQ,
    wxLANGUAGE_ARABIC_JORDAN,
    wxLANGUAGE_ARABIC_KUWAIT,
    wxLANGUAGE_ARABIC_LEBANON,
    wxLANGUAGE_ARABIC_LIBYA,
    wxLANGUAGE_ARABIC_MOROCCO,
    wxLANGUAGE_ARABIC_OMAN,
    wxLANGUAGE_ARABIC_QATAR,
    wxLANGUAGE_ARABIC_SAUDI_ARABIA,
    wxLANGUAGE_ARABIC_SUDAN,
    wxLANGUAGE_ARABIC_SYRIA,
    wxLANGUAGE_ARABIC_TUNISIA,
    wxLANGUAGE_ARABIC_UAE,
    wxLANGUAGE_ARABIC_YEMEN,
    wxLANGUAGE_ARMENIAN,
    wxLANGUAGE_ASSAMESE,
    wxLANGUAGE_ASTURIAN,
    wxLANGUAGE_AYMARA,
    wxLANGUAGE_AZERI,
    wxLANGUAGE_AZERI_CYRILLIC,
    wxLANGUAGE_AZERI_LATIN,
    wxLANGUAGE_BASHKIR,
    wxLANGUAGE_BASQUE,
    wxLANGUAGE_BELARUSIAN,
    wxLANGUAGE_BENGALI,
    wxLANGUAGE_BHUTANI,
    wxLANGUAGE_BIHARI,
    wxLANGUAGE_BISLAMA,
    wxLANGUAGE_BOSNIAN,
    wxLANGUAGE_BRETON,
    wxLANGUAGE_BULGARIAN,
    wxLANGUAGE_BURMESE,
    wxLANGUAGE_CATALAN,
    wxLANGUAGE_CHINESE,
    wxLANGUAGE_CHINESE_SIMPLIFIED,
    wxLANGUAGE_CHINESE_TRADITIONAL,
    wxLANGUAGE_CHINESE_HONGKONG,
    wxLANGUAGE_CHINESE_MACAU,
    wxLANGUAGE_CHINESE_SINGAPORE,
    wxLANGUAGE_CHINESE_TAIWAN,
    wxLANGUAGE_CORSICAN,
    wxLANGUAGE_CROATIAN,
    wxLANGUAGE_CZECH,
    wxLANGUAGE_DANISH,
    wxLANGUAGE_DUTCH,
    wxLANGUAGE_DUTCH_BELGIAN,
    wxLANGUAGE_ENGLISH,
    wxLANGUAGE_ENGLISH_UK,
    wxLANGUAGE_ENGLISH_US,
    wxLANGUAGE_ENGLISH_AUSTRALIA,
    wxLANGUAGE_ENGLISH_BELIZE,
    wxLANGUAGE_ENGLISH_BOTSWANA,
    wxLANGUAGE_ENGLISH_CANADA,
    wxLANGUAGE_ENGLISH_CARIBBEAN,
    wxLANGUAGE_ENGLISH_DENMARK,
    wxLANGUAGE_ENGLISH_EIRE,
    wxLANGUAGE_ENGLISH_JAMAICA,
    wxLANGUAGE_ENGLISH_NEW_ZEALAND,
    wxLANGUAGE_ENGLISH_PHILIPPINES,
    wxLANGUAGE_ENGLISH_SOUTH_AFRICA,
    wxLANGUAGE_ENGLISH_TRINIDAD,
    wxLANGUAGE_ENGLISH_ZIMBABWE,
    wxLANGUAGE_ESPERANTO,
    wxLANGUAGE_ESTONIAN,
    wxLANGUAGE_FAEROESE,
    wxLANGUAGE_FARSI,
    wxLANGUAGE_FIJI,
    wxLANGUAGE_FINNISH,
    wxLANGUAGE_FRENCH,
    wxLANGUAGE_FRENCH_BELGIAN,
    wxLANGUAGE_FRENCH_CANADIAN,
    wxLANGUAGE_FRENCH_LUXEMBOURG,
    wxLANGUAGE_FRENCH_MONACO,
    wxLANGUAGE_FRENCH_SWISS,
    wxLANGUAGE_FRISIAN,
    wxLANGUAGE_GALICIAN,
    wxLANGUAGE_GEORGIAN,
    wxLANGUAGE_GERMAN,
    wxLANGUAGE_GERMAN_AUSTRIAN,
    wxLANGUAGE_GERMAN_BELGIUM,
    wxLANGUAGE_GERMAN_LIECHTENSTEIN,
    wxLANGUAGE_GERMAN_LUXEMBOURG,
    wxLANGUAGE_GERMAN_SWISS,
    wxLANGUAGE_GREEK,
    wxLANGUAGE_GREENLANDIC,
    wxLANGUAGE_GUARANI,
    wxLANGUAGE_GUJARATI,
    wxLANGUAGE_HAUSA,
    wxLANGUAGE_HEBREW,
    wxLANGUAGE_HINDI,
    wxLANGUAGE_HUNGARIAN,
    wxLANGUAGE_ICELANDIC,
    wxLANGUAGE_INDONESIAN,
    wxLANGUAGE_INTERLINGUA,
    wxLANGUAGE_INTERLINGUE,
    wxLANGUAGE_INUKTITUT,
    wxLANGUAGE_INUPIAK,
    wxLANGUAGE_IRISH,
    wxLANGUAGE_ITALIAN,
    wxLANGUAGE_ITALIAN_SWISS,
    wxLANGUAGE_JAPANESE,
    wxLANGUAGE_JAVANESE,
    wxLANGUAGE_KABYLE,
    wxLANGUAGE_KANNADA,
    wxLANGUAGE_KASHMIRI,
    wxLANGUAGE_KASHMIRI_INDIA,
    wxLANGUAGE_KAZAKH,
    wxLANGUAGE_KERNEWEK,
    wxLANGUAGE_KHMER,
    wxLANGUAGE_KINYARWANDA,
    wxLANGUAGE_KIRGHIZ,
    wxLANGUAGE_KIRUNDI,
    wxLANGUAGE_KONKANI,
    wxLANGUAGE_KOREAN,
    wxLANGUAGE_KURDISH,
    wxLANGUAGE_LAOTHIAN,
    wxLANGUAGE_LATIN,
    wxLANGUAGE_LATVIAN,
    wxLANGUAGE_LINGALA,
    wxLANGUAGE_LITHUANIAN,
    wxLANGUAGE_MACEDONIAN,
    wxLANGUAGE_MALAGASY,
    wxLANGUAGE_MALAY,
    wxLANGUAGE_MALAYALAM,
    wxLANGUAGE_MALAY_BRUNEI_DARUSSALAM,
    wxLANGUAGE_MALAY_MALAYSIA,
    wxLANGUAGE_MALTESE,
    wxLANGUAGE_MANIPURI,
    wxLANGUAGE_MAORI,
    wxLANGUAGE_MARATHI,
    wxLANGUAGE_MOLDAVIAN,
    wxLANGUAGE_MONGOLIAN,
    wxLANGUAGE_NAURU,
    wxLANGUAGE_NEPALI,
    wxLANGUAGE_NEPALI_INDIA,
    wxLANGUAGE_NORWEGIAN_BOKMAL,
    wxLANGUAGE_NORWEGIAN_NYNORSK,
    wxLANGUAGE_OCCITAN,
    wxLANGUAGE_ORIYA,
    wxLANGUAGE_OROMO,
    wxLANGUAGE_PASHTO,
    wxLANGUAGE_POLISH,
    wxLANGUAGE_PORTUGUESE,
    wxLANGUAGE_PORTUGUESE_BRAZILIAN,
    wxLANGUAGE_PUNJABI,
    wxLANGUAGE_QUECHUA,
    wxLANGUAGE_RHAETO_ROMANCE,
    wxLANGUAGE_ROMANIAN,
    wxLANGUAGE_RUSSIAN,
    wxLANGUAGE_RUSSIAN_UKRAINE,
    wxLANGUAGE_SAMI,
    wxLANGUAGE_SAMOAN,
    wxLANGUAGE_SANGHO,
    wxLANGUAGE_SANSKRIT,
    wxLANGUAGE_SCOTS_GAELIC,
    wxLANGUAGE_SERBIAN,
    wxLANGUAGE_SERBIAN_CYRILLIC,
    wxLANGUAGE_SERBIAN_LATIN,
    wxLANGUAGE_SERBO_CROATIAN,
    wxLANGUAGE_SESOTHO,
    wxLANGUAGE_SETSWANA,
    wxLANGUAGE_SHONA,
    wxLANGUAGE_SINDHI,
    wxLANGUAGE_SINHALESE,
    wxLANGUAGE_SISWATI,
    wxLANGUAGE_SLOVAK,
    wxLANGUAGE_SLOVENIAN,
    wxLANGUAGE_SOMALI,
    wxLANGUAGE_SPANISH,
    wxLANGUAGE_SPANISH_ARGENTINA,
    wxLANGUAGE_SPANISH_BOLIVIA,
    wxLANGUAGE_SPANISH_CHILE,
    wxLANGUAGE_SPANISH_COLOMBIA,
    wxLANGUAGE_SPANISH_COSTA_RICA,
    wxLANGUAGE_SPANISH_DOMINICAN_REPUBLIC,
    wxLANGUAGE_SPANISH_ECUADOR,
    wxLANGUAGE_SPANISH_EL_SALVADOR,
    wxLANGUAGE_SPANISH_GUATEMALA,
    wxLANGUAGE_SPANISH_HONDURAS,
    wxLANGUAGE_SPANISH_MEXICAN,
    wxLANGUAGE_SPANISH_MODERN,
    wxLANGUAGE_SPANISH_NICARAGUA,
    wxLANGUAGE_SPANISH_PANAMA,
    wxLANGUAGE_SPANISH_PARAGUAY,
    wxLANGUAGE_SPANISH_PERU,
    wxLANGUAGE_SPANISH_PUERTO_RICO,
    wxLANGUAGE_SPANISH_URUGUAY,
    wxLANGUAGE_SPANISH_US,
    wxLANGUAGE_SPANISH_VENEZUELA,
    wxLANGUAGE_SUNDANESE,
    wxLANGUAGE_SWAHILI,
    wxLANGUAGE_SWEDISH,
    wxLANGUAGE_SWEDISH_FINLAND,
    wxLANGUAGE_TAGALOG,
    wxLANGUAGE_TAJIK,
    wxLANGUAGE_TAMIL,
    wxLANGUAGE_TATAR,
    wxLANGUAGE_TELUGU,
    wxLANGUAGE_THAI,
    wxLANGUAGE_TIBETAN,
    wxLANGUAGE_TIGRINYA,
    wxLANGUAGE_TONGA,
    wxLANGUAGE_TSONGA,
    wxLANGUAGE_TURKISH,
    wxLANGUAGE_TURKMEN,
    wxLANGUAGE_TWI,
    wxLANGUAGE_UIGHUR,
    wxLANGUAGE_UKRAINIAN,
    wxLANGUAGE_URDU,
    wxLANGUAGE_URDU_INDIA,
    wxLANGUAGE_URDU_PAKISTAN,
    wxLANGUAGE_UZBEK,
    wxLANGUAGE_UZBEK_CYRILLIC,
    wxLANGUAGE_UZBEK_LATIN,
    wxLANGUAGE_VALENCIAN,
    wxLANGUAGE_VIETNAMESE,
    wxLANGUAGE_VOLAPUK,
    wxLANGUAGE_WELSH,
    wxLANGUAGE_WOLOF,
    wxLANGUAGE_XHOSA,
    wxLANGUAGE_YIDDISH,
    wxLANGUAGE_YORUBA,
    wxLANGUAGE_ZHUANG,
    wxLANGUAGE_ZULU,
    wxLANGUAGE_USER_DEFINED,
    wxLANGUAGE_CAMBODIAN
};

enum wxLayoutDirection
{
    wxLayout_Default,
    wxLayout_LeftToRight,
    wxLayout_RightToLeft
};

enum wxLocaleCategory
{
    wxLOCALE_CAT_NUMBER,
    wxLOCALE_CAT_DATE,
    wxLOCALE_CAT_MONEY,
    wxLOCALE_CAT_DEFAULT
};

enum wxLocaleInfo
{
    wxLOCALE_THOUSANDS_SEP,
    wxLOCALE_DECIMAL_POINT,
    wxLOCALE_SHORT_DATE_FMT,
    wxLOCALE_LONG_DATE_FMT,
    wxLOCALE_DATE_TIME_FMT,
    wxLOCALE_TIME_FMT
};

enum wxLocaleInitFlags
{
    wxLOCALE_DONT_LOAD_DEFAULT,
    wxLOCALE_LOAD_DEFAULT
};

struct wxLanguageInfo
{
    %Docstring
        Encapsulates a wxLanguage identifier together with OS-specific
        information related to that language.
    %End
    %TypeHeaderCode
        #include <wx/intl.h>
    %End

    int Language;

    wxString CanonicalName;

    wxString Description;

    wxLayoutDirection LayoutDirection;

    wxString GetLocaleName() const;
    %Docstring
        GetLocaleName() -> String
        
        Return the locale name corresponding to this language usable with
        setlocale() on the current system.
    %End

    public:


    %Property(name=LocaleName, get=GetLocaleName)
};  // end of class wxLanguageInfo


class wxLocale
{
    %Docstring
        Locale()
        Locale(language, flags=LOCALE_LOAD_DEFAULT)
        Locale(name, shortName=EmptyString, locale=EmptyString, bLoadDefault=True)
        
        wxLocale class encapsulates all language-dependent settings and is a
        generalization of the C locale concept.
    %End
    %TypeHeaderCode
        #include <wx/intl.h>
    %End

public:
    wxLocale();

    wxLocale(
        int language,
        int flags = wxLOCALE_LOAD_DEFAULT
    );

    wxLocale(
        const wxString & name,
        const wxString & shortName = wxEmptyString,
        const wxString & locale = wxEmptyString,
        bool bLoadDefault = true
    );

    virtual
    ~wxLocale();

    bool AddCatalog(
        const wxString & domain
    );
    %Docstring
        AddCatalog(domain) -> bool
        AddCatalog(domain, msgIdLanguage) -> bool
        AddCatalog(domain, msgIdLanguage, msgIdCharset) -> bool
        
        Calls wxTranslations::AddCatalog(const wxString&).
    %End

    bool AddCatalog(
        const wxString & domain,
        wxLanguage msgIdLanguage
    );

    bool AddCatalog(
        const wxString & domain,
        wxLanguage msgIdLanguage,
        const wxString & msgIdCharset
    );

    wxString GetCanonicalName() const;
    %Docstring
        GetCanonicalName() -> String
        
        Returns the canonical form of current locale name.
    %End

    wxString GetHeaderValue(
        const wxString & header,
        const wxString & domain = wxEmptyString
    ) const;
    %Docstring
        GetHeaderValue(header, domain=EmptyString) -> String
        
        Calls wxTranslations::GetHeaderValue().
    %End

    int GetLanguage() const;
    %Docstring
        GetLanguage() -> int
        
        Returns the wxLanguage constant of current language.
    %End

    const wxString & GetLocale() const;
    %Docstring
        GetLocale() -> String
        
        Returns the locale name as passed to the constructor or Init().
    %End

    const wxString & GetName() const;
    %Docstring
        GetName() -> String
        
        Returns the current short name for the locale (as given to the
        constructor or the Init() function).
    %End

    const wxString & GetString(
        const wxString & origString,
        const wxString & domain = wxEmptyString
    ) const;
    %Docstring
        GetString(origString, domain=EmptyString) -> String
        GetString(origString, origString2, n, domain=EmptyString) -> String
        
        Calls wxGetTranslation(const wxString&, const wxString&).
    %End

    const wxString & GetString(
        const wxString & origString,
        const wxString & origString2,
        unsigned n,
        const wxString & domain = wxEmptyString
    ) const;

    wxString GetSysName() const;
    %Docstring
        GetSysName() -> String
        
        Returns current platform-specific locale name as passed to
        setlocale().
    %End

    bool Init(
        int language = wxLANGUAGE_DEFAULT,
        int flags = wxLOCALE_LOAD_DEFAULT
    );
    %Docstring
        Init(language=LANGUAGE_DEFAULT, flags=LOCALE_LOAD_DEFAULT) -> bool
        Init(name, shortName=EmptyString, locale=EmptyString, bLoadDefault=True) -> bool
        
        Initializes the wxLocale instance.
    %End

    bool Init(
        const wxString & name,
        const wxString & shortName = wxEmptyString,
        const wxString & locale = wxEmptyString,
        bool bLoadDefault = true
    )   /Deprecated/;

    bool IsLoaded(
        const wxString & domain
    ) const;
    %Docstring
        IsLoaded(domain) -> bool
        
        Calls wxTranslations::IsLoaded().
    %End

    bool IsOk() const;
    %Docstring
        IsOk() -> bool
        
        Returns true if the locale could be set successfully.
    %End

    static
    void AddCatalogLookupPathPrefix(
        const wxString & prefix
    );
    %Docstring
        AddCatalogLookupPathPrefix(prefix)
        
        Calls wxFileTranslationsLoader::AddCatalogLookupPathPrefix().
    %End

    static
    void AddLanguage(
        const wxLanguageInfo & info
    );
    %Docstring
        AddLanguage(info)
        
        Adds custom, user-defined language to the database of known languages.
    %End

    static
    const wxLanguageInfo * FindLanguageInfo(
        const wxString & locale
    );
    %Docstring
        FindLanguageInfo(locale) -> LanguageInfo
        
        This function may be used to find the language description structure
        for the given locale, specified either as a two letter ISO language
        code (for example, "pt"), a language code followed by the country code
        ("pt_BR") or a full, human readable, language description
        ("Portuguese-Brazil").
    %End

    static
    const wxLanguageInfo * GetLanguageInfo(
        int lang
    );
    %Docstring
        GetLanguageInfo(lang) -> LanguageInfo
        
        Returns a pointer to wxLanguageInfo structure containing information
        about the given language or NULL if this language is unknown.
    %End

    static
    wxString GetLanguageName(
        int lang
    );
    %Docstring
        GetLanguageName(lang) -> String
        
        Returns English name of the given language or empty string if this
        language is unknown.
    %End

    static
    wxString GetLanguageCanonicalName(
        int lang
    );
    %Docstring
        GetLanguageCanonicalName(lang) -> String
        
        Returns canonical name (see GetCanonicalName()) of the given language
        or empty string if this language is unknown.
    %End

    static
    wxFontEncoding GetSystemEncoding();
    %Docstring
        GetSystemEncoding() -> FontEncoding
        
        Tries to detect the user's default font encoding.
    %End

    static
    wxString GetSystemEncodingName();
    %Docstring
        GetSystemEncodingName() -> String
        
        Tries to detect the name of the user's default font encoding.
    %End

    static
    int GetSystemLanguage();
    %Docstring
        GetSystemLanguage() -> int
        
        Tries to detect the user's default locale setting.
    %End

    static
    wxString GetInfo(
        wxLocaleInfo index,
        wxLocaleCategory cat = wxLOCALE_CAT_DEFAULT
    );
    %Docstring
        GetInfo(index, cat=LOCALE_CAT_DEFAULT) -> String
        
        Get the values of the given locale-dependent datum.
    %End

    static
    wxString GetOSInfo(
        wxLocaleInfo index,
        wxLocaleCategory cat = wxLOCALE_CAT_DEFAULT
    );
    %Docstring
        GetOSInfo(index, cat=LOCALE_CAT_DEFAULT) -> String
        
        Get the values of a locale datum in the OS locale.
    %End

    static
    bool IsAvailable(
        int lang
    );
    %Docstring
        IsAvailable(lang) -> bool
        
        Check whether the operating system and/or C run time environment
        supports this locale.
    %End

    private:
        wxLocale& operator=(const wxLocale&);


    private:
        wxLocale(const wxLocale&);


    int __nonzero__();
    %Docstring
        __nonzero__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxLocale___nonzero__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxLocale___nonzero__(wxLocale* self)
    {
        return self->IsOk();
    }
    %End

    int __bool__();
    %Docstring
        __bool__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxLocale___bool__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxLocale___bool__(wxLocale* self)
    {
        return self->IsOk();
    }
    %End

    public:


    %Property(name=CanonicalName, get=GetCanonicalName)
    %Property(name=Language, get=GetLanguage)
    %Property(name=Locale, get=GetLocale)
    %Property(name=Name, get=GetName)
    %Property(name=SysName, get=GetSysName)
};  // end of class wxLocale


wxLocale * wxGetLocale();
%Docstring
    GetLocale() -> Locale
    
    Get the current locale object (note that it may be NULL!)
%End

        char* wxSetlocale(int category, const char *locale);
        char* wxSetlocale(int category, const wxString& locale);


%Extract(id=pycode_core)
#----------------------------------------------------------------------------
# Add the directory where the wxWidgets catalogs were installed
# to the default catalog path, if they were put in the package dir.
import os
_localedir = os.path.join(os.path.dirname(__file__), "locale")
if os.path.exists(_localedir):
    Locale.AddCatalogLookupPathPrefix(_localedir)
del os
#----------------------------------------------------------------------------

%End


//---------------------------------------------------------------------------

