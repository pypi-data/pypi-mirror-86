//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/dcbuffer.h>
%End


//---------------------------------------------------------------------------

const int wxBUFFER_VIRTUAL_AREA;
const int wxBUFFER_CLIENT_AREA;
const int wxBUFFER_USES_SHARED_BUFFER;
class wxBufferedDC : wxMemoryDC
{
    %Docstring
        BufferedDC()
        BufferedDC(dc, area, style=BUFFER_CLIENT_AREA)
        BufferedDC(dc, buffer=NullBitmap, style=BUFFER_CLIENT_AREA)
        
        This class provides a simple way to avoid flicker: when drawing on it,
        everything is in fact first drawn on an in-memory buffer (a wxBitmap)
        and then copied to the screen, using the associated wxDC, only once,
        when this object is destroyed.
    %End
    %TypeHeaderCode
        #include <wx/dcbuffer.h>
    %End

public:
    wxBufferedDC();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBufferedDC(
        wxDC * dc   /KeepReference/,
        const wxSize & area,
        int style = wxBUFFER_CLIENT_AREA
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBufferedDC(
        wxDC * dc   /KeepReference/,
        wxBitmap & buffer   /KeepReference/ = wxNullBitmap,
        int style = wxBUFFER_CLIENT_AREA
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual
    ~wxBufferedDC();

    void Init(
        wxDC * dc   /KeepReference/,
        const wxSize & area,
        int style = wxBUFFER_CLIENT_AREA
    );
    %Docstring
        Init(dc, area, style=BUFFER_CLIENT_AREA)
        Init(dc, buffer=NullBitmap, style=BUFFER_CLIENT_AREA)
        
        Initializes the object created using the default constructor.
    %End

    void Init(
        wxDC * dc   /KeepReference/,
        wxBitmap & buffer   /KeepReference/ = wxNullBitmap,
        int style = wxBUFFER_CLIENT_AREA
    );

    void UnMask();
    %Docstring
        UnMask()
        
        Blits the buffer to the dc, and detaches the dc from the buffer (so it
        can be effectively used once only).
    %End

    void SetStyle(
        int style
    );
    %Docstring
        SetStyle(style)
        
        Set the style.
    %End

    int GetStyle() const;
    %Docstring
        GetStyle() -> int
        
        Get the style.
    %End

    private:
        wxBufferedDC(const wxBufferedDC&);


    public:


    %Property(name=Style, get=GetStyle, set=SetStyle)
};  // end of class wxBufferedDC


class wxBufferedPaintDC : wxBufferedDC
{
    %Docstring
        BufferedPaintDC(window, buffer, style=BUFFER_CLIENT_AREA)
        BufferedPaintDC(window, style=BUFFER_CLIENT_AREA)
        
        This is a subclass of wxBufferedDC which can be used inside of an
        EVT_PAINT() event handler to achieve double-buffered drawing.
    %End
    %TypeHeaderCode
        #include <wx/dcbuffer.h>
    %End

public:
    wxBufferedPaintDC(
        wxWindow * window,
        wxBitmap & buffer   /KeepReference/,
        int style = wxBUFFER_CLIENT_AREA
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBufferedPaintDC(
        wxWindow * window,
        int style = wxBUFFER_CLIENT_AREA
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual
    ~wxBufferedPaintDC();

    private:
        wxBufferedPaintDC(const wxBufferedPaintDC&);


};  // end of class wxBufferedPaintDC


class wxAutoBufferedPaintDC : wxDC
{
    %Docstring
        AutoBufferedPaintDC(window)
        
        This wxDC derivative can be used inside of an EVT_PAINT() event
        handler to achieve double-buffered drawing.
    %End
    %TypeHeaderCode
        #include <wx/dcbuffer.h>
    %End

public:
    wxAutoBufferedPaintDC(
        wxWindow * window
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    private:
        wxAutoBufferedPaintDC(const wxAutoBufferedPaintDC&);


};  // end of class wxAutoBufferedPaintDC


wxDC * wxAutoBufferedPaintDCFactory(
    wxWindow * window
)   /Factory/;
%Docstring
    AutoBufferedPaintDCFactory(window) -> DC
    
    Check if the window is natively double buffered and will return a
    wxPaintDC if it is, a wxBufferedPaintDC otherwise.
%End


//---------------------------------------------------------------------------

