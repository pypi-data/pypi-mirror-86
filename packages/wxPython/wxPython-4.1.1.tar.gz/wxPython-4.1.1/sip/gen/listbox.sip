//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const char* wxListBoxNameStr;

class wxListBox : wxControl, wxItemContainer
{
    %Docstring
        ListBox()
        ListBox(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, choices=[], style=0, validator=DefaultValidator, name=ListBoxNameStr)
        
        A listbox is used to select one or more of a list of strings.
    %End
    %TypeHeaderCode
        #include <wx/listbox.h>
    %End

public:
    wxListBox();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxListBox(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxArrayString & choices = wxArrayString(),
        long style = 0,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxListBoxNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxListBox();

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxArrayString & choices = wxArrayString(),
        long style = 0,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxListBoxNameStr
    );
    %Docstring
        Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, choices=[], style=0, validator=DefaultValidator, name=ListBoxNameStr) -> bool
        
        Creates the listbox for two-step construction.
    %End

    void Deselect(
        int n
    );
    %Docstring
        Deselect(n)
        
        Deselects an item in the list box.
    %End

    void SetSelection(
        int n
    );
    %Docstring
        SetSelection(n)
        
        Sets the selection to the given item n or removes the selection
        entirely if n == wxNOT_FOUND.
    %End

    int GetSelection() const;
    %Docstring
        GetSelection() -> int
        
        Returns the index of the selected item or wxNOT_FOUND if no item is
        selected.
    %End

    bool SetStringSelection(
        const wxString & s,
        bool select
    );
    %Docstring
        SetStringSelection(s, select) -> bool
        SetStringSelection(s) -> bool
    %End

    bool SetStringSelection(
        const wxString & s
    );

    wxArrayInt* GetSelections(
    ) const   /Factory/;
    %Docstring
        GetSelections() -> ArrayInt
        
        Fill an array of ints with the positions of the currently selected
        items.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxListBox_GetSelections(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxArrayInt* _wxListBox_GetSelections(const wxListBox* self)
    {
        wxArrayInt* array = new wxArrayInt;
        self->GetSelections(*array);
        return array;
    }
    %End

    int HitTest(
        const wxPoint & point
    ) const;
    %Docstring
        HitTest(point) -> int
        HitTest(x, y) -> int
        
        Returns the item located at point, or wxNOT_FOUND if there is no item
        located at point.
    %End

    int HitTest(
        int x,
        int y
    ) const;

    void InsertItems(
        const wxArrayString & items,
        unsigned int pos
    );
    %Docstring
        InsertItems(items, pos)
        
        Insert the given number of strings before the specified position.
    %End

    bool IsSelected(
        int n
    ) const;
    %Docstring
        IsSelected(n) -> bool
        
        Determines whether an item is selected.
    %End

    void SetFirstItem(
        int n
    );
    %Docstring
        SetFirstItem(n)
        SetFirstItem(string)
        
        Set the specified item to be the first visible item.
    %End

    void SetFirstItem(
        const wxString & string
    );

    void EnsureVisible(
        int n
    );
    %Docstring
        EnsureVisible(n)
        
        Ensure that the item with the given index is currently shown.
    %End

    bool IsSorted() const;
    %Docstring
        IsSorted() -> bool
        
        Return true if the listbox has wxLB_SORT style.
    %End

    int GetCountPerPage() const;
    %Docstring
        GetCountPerPage() -> int
        
        Return the number of items that can fit vertically in the visible area
        of the listbox.
    %End

    int GetTopItem() const;
    %Docstring
        GetTopItem() -> int
        
        Return the index of the topmost visible item.
    %End

    void MSWSetTabStops(const wxArrayInt& tabStops);
    %Docstring
        MSWSetTabStops(tabStops)
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxListBox_MSWSetTabStops(sipCpp, tabStops);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxListBox_MSWSetTabStops(wxListBox* self, const wxArrayInt* tabStops)
    {
        #ifdef __WXMSW__
            // TODO:
            //self->MSWSetTabStops(*tabStops);
        #endif
    }
    %End

    unsigned int GetCount() const;
    %Docstring
        GetCount() -> unsignedint
        
        Returns the number of items in the control.
    %End

    wxString GetString(
        unsigned int n
    ) const;
    %Docstring
        GetString(n) -> String
        
        Returns the label of the item with the given index.
    %End

    void SetString(
        unsigned int n,
        const wxString & string
    );
    %Docstring
        SetString(n, string)
        
        Sets the label for the given item.
    %End

    int FindString(
        const wxString & string,
        bool caseSensitive = false
    ) const;
    %Docstring
        FindString(string, caseSensitive=False) -> int
        
        Finds an item whose label matches the given string.
    %End

    void SetItemForegroundColour(int item,  const wxColour* c);
    %Docstring
        SetItemForegroundColour(item, c)
        
        Set the foreground colour of an item in the ListBox.
        Only valid on MSW and if the ``wx.LB_OWNERDRAW`` flag is set.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxListBox_SetItemForegroundColour(sipCpp, item, c);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxListBox_SetItemForegroundColour(wxListBox* self, int item, const wxColour* c)
    {
        #ifdef __WXMSW__
             if (self->GetWindowStyle() & wxLB_OWNERDRAW)
                 self->GetItem(item)->SetTextColour(*c);
        #endif
    }
    %End

    void SetItemBackgroundColour(int item,  const wxColour* c);
    %Docstring
        SetItemBackgroundColour(item, c)
        
        Set the background colour of an item in the ListBox.
        Only valid on MSW and if the ``wx.LB_OWNERDRAW`` flag is set.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxListBox_SetItemBackgroundColour(sipCpp, item, c);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxListBox_SetItemBackgroundColour(wxListBox* self, int item, const wxColour* c)
    {
        #ifdef __WXMSW__
             if (self->GetWindowStyle() & wxLB_OWNERDRAW)
                 self->GetItem(item)->SetBackgroundColour(*c);
        #endif
    }
    %End

    void SetItemFont(int item,  const wxFont* f);
    %Docstring
        SetItemFont(item, f)
        
        Set the font of an item in the ListBox.
        Only valid on MSW and if the ``wx.LB_OWNERDRAW`` flag is set.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxListBox_SetItemFont(sipCpp, item, f);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxListBox_SetItemFont(wxListBox* self, int item, const wxFont* f)
    {
        #ifdef __WXMSW__
             if (self->GetWindowStyle() & wxLB_OWNERDRAW)
                 self->GetItem(item)->SetFont(*f);
        #endif
    }
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Count, get=GetCount)
    %Property(name=CountPerPage, get=GetCountPerPage)
    %Property(name=Selection, get=GetSelection, set=SetSelection)
    %Property(name=Selections, get=GetSelections)
    %Property(name=TopItem, get=GetTopItem)
};  // end of class wxListBox



//---------------------------------------------------------------------------

