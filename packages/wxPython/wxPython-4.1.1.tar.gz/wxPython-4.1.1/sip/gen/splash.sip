//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _adv.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/splash.h>
%End


//---------------------------------------------------------------------------

const int wxSPLASH_CENTRE_ON_PARENT;
const int wxSPLASH_CENTRE_ON_SCREEN;
const int wxSPLASH_NO_CENTRE;
const int wxSPLASH_TIMEOUT;
const int wxSPLASH_NO_TIMEOUT;
class wxSplashScreen : wxFrame
{
    %Docstring
        SplashScreen(bitmap, splashStyle, milliseconds, parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.BORDER_SIMPLE|wx.FRAME_NO_TASKBAR|wx.STAY_ON_TOP)
        
        wxSplashScreen shows a window with a thin border, displaying a bitmap
        describing your application.
    %End
    %TypeHeaderCode
        #include <wx/splash.h>
    %End

public:
    wxSplashScreen(
        const wxBitmap & bitmap,
        long splashStyle,
        int milliseconds,
        wxWindow * parent,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = wxBORDER_SIMPLE|wxFRAME_NO_TASKBAR|wxSTAY_ON_TOP
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxSplashScreen();

    long GetSplashStyle() const;
    %Docstring
        GetSplashStyle() -> long
        
        Returns the splash style (see wxSplashScreen() for details).
    %End

    int GetTimeout() const;
    %Docstring
        GetTimeout() -> int
        
        Returns the timeout in milliseconds.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBitmap* GetBitmap();
    %Docstring
        GetBitmap() -> wx.Bitmap
        
        Get the spash screen's bitmap
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxSplashScreen_GetBitmap(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    wxBitmap* _wxSplashScreen_GetBitmap(wxSplashScreen* self)
    {
        return & self->GetSplashWindow()->GetBitmap();
    }
    %End

    void SetBitmap(const wxBitmap& bitmap);
    %Docstring
        SetBitmap(bitmap)
        
        Set a new bitmap for the splash screen.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxSplashScreen_SetBitmap(sipCpp, bitmap);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxSplashScreen_SetBitmap(wxSplashScreen* self, const wxBitmap* bitmap)
    {
        self->GetSplashWindow()->SetBitmap(*bitmap);
    }
    %End

    public:


    %Property(name=Bitmap, get=GetBitmap, set=SetBitmap)
    %Property(name=SplashStyle, get=GetSplashStyle)
    %Property(name=Timeout, get=GetTimeout)
};  // end of class wxSplashScreen


%Extract(id=pycode_adv)
SPLASH_CENTER_ON_PARENT = SPLASH_CENTRE_ON_PARENT
SPLASH_CENTER_ON_SCREEN = SPLASH_CENTRE_ON_SCREEN
SPLASH_NO_CENTER = SPLASH_NO_CENTRE

%End


//---------------------------------------------------------------------------

