//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _aui.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxAuiPaneDockArtSetting
{
    wxAUI_DOCKART_SASH_SIZE,
    wxAUI_DOCKART_CAPTION_SIZE,
    wxAUI_DOCKART_GRIPPER_SIZE,
    wxAUI_DOCKART_PANE_BORDER_SIZE,
    wxAUI_DOCKART_PANE_BUTTON_SIZE,
    wxAUI_DOCKART_BACKGROUND_COLOUR,
    wxAUI_DOCKART_SASH_COLOUR,
    wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR,
    wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR,
    wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR,
    wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR,
    wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR,
    wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR,
    wxAUI_DOCKART_BORDER_COLOUR,
    wxAUI_DOCKART_GRIPPER_COLOUR,
    wxAUI_DOCKART_CAPTION_FONT,
    wxAUI_DOCKART_GRADIENT_TYPE
};

enum wxAuiPaneDockArtGradients
{
    wxAUI_GRADIENT_NONE,
    wxAUI_GRADIENT_VERTICAL,
    wxAUI_GRADIENT_HORIZONTAL
};

enum wxAuiPaneButtonState
{
    wxAUI_BUTTON_STATE_NORMAL,
    wxAUI_BUTTON_STATE_HOVER,
    wxAUI_BUTTON_STATE_PRESSED,
    wxAUI_BUTTON_STATE_DISABLED,
    wxAUI_BUTTON_STATE_HIDDEN,
    wxAUI_BUTTON_STATE_CHECKED
};

enum wxAuiButtonId
{
    wxAUI_BUTTON_CLOSE,
    wxAUI_BUTTON_MAXIMIZE_RESTORE,
    wxAUI_BUTTON_MINIMIZE,
    wxAUI_BUTTON_PIN,
    wxAUI_BUTTON_OPTIONS,
    wxAUI_BUTTON_WINDOWLIST,
    wxAUI_BUTTON_LEFT,
    wxAUI_BUTTON_RIGHT,
    wxAUI_BUTTON_UP,
    wxAUI_BUTTON_DOWN,
    wxAUI_BUTTON_CUSTOM1,
    wxAUI_BUTTON_CUSTOM2,
    wxAUI_BUTTON_CUSTOM3
};

class wxAuiDockArt
{
    %Docstring
        AuiDockArt()
        
        wxAuiDockArt is part of the wxAUI class framework.
    %End
    %TypeHeaderCode
        #include <wx/aui/dockart.h>
    %End

public:
    wxAuiDockArt();

    virtual
    ~wxAuiDockArt();

    virtual
    wxAuiDockArt * Clone() = 0;
    %Docstring
        Clone() -> AuiDockArt
        
        Create a copy of this wxAuiDockArt instance.
    %End

    virtual
    void DrawBackground(
        wxDC & dc,
        wxWindow * window,
        int orientation,
        const wxRect & rect
    ) = 0;
    %Docstring
        DrawBackground(dc, window, orientation, rect)
        
        Draws a background.
    %End

    virtual
    void DrawBorder(
        wxDC & dc,
        wxWindow * window,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    ) = 0;
    %Docstring
        DrawBorder(dc, window, rect, pane)
        
        Draws a border.
    %End

    virtual
    void DrawCaption(
        wxDC & dc,
        wxWindow * window,
        const wxString & text,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    ) = 0;
    %Docstring
        DrawCaption(dc, window, text, rect, pane)
        
        Draws a caption.
    %End

    virtual
    void DrawGripper(
        wxDC & dc,
        wxWindow * window,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    ) = 0;
    %Docstring
        DrawGripper(dc, window, rect, pane)
        
        Draws a gripper.
    %End

    virtual
    void DrawPaneButton(
        wxDC & dc,
        wxWindow * window,
        int button,
        int button_state,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    ) = 0;
    %Docstring
        DrawPaneButton(dc, window, button, button_state, rect, pane)
        
        Draws a button in the pane's title bar.
    %End

    virtual
    void DrawSash(
        wxDC & dc,
        wxWindow * window,
        int orientation,
        const wxRect & rect
    ) = 0;
    %Docstring
        DrawSash(dc, window, orientation, rect)
        
        Draws a sash between two windows.
    %End

    virtual
    wxColour GetColour(
        int id
    ) = 0;
    %Docstring
        GetColour(id) -> wx.Colour
        
        Get the colour of a certain setting.
    %End

    virtual
    wxFont GetFont(
        int id
    ) = 0;
    %Docstring
        GetFont(id) -> wx.Font
        
        Get a font setting.
    %End

    virtual
    int GetMetric(
        int id
    ) = 0;
    %Docstring
        GetMetric(id) -> int
        
        Get the value of a certain setting.
    %End

    virtual
    void SetColour(
        int id,
        const wxColour & colour
    ) = 0;
    %Docstring
        SetColour(id, colour)
        
        Set a certain setting with the value colour.
    %End

    virtual
    void SetFont(
        int id,
        const wxFont & font
    ) = 0;
    %Docstring
        SetFont(id, font)
        
        Set a font setting.
    %End

    virtual
    void SetMetric(
        int id,
        int new_val
    ) = 0;
    %Docstring
        SetMetric(id, new_val)
        
        Set a certain setting with the value new_val.
    %End

};  // end of class wxAuiDockArt


class wxAuiDefaultDockArt : wxAuiDockArt
{
    %Docstring
        AuiDefaultDockArt()
        
        This is the default art provider for wxAuiManager.
    %End
    %TypeHeaderCode
        #include <wx/aui/dockart.h>
    %End

public:
    wxAuiDefaultDockArt();

    virtual
    wxAuiDockArt * Clone();
    %Docstring
        Clone() -> AuiDockArt
        
        Create a copy of this wxAuiDockArt instance.
    %End

    virtual
    int GetMetric(
        int id
    );
    %Docstring
        GetMetric(id) -> int
        
        Get the value of a certain setting.
    %End

    virtual
    void SetMetric(
        int id,
        int new_val
    );
    %Docstring
        SetMetric(id, new_val)
        
        Set a certain setting with the value new_val.
    %End

    virtual
    wxColour GetColour(
        int id
    );
    %Docstring
        GetColour(id) -> wx.Colour
        
        Get the colour of a certain setting.
    %End

    virtual
    void SetColour(
        int id,
        const wxColour & colour
    );
    %Docstring
        SetColour(id, colour)
        
        Set a certain setting with the value colour.
    %End

    virtual
    void SetFont(
        int id,
        const wxFont & font
    );
    %Docstring
        SetFont(id, font)
        
        Set a font setting.
    %End

    virtual
    wxFont GetFont(
        int id
    );
    %Docstring
        GetFont(id) -> wx.Font
        
        Get a font setting.
    %End

    virtual
    void DrawSash(
        wxDC & dc,
        wxWindow * window,
        int orientation,
        const wxRect & rect
    );
    %Docstring
        DrawSash(dc, window, orientation, rect)
        
        Draws a sash between two windows.
    %End

    virtual
    void DrawBackground(
        wxDC & dc,
        wxWindow * window,
        int orientation,
        const wxRect & rect
    );
    %Docstring
        DrawBackground(dc, window, orientation, rect)
        
        Draws a background.
    %End

    virtual
    void DrawCaption(
        wxDC & dc,
        wxWindow * window,
        const wxString & text,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    );
    %Docstring
        DrawCaption(dc, window, text, rect, pane)
        
        Draws a caption.
    %End

    virtual
    void DrawGripper(
        wxDC & dc,
        wxWindow * window,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    );
    %Docstring
        DrawGripper(dc, window, rect, pane)
        
        Draws a gripper.
    %End

    virtual
    void DrawBorder(
        wxDC & dc,
        wxWindow * window,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    );
    %Docstring
        DrawBorder(dc, window, rect, pane)
        
        Draws a border.
    %End

    virtual
    void DrawPaneButton(
        wxDC & dc,
        wxWindow * window,
        int button,
        int button_state,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    );
    %Docstring
        DrawPaneButton(dc, window, button, button_state, rect, pane)
        
        Draws a button in the pane's title bar.
    %End

    void DrawIcon(
        wxDC & dc,
        const wxRect & rect,
        wxAuiPaneInfo & pane
    )   /Deprecated/;
    %Docstring
        DrawIcon(dc, rect, pane)
    %End

};  // end of class wxAuiDefaultDockArt



//---------------------------------------------------------------------------

