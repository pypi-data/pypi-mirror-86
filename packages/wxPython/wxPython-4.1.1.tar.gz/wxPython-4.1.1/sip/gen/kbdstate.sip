//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxKeyboardState
{
    %Docstring
        KeyboardState(controlDown=False, shiftDown=False, altDown=False, metaDown=False)
        
        Provides methods for testing the state of the keyboard modifier keys.
    %End
    %TypeHeaderCode
        #include <wx/kbdstate.h>
    %End

public:
    wxKeyboardState(
        bool controlDown = false,
        bool shiftDown = false,
        bool altDown = false,
        bool metaDown = false
    );

    int GetModifiers() const;
    %Docstring
        GetModifiers() -> int
        
        Return the bit mask of all pressed modifier keys.
    %End

    bool HasAnyModifiers() const;
    %Docstring
        HasAnyModifiers() -> bool
        
        Returns true if any modifiers at all are pressed.
    %End

    bool HasModifiers() const;
    %Docstring
        HasModifiers() -> bool
        
        Returns true if Control or Alt are pressed.
    %End

    bool ControlDown() const;
    %Docstring
        ControlDown() -> bool
        
        Returns true if the Control key or Apple/Command key under macOS is
        pressed.
    %End

    bool RawControlDown() const;
    %Docstring
        RawControlDown() -> bool
        
        Returns true if the Control key (also under macOS).
    %End

    bool ShiftDown() const;
    %Docstring
        ShiftDown() -> bool
        
        Returns true if the Shift key is pressed.
    %End

    bool MetaDown() const;
    %Docstring
        MetaDown() -> bool
        
        Returns true if the Meta/Windows/Apple key is pressed.
    %End

    bool AltDown() const;
    %Docstring
        AltDown() -> bool
        
        Returns true if the Alt key is pressed.
    %End

    bool CmdDown() const;
    %Docstring
        CmdDown() -> bool
        
        Returns true if the key used for command accelerators is pressed.
    %End

    void SetControlDown(
        bool down
    );
    %Docstring
        SetControlDown(down)
    %End

    void SetRawControlDown(
        bool down
    );
    %Docstring
        SetRawControlDown(down)
    %End

    void SetShiftDown(
        bool down
    );
    %Docstring
        SetShiftDown(down)
    %End

    void SetAltDown(
        bool down
    );
    %Docstring
        SetAltDown(down)
    %End

    void SetMetaDown(
        bool down
    );
    %Docstring
        SetMetaDown(down)
    %End

    %Property(name=controlDown, get=ControlDown, set=SetControlDown)
    %Property(name=rawControlDown, get=RawControlDown, set=SetRawControlDown)
    %Property(name=shiftDown, get=ShiftDown, set=SetShiftDown)
    %Property(name=altDown, get=AltDown, set=SetAltDown)
    %Property(name=metaDown, get=MetaDown, set=SetMetaDown)
    %Property(name=cmdDown, get=CmdDown)
};  // end of class wxKeyboardState


%Extract(id=pycode_core)
# For 2.8 compatibility
KeyboardState.m_controlDown = wx.deprecated(KeyboardState.controlDown, "Use controlDown instead.")
KeyboardState.m_shiftDown   = wx.deprecated(KeyboardState.shiftDown, "Use shiftDown instead.")
KeyboardState.m_altDown     = wx.deprecated(KeyboardState.altDown, "Use altDown instead.")
KeyboardState.m_metaDown    = wx.deprecated(KeyboardState.metaDown, "Use metaDown instead.")

%End


//---------------------------------------------------------------------------

