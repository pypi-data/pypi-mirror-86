//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxSystemFont
{
    wxSYS_OEM_FIXED_FONT,
    wxSYS_ANSI_FIXED_FONT,
    wxSYS_ANSI_VAR_FONT,
    wxSYS_SYSTEM_FONT,
    wxSYS_DEVICE_DEFAULT_FONT,
    wxSYS_DEFAULT_GUI_FONT
};

enum wxSystemColour
{
    wxSYS_COLOUR_SCROLLBAR,
    wxSYS_COLOUR_DESKTOP,
    wxSYS_COLOUR_ACTIVECAPTION,
    wxSYS_COLOUR_INACTIVECAPTION,
    wxSYS_COLOUR_MENU,
    wxSYS_COLOUR_WINDOW,
    wxSYS_COLOUR_WINDOWFRAME,
    wxSYS_COLOUR_MENUTEXT,
    wxSYS_COLOUR_WINDOWTEXT,
    wxSYS_COLOUR_CAPTIONTEXT,
    wxSYS_COLOUR_ACTIVEBORDER,
    wxSYS_COLOUR_INACTIVEBORDER,
    wxSYS_COLOUR_APPWORKSPACE,
    wxSYS_COLOUR_HIGHLIGHT,
    wxSYS_COLOUR_HIGHLIGHTTEXT,
    wxSYS_COLOUR_BTNFACE,
    wxSYS_COLOUR_BTNSHADOW,
    wxSYS_COLOUR_GRAYTEXT,
    wxSYS_COLOUR_BTNTEXT,
    wxSYS_COLOUR_INACTIVECAPTIONTEXT,
    wxSYS_COLOUR_BTNHIGHLIGHT,
    wxSYS_COLOUR_3DDKSHADOW,
    wxSYS_COLOUR_3DLIGHT,
    wxSYS_COLOUR_INFOTEXT,
    wxSYS_COLOUR_INFOBK,
    wxSYS_COLOUR_LISTBOX,
    wxSYS_COLOUR_HOTLIGHT,
    wxSYS_COLOUR_GRADIENTACTIVECAPTION,
    wxSYS_COLOUR_GRADIENTINACTIVECAPTION,
    wxSYS_COLOUR_MENUHILIGHT,
    wxSYS_COLOUR_MENUBAR,
    wxSYS_COLOUR_LISTBOXTEXT,
    wxSYS_COLOUR_LISTBOXHIGHLIGHTTEXT,
    wxSYS_COLOUR_BACKGROUND,
    wxSYS_COLOUR_3DFACE,
    wxSYS_COLOUR_3DSHADOW,
    wxSYS_COLOUR_BTNHILIGHT,
    wxSYS_COLOUR_3DHIGHLIGHT,
    wxSYS_COLOUR_3DHILIGHT,
    wxSYS_COLOUR_FRAMEBK
};

enum wxSystemMetric
{
    wxSYS_MOUSE_BUTTONS,
    wxSYS_BORDER_X,
    wxSYS_BORDER_Y,
    wxSYS_CURSOR_X,
    wxSYS_CURSOR_Y,
    wxSYS_DCLICK_X,
    wxSYS_DCLICK_Y,
    wxSYS_DRAG_X,
    wxSYS_DRAG_Y,
    wxSYS_EDGE_X,
    wxSYS_EDGE_Y,
    wxSYS_HSCROLL_ARROW_X,
    wxSYS_HSCROLL_ARROW_Y,
    wxSYS_HTHUMB_X,
    wxSYS_ICON_X,
    wxSYS_ICON_Y,
    wxSYS_ICONSPACING_X,
    wxSYS_ICONSPACING_Y,
    wxSYS_WINDOWMIN_X,
    wxSYS_WINDOWMIN_Y,
    wxSYS_SCREEN_X,
    wxSYS_SCREEN_Y,
    wxSYS_FRAMESIZE_X,
    wxSYS_FRAMESIZE_Y,
    wxSYS_SMALLICON_X,
    wxSYS_SMALLICON_Y,
    wxSYS_HSCROLL_Y,
    wxSYS_VSCROLL_X,
    wxSYS_VSCROLL_ARROW_X,
    wxSYS_VSCROLL_ARROW_Y,
    wxSYS_VTHUMB_Y,
    wxSYS_CAPTION_Y,
    wxSYS_MENU_Y,
    wxSYS_NETWORK_PRESENT,
    wxSYS_PENWINDOWS_PRESENT,
    wxSYS_SHOW_SOUNDS,
    wxSYS_SWAP_BUTTONS,
    wxSYS_DCLICK_MSEC,
    wxSYS_CARET_ON_MSEC,
    wxSYS_CARET_OFF_MSEC,
    wxSYS_CARET_TIMEOUT_MSEC
};

enum wxSystemFeature
{
    wxSYS_CAN_DRAW_FRAME_DECORATIONS,
    wxSYS_CAN_ICONIZE_FRAME,
    wxSYS_TABLET_PRESENT
};

enum wxSystemScreenType
{
    wxSYS_SCREEN_NONE,
    wxSYS_SCREEN_TINY,
    wxSYS_SCREEN_PDA,
    wxSYS_SCREEN_SMALL,
    wxSYS_SCREEN_DESKTOP
};

class wxSystemSettings
{
    %Docstring
        SystemSettings()
        
        wxSystemSettings allows the application to ask for details about the
        system.
    %End
    %TypeHeaderCode
        #include <wx/settings.h>
    %End

public:
    wxSystemSettings();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    wxColour GetColour(
        wxSystemColour index
    );
    %Docstring
        GetColour(index) -> Colour
        
        Returns a system colour.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    wxFont GetFont(
        wxSystemFont index
    );
    %Docstring
        GetFont(index) -> Font
        
        Returns a system font.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    int GetMetric(
        wxSystemMetric index,
        wxWindow * win = NULL
    );
    %Docstring
        GetMetric(index, win=None) -> int
        
        Returns the value of a system metric, or -1 if the metric is not
        supported on the current system.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    wxSystemScreenType GetScreenType();
    %Docstring
        GetScreenType() -> SystemScreenType
        
        Returns the screen type.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    static
    wxSystemAppearance GetAppearance();
    %Docstring
        GetAppearance() -> SystemAppearance
        
        Returns the object describing the current system appearance.
    %End

    static
    bool HasFeature(
        wxSystemFeature index
    );
    %Docstring
        HasFeature(index) -> bool
        
        Returns true if the port has certain feature.
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

};  // end of class wxSystemSettings


class wxSystemAppearance
{
    %Docstring
        Provides information about the current system appearance.
    %End
    %TypeHeaderCode
        #include <wx/settings.h>
    %End

public:
    wxString GetName() const;
    %Docstring
        GetName() -> String
        
        Return the name if available or empty string otherwise.
    %End

    bool IsDark() const;
    %Docstring
        IsDark() -> bool
        
        Return true if the current system there is explicitly recognized as
        being a dark theme or if the default window background is dark.
    %End

    bool IsUsingDarkBackground() const;
    %Docstring
        IsUsingDarkBackground() -> bool
        
        Return true if the default window background is significantly darker
        than foreground.
    %End

    private:
        wxSystemAppearance();


    public:


    %Property(name=Name, get=GetName)
};  // end of class wxSystemAppearance



//---------------------------------------------------------------------------

