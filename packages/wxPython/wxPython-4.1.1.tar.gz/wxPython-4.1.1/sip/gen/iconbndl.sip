//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxIconBundle : wxGDIObject
{
    %Docstring
        IconBundle()
        IconBundle(file, type=BITMAP_TYPE_ANY)
        IconBundle(stream, type=BITMAP_TYPE_ANY)
        IconBundle(icon)
        IconBundle(ic)
        
        This class contains multiple copies of an icon in different sizes.
    %End
    %TypeHeaderCode
        #include <wx/iconbndl.h>
    %End

public:
    enum 
    {
        FALLBACK_NONE,
        FALLBACK_SYSTEM,
        FALLBACK_NEAREST_LARGER    
    };

    wxIconBundle();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxIconBundle(
        const wxString & file,
        wxBitmapType type = wxBITMAP_TYPE_ANY
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxIconBundle(
        wxInputStream & stream,
        wxBitmapType type = wxBITMAP_TYPE_ANY
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxIconBundle(
        const wxIcon & icon
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxIconBundle(
        const wxIconBundle & ic
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual
    ~wxIconBundle();

    void AddIcon(
        const wxString & file,
        wxBitmapType type = wxBITMAP_TYPE_ANY
    );
    %Docstring
        AddIcon(file, type=BITMAP_TYPE_ANY)
        AddIcon(stream, type=BITMAP_TYPE_ANY)
        AddIcon(icon)
        
        Adds all the icons contained in the file to the bundle; if the
        collection already contains icons with the same width and height, they
        are replaced by the new ones.
    %End

    void AddIcon(
        wxInputStream & stream,
        wxBitmapType type = wxBITMAP_TYPE_ANY
    );

    void AddIcon(
        const wxIcon & icon
    );

    wxIcon GetIcon(
        const wxSize & size,
        int flags = FALLBACK_SYSTEM
    ) const;
    %Docstring
        GetIcon(size, flags=FALLBACK_SYSTEM) -> Icon
        GetIcon(size=DefaultCoord, flags=FALLBACK_SYSTEM) -> Icon
        
        Returns the icon with the given size.
    %End

    wxIcon GetIcon(
        wxCoord size = wxDefaultCoord,
        int flags = FALLBACK_SYSTEM
    ) const;

    wxIcon GetIconOfExactSize(
        const wxSize & size
    ) const;
    %Docstring
        GetIconOfExactSize(size) -> Icon
        
        Returns the icon with exactly the given size or wxNullIcon if this
        size is not available.
    %End

    size_t GetIconCount() const;
    %Docstring
        GetIconCount() -> size_t
        
        return the number of available icons
    %End

    wxIcon GetIconByIndex(
        size_t n
    ) const;
    %Docstring
        GetIconByIndex(n) -> Icon
        
        return the icon at index (must be < GetIconCount())
    %End

    bool IsEmpty() const;
    %Docstring
        IsEmpty() -> bool
        
        Returns true if the bundle doesn't contain any icons, false otherwise
        (in which case a call to GetIcon() with default parameter should
        return a valid icon).
    %End

    public:


    %Property(name=Icon, get=GetIcon)
    %Property(name=IconCount, get=GetIconCount)
};  // end of class wxIconBundle


wxIconBundle wxNullIconBundle;


//---------------------------------------------------------------------------

