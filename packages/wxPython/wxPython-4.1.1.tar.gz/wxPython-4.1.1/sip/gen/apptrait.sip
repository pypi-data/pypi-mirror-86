//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxAppTraits   /Abstract/
{
    %Docstring
        The wxAppTraits class defines various configurable aspects of a wxApp.
    %End
    %TypeHeaderCode
        #include <wx/apptrait.h>
    %End

public:
    virtual
    wxConfigBase * CreateConfig()   /Factory/;
    %Docstring
        CreateConfig() -> ConfigBase
        
        Called by wxWidgets to create the default configuration object for the
        application.
    %End

    virtual
    wxEventLoopBase * CreateEventLoop() = 0   /Factory/;
    %Docstring
        CreateEventLoop() -> EventLoopBase
        
        Used by wxWidgets to create the main event loop used by
        wxApp::OnRun().
    %End

    virtual
    wxLog * CreateLogTarget() = 0   /Factory/;
    %Docstring
        CreateLogTarget() -> Log
        
        Creates a wxLog class for the application to use for logging errors.
    %End

    virtual
    wxString GetDesktopEnvironment() const = 0;
    %Docstring
        GetDesktopEnvironment() -> String
        
        This method returns the name of the desktop environment currently
        running in a Unix desktop.
    %End

    virtual
    wxStandardPaths & GetStandardPaths();
    %Docstring
        GetStandardPaths() -> StandardPaths
        
        Returns the wxStandardPaths object for the application.
    %End

    virtual
    wxPortId GetToolkitVersion(
        int * major   /Out/ = NULL,
        int * minor   /Out/ = NULL,
        int * micro   /Out/ = NULL
    ) const = 0;
    %Docstring
        GetToolkitVersion() -> (PortId, major, minor, micro)
        
        Returns the wxWidgets port ID used by the running program and
        eventually fills the given pointers with the values of the major,
        minor, and micro digits of the native toolkit currently used.
    %End

    virtual
    bool HasStderr() = 0;
    %Docstring
        HasStderr() -> bool
        
        Returns true if fprintf(stderr) goes somewhere, false otherwise.
    %End

    virtual
    bool IsUsingUniversalWidgets() const = 0;
    %Docstring
        IsUsingUniversalWidgets() -> bool
        
        Returns true if the library was built as wxUniversal.
    %End

    virtual
    bool ShowAssertDialog(
        const wxString & msg
    ) = 0;
    %Docstring
        ShowAssertDialog(msg) -> bool
        
        Shows the assert dialog with the specified message in GUI mode or just
        prints the string to stderr in console mode.
    %End

    public:


    %Property(name=DesktopEnvironment, get=GetDesktopEnvironment)
    %Property(name=StandardPaths, get=GetStandardPaths)
    %Property(name=ToolkitVersion, get=GetToolkitVersion)
};  // end of class wxAppTraits



//---------------------------------------------------------------------------

