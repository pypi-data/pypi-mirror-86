//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _html.sip
//
//---------------------------------------------------------------------------

%ModuleHeaderCode
#include <wx/htmllbox.h>
%End


//---------------------------------------------------------------------------

const int wxHLB_DEFAULT_STYLE;
const int wxHLB_MULTIPLE;
const char* wxHtmlListBoxNameStr;

class wxHtmlListBox : wxVListBox
{
    %Docstring
        HtmlListBox(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=HtmlListBoxNameStr)
        HtmlListBox()
        
        wxHtmlListBox is an implementation of wxVListBox which shows HTML
        content in the listbox rows.
    %End
    %TypeHeaderCode
        #include <wx/htmllbox.h>
    %End

public:
    wxHtmlListBox(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxHtmlListBoxNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxHtmlListBox();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    virtual
    ~wxHtmlListBox();

    const wxFileSystem & GetFileSystem() const;
    %Docstring
        GetFileSystem() -> wx.FileSystem
        
        Returns the wxFileSystem used by the HTML parser of this object.
    %End

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        long style = 0,
        const wxString & name = wxHtmlListBoxNameStr
    );
    %Docstring
        Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=HtmlListBoxNameStr) -> bool
        
        Creates the control and optionally sets the initial number of items in
        it (it may also be set or changed later with
        wxVListBox::SetItemCount).
    %End

    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


            protected:
            virtual void OnDrawItem(wxDC& dc, const wxRect& rect, size_t n) const;
            virtual wxCoord OnMeasureItem(size_t n) const;


    public:


    %Property(name=FileSystem, get=GetFileSystem)

protected:
    virtual
    void OnLinkClicked(
        size_t n,
        const wxHtmlLinkInfo & link
    );
    %Docstring
        OnLinkClicked(n, link)
        
        Called when the user clicks on hypertext link.
    %End

    virtual
    wxColour GetSelectedTextBgColour(
        const wxColour & colBg
    ) const;
    %Docstring
        GetSelectedTextBgColour(colBg) -> wx.Colour
        
        This virtual function may be overridden to change the appearance of
        the background of the selected cells in the same way as
        GetSelectedTextColour().
    %End

    virtual
    wxColour GetSelectedTextColour(
        const wxColour & colFg
    ) const;
    %Docstring
        GetSelectedTextColour(colFg) -> wx.Colour
        
        This virtual function may be overridden to customize the appearance of
        the selected cells.
    %End

    virtual
    wxString OnGetItemMarkup(
        size_t n
    ) const;
    %Docstring
        OnGetItemMarkup(n) -> String
        
        This function may be overridden to decorate HTML returned by
        OnGetItem().
    %End

    virtual
    wxString OnGetItem(
        size_t n
    ) const = 0;
    %Docstring
        OnGetItem(n) -> String
        
        This method must be implemented in the derived class and should return
        the body (i.e. without html nor body tags) of the HTML fragment for
        the given item.
    %End

};  // end of class wxHtmlListBox


const char* wxSimpleHtmlListBoxNameStr;

class wxSimpleHtmlListBox : wxHtmlListBox, wxItemContainer
{
    %Docstring
        SimpleHtmlListBox(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, choices=[], style=HLB_DEFAULT_STYLE, validator=wx.DefaultValidator, name=SimpleHtmlListBoxNameStr)
        SimpleHtmlListBox()
        
        wxSimpleHtmlListBox is an implementation of wxHtmlListBox which shows
        HTML content in the listbox rows.
    %End
    %TypeHeaderCode
        #include <wx/htmllbox.h>
    %End

public:
    wxSimpleHtmlListBox(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxArrayString & choices = wxArrayString(),
        long style = wxHLB_DEFAULT_STYLE,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxSimpleHtmlListBoxNameStr
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxSimpleHtmlListBox();
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxSimpleHtmlListBox();

    bool Create(
        wxWindow * parent   /TransferThis/,
        wxWindowID id = wxID_ANY,
        const wxPoint & pos = wxDefaultPosition,
        const wxSize & size = wxDefaultSize,
        const wxArrayString & choices = wxArrayString(),
        long style = wxHLB_DEFAULT_STYLE,
        const wxValidator & validator = wxDefaultValidator,
        const wxString & name = wxSimpleHtmlListBoxNameStr
    );
    %Docstring
        Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, choices=[], style=HLB_DEFAULT_STYLE, validator=wx.DefaultValidator, name=SimpleHtmlListBoxNameStr) -> bool
        
        Creates the HTML listbox for two-step construction.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

            virtual unsigned int GetCount() const;
            virtual wxString GetString(unsigned int n) const;
            virtual void SetString(unsigned int n, const wxString & string);
            virtual void SetSelection(int n);
            virtual int GetSelection() const;
    
            protected:
            virtual wxString OnGetItem(size_t n) const;


};  // end of class wxSimpleHtmlListBox



//---------------------------------------------------------------------------

