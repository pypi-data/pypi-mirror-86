//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxHELP_NETSCAPE;
enum wxHelpSearchMode
{
    wxHELP_SEARCH_INDEX,
    wxHELP_SEARCH_ALL
};

class wxHelpControllerBase : wxObject
{
    %Docstring
        HelpControllerBase(parentWindow=None)
        
        This is the abstract base class a family of classes by which
        applications may invoke a help viewer to provide on-line help.
    %End
    %TypeHeaderCode
        #include <wx/help.h>
    %End

public:
    wxHelpControllerBase(
        wxWindow * parentWindow = NULL
    );

    ~wxHelpControllerBase();

    virtual
    bool DisplayBlock(
        long blockNo
    ) = 0   /Deprecated/;
    %Docstring
        DisplayBlock(blockNo) -> bool
        
        If the help viewer is not running, runs it and displays the file at
        the given block number.
    %End

    virtual
    bool DisplayContents() = 0;
    %Docstring
        DisplayContents() -> bool
        
        If the help viewer is not running, runs it and displays the contents.
    %End

    virtual
    bool DisplayContextPopup(
        int contextId
    );
    %Docstring
        DisplayContextPopup(contextId) -> bool
        
        Displays the section as a popup window using a context id.
    %End

    virtual
    bool DisplaySection(
        const wxString & section
    );
    %Docstring
        DisplaySection(section) -> bool
        DisplaySection(sectionNo) -> bool
        
        If the help viewer is not running, runs it and displays the given
        section.
    %End

    virtual
    bool DisplaySection(
        int sectionNo
    ) = 0;

    virtual
    bool DisplayTextPopup(
        const wxString & text,
        const wxPoint & pos
    );
    %Docstring
        DisplayTextPopup(text, pos) -> bool
        
        Displays the text in a popup window, if possible.
    %End

    virtual
    wxFrame * GetFrameParameters(
        wxSize * size   /Out/ = NULL,
        wxPoint * pos   /Out/ = NULL,
        bool * newFrameEachTime   /Out/ = NULL
    );
    %Docstring
        GetFrameParameters() -> (Frame, size, pos, newFrameEachTime)
        
        For wxHtmlHelpController, returns the latest frame size and position
        settings and whether a new frame is drawn with each invocation.
    %End

    virtual
    wxWindow * GetParentWindow() const;
    %Docstring
        GetParentWindow() -> Window
        
        Returns the window to be used as the parent for the help window.
    %End

    virtual
    bool Initialize(
        const wxString & file
    );
    %Docstring
        Initialize(file) -> bool
        
        Initializes the help instance with a help filename.
    %End

    virtual
    bool KeywordSearch(
        const wxString & keyWord,
        wxHelpSearchMode mode = wxHELP_SEARCH_ALL
    ) = 0;
    %Docstring
        KeywordSearch(keyWord, mode=HELP_SEARCH_ALL) -> bool
        
        If the help viewer is not running, runs it, and searches for sections
        matching the given keyword.
    %End

    virtual
    bool LoadFile(
        const wxString & file = wxEmptyString
    ) = 0;
    %Docstring
        LoadFile(file=EmptyString) -> bool
        
        If the help viewer is not running, runs it and loads the given file.
    %End

    virtual
    void OnQuit();
    %Docstring
        OnQuit()
        
        Overridable member called when this application's viewer is quit by
        the user.
    %End

    virtual
    bool Quit() = 0;
    %Docstring
        Quit() -> bool
        
        If the viewer is running, quits it by disconnecting.
    %End

    virtual
    void SetFrameParameters(
        const wxString & titleFormat,
        const wxSize & size,
        const wxPoint & pos = wxDefaultPosition,
        bool newFrameEachTime = false
    );
    %Docstring
        SetFrameParameters(titleFormat, size, pos=DefaultPosition, newFrameEachTime=False)
        
        Set the parameters of the frame window.
    %End

    virtual
    void SetParentWindow(
        wxWindow * parentWindow
    );
    %Docstring
        SetParentWindow(parentWindow)
        
        Sets the window to be used as the parent for the help window.
    %End

    virtual
    void SetViewer(
        const wxString & viewer,
        long flags = wxHELP_NETSCAPE
    );
    %Docstring
        SetViewer(viewer, flags=HELP_NETSCAPE)
        
        Sets detailed viewer information.
    %End

    public:


    %Property(name=FrameParameters, get=GetFrameParameters, set=SetFrameParameters)
    %Property(name=ParentWindow, get=GetParentWindow, set=SetParentWindow)
};  // end of class wxHelpControllerBase


%Extract(id=pycode_core)
def HelpController(parentWindow=None):
    """
    Rather than being an alias for some class, the Python version of
    ``HelpController`` is a factory function that creates and returns an
    instance of the best Help Controller for the platform.
    """
    try:
        if 'wxMSW' in wx.PlatformInfo:
            from .msw import CHMHelpController as ControllerClass
        else:
            from .html import HtmlHelpController as ControllerClass
    except ImportError:
        from .adv import ExtHelpController as ControllerClass
    
    return ControllerClass(parentWindow)

%End


//---------------------------------------------------------------------------

