//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

const int wxCHOICE_WIDTH;
const int wxCHOICE_HEIGHT;
const int wxCHOICEDLG_STYLE;
class wxMultiChoiceDialog : wxDialog
{
    %Docstring
        MultiChoiceDialog(parent, message, caption, n, choices, style=CHOICEDLG_STYLE, pos=DefaultPosition)
        MultiChoiceDialog(parent, message, caption, choices, style=CHOICEDLG_STYLE, pos=DefaultPosition)
        
        This class represents a dialog that shows a list of strings, and
        allows the user to select one or more.
    %End
    %TypeHeaderCode
        #include <wx/choicdlg.h>
    %End

public:
    wxMultiChoiceDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption,
        int n,
        const wxString * choices,
        long style = wxCHOICEDLG_STYLE,
        const wxPoint & pos = wxDefaultPosition
    )   /Transfer/;
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxMultiChoiceDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption,
        const wxArrayString & choices,
        long style = wxCHOICEDLG_STYLE,
        const wxPoint & pos = wxDefaultPosition
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxArrayInt GetSelections() const;
    %Docstring
        GetSelections() -> ArrayInt
        
        Returns array with indexes of selected items.
    %End

    void SetSelections(
        const wxArrayInt & selections
    );
    %Docstring
        SetSelections(selections)
        
        Sets selected items from the array of selected items' indexes.
    %End

    int ShowModal();
    %Docstring
        ShowModal() -> int
        
        Shows the dialog, returning either wxID_OK or wxID_CANCEL.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Selections, get=GetSelections, set=SetSelections)
};  // end of class wxMultiChoiceDialog


class wxPySingleChoiceDialog : wxDialog   /PyName=SingleChoiceDialog/
{
    %Docstring
        PySingleChoiceDialog(parent, message, caption, choices, style=CHOICEDLG_STYLE, pos=DefaultPosition)
        
        This class represents a dialog that shows a list of strings, and
        allows the user to select one.
    %End
    %TypeHeaderCode
        #include <wx/choicdlg.h>
    %End

    %TypeHeaderCode
        class wxPySingleChoiceDialog : public wxSingleChoiceDialog {
        public:
            wxPySingleChoiceDialog(wxWindow* parent,
                                   const wxString& message,
                                   const wxString& caption,
                                   const wxArrayString& choices,
                                   long style = wxCHOICEDLG_STYLE,
                                   const wxPoint& pos = wxDefaultPosition)
                : wxSingleChoiceDialog(parent, message, caption, choices, (void**)NULL, style, pos)
                {}
        };
    %End
public:
    wxPySingleChoiceDialog(
        wxWindow * parent,
        const wxString & message,
        const wxString & caption,
        const wxArrayString & choices,
        long style = wxCHOICEDLG_STYLE,
        const wxPoint & pos = wxDefaultPosition
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    int GetSelection() const;
    %Docstring
        GetSelection() -> int
        
        Returns the index of selected item.
    %End

    wxString GetStringSelection() const;
    %Docstring
        GetStringSelection() -> String
        
        Returns the selected string.
    %End

    void SetSelection(
        int selection
    );
    %Docstring
        SetSelection(selection)
        
        Sets the index of the initially selected item.
    %End

    int ShowModal();
    %Docstring
        ShowModal() -> int
        
        Shows the dialog, returning either wxID_OK or wxID_CANCEL.
    %End

    public:
    virtual wxPoint GetClientAreaOrigin() const;
    virtual bool Validate();
    virtual bool TransferDataToWindow();
    virtual bool TransferDataFromWindow();
    virtual void InitDialog();
    virtual bool AcceptsFocus() const;
    virtual bool AcceptsFocusRecursively() const;
    virtual bool AcceptsFocusFromKeyboard() const;
    virtual void AddChild( wxWindowBase *child );
    virtual void RemoveChild( wxWindowBase *child );
    virtual void InheritAttributes();
    virtual bool ShouldInheritColours() const;
    virtual void OnInternalIdle();
    virtual wxWindow *GetMainWindowOfCompositeControl();
    virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
    virtual void SetCanFocus(bool canFocus);
    virtual bool Destroy();
    virtual void SetValidator( const wxValidator &validator );
    virtual wxValidator* GetValidator();
    virtual void EnableVisibleFocus(bool enabled);


    protected:
    virtual bool ProcessEvent(wxEvent & event);
    virtual void DoEnable(bool enable);
    virtual void DoGetPosition(int *x, int *y) const;
    virtual void DoGetSize(int *width, int *height) const;
    virtual void DoGetClientSize(int *width, int *height) const;
    virtual wxSize DoGetBestSize() const;
    virtual wxSize DoGetBestClientSize() const;
    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
    virtual void DoSetClientSize(int width, int height);
    virtual void DoSetSizeHints( int minW, int minH, int maxW, int maxH, int incW, int incH );
    virtual wxSize DoGetBorderSize() const;
    virtual void DoMoveWindow(int x, int y, int width, int height);
    virtual void DoSetWindowVariant( wxWindowVariant variant);
    virtual wxBorder GetDefaultBorder() const;
    virtual wxBorder GetDefaultBorderForControl() const;
    virtual void DoFreeze();
    virtual void DoThaw();
    virtual bool HasTransparentBackground();
    virtual bool TryBefore(wxEvent& event);
    virtual bool TryAfter(wxEvent& event);


    public:


    static
    wxVisualAttributes GetClassDefaultAttributes(
        wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
    );
    %Docstring
        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
    %End
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    public:


    %Property(name=Selection, get=GetSelection, set=SetSelection)
    %Property(name=StringSelection, get=GetStringSelection)
};  // end of class wxPySingleChoiceDialog


wxString wxGetSingleChoice(
    const wxString & message,
    const wxString & caption,
    const wxArrayString & aChoices,
    wxWindow * parent = NULL,
    int x = wxDefaultCoord,
    int y = wxDefaultCoord,
    bool centre = true,
    int width = wxCHOICE_WIDTH,
    int height = wxCHOICE_HEIGHT,
    int initialSelection = 0
);
%Docstring
    GetSingleChoice(message, caption, aChoices, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True, width=CHOICE_WIDTH, height=CHOICE_HEIGHT, initialSelection=0) -> String
    GetSingleChoice(message, caption, choices, initialSelection, parent=None) -> String
    
    Pops up a dialog box containing a message, OK/Cancel buttons and a
    single-selection listbox.
%End
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End

wxString wxGetSingleChoice(
    const wxString & message,
    const wxString & caption,
    const wxArrayString & choices,
    int initialSelection,
    wxWindow * parent = NULL
);
%PreMethodCode
    if (!wxPyCheckForApp()) return NULL;
%End




//---------------------------------------------------------------------------

