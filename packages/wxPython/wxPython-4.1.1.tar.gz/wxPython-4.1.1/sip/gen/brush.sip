//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2020 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _core.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

enum wxBrushStyle
{
    wxBRUSHSTYLE_INVALID,
    wxBRUSHSTYLE_SOLID,
    wxBRUSHSTYLE_TRANSPARENT,
    wxBRUSHSTYLE_STIPPLE_MASK_OPAQUE,
    wxBRUSHSTYLE_STIPPLE_MASK,
    wxBRUSHSTYLE_STIPPLE,
    wxBRUSHSTYLE_BDIAGONAL_HATCH,
    wxBRUSHSTYLE_CROSSDIAG_HATCH,
    wxBRUSHSTYLE_FDIAGONAL_HATCH,
    wxBRUSHSTYLE_CROSS_HATCH,
    wxBRUSHSTYLE_HORIZONTAL_HATCH,
    wxBRUSHSTYLE_VERTICAL_HATCH,
    wxBRUSHSTYLE_FIRST_HATCH,
    wxBRUSHSTYLE_LAST_HATCH
};

class wxBrush : wxGDIObject
{
    %Docstring
        Brush()
        Brush(colour, style=BRUSHSTYLE_SOLID)
        Brush(stippleBitmap)
        Brush(brush)
        
        A brush is a drawing tool for filling in areas.
    %End
    %TypeHeaderCode
        #include <wx/brush.h>
    %End

    %TypeCode
        #ifdef __WXMAC__
        #include <wx/osx/private.h>
        #endif
    %End
public:
    wxBrush();

    wxBrush(
        const wxColour & colour,
        wxBrushStyle style = wxBRUSHSTYLE_SOLID
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBrush(
        const wxBitmap & stippleBitmap
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    wxBrush(
        const wxBrush & brush
    );
    %PreMethodCode
        if (!wxPyCheckForApp()) return NULL;
    %End

    ~wxBrush();

    void SetColour(
        const wxColour & colour
    );
    %Docstring
        SetColour(colour)
        SetColour(red, green, blue)
        
        Sets the brush colour using red, green and blue values.
    %End

    void SetColour(
        unsigned char red,
        unsigned char green,
        unsigned char blue
    );

    wxColour GetColour() const;
    %Docstring
        GetColour() -> Colour
        
        Returns a reference to the brush colour.
    %End

    wxBitmap * GetStipple() const;
    %Docstring
        GetStipple() -> Bitmap
        
        Gets a pointer to the stipple bitmap.
    %End

    wxBrushStyle GetStyle() const;
    %Docstring
        GetStyle() -> BrushStyle
        
        Returns the brush style, one of the wxBrushStyle values.
    %End

    bool IsHatch() const;
    %Docstring
        IsHatch() -> bool
        
        Returns true if the style of the brush is any of hatched fills.
    %End

    bool IsOk() const;
    %Docstring
        IsOk() -> bool
        
        Returns true if the brush is initialised.
    %End

    bool IsNonTransparent() const;
    %Docstring
        IsNonTransparent() -> bool
        
        Returns true if the brush is a valid non-transparent brush.
    %End

    bool IsTransparent() const;
    %Docstring
        IsTransparent() -> bool
        
        Returns true if the brush is transparent.
    %End

    void SetStipple(
        const wxBitmap & bitmap
    );
    %Docstring
        SetStipple(bitmap)
        
        Sets the stipple bitmap.
    %End

    void SetStyle(
        wxBrushStyle style
    );
    %Docstring
        SetStyle(style)
        
        Sets the brush style.
    %End

    bool operator!=(
        const wxBrush & brush
    ) const;

    bool operator==(
        const wxBrush & brush
    ) const;

    int __nonzero__();
    %Docstring
        __nonzero__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxBrush___nonzero__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxBrush___nonzero__(wxBrush* self)
    {
        return self->IsOk();
    }
    %End

    int __bool__();
    %Docstring
        __bool__() -> int
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxBrush___bool__(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    int _wxBrush___bool__(wxBrush* self)
    {
        return self->IsOk();
    }
    %End

    void MacSetTheme(int macThemeBrushID);
    %Docstring
        MacSetTheme(macThemeBrushID)
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxBrush_MacSetTheme(sipCpp, macThemeBrushID);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxBrush_MacSetTheme(wxBrush* self, int macThemeBrushID)
    {
        #ifdef __WXMAC__
            self->SetColour(wxColour(wxMacCreateCGColorFromHITheme(macThemeBrushID)));
        #else
            wxPyRaiseNotImplemented();
        #endif
    }
    %End

    public:


    %Property(name=Colour, get=GetColour, set=SetColour)
    %Property(name=Stipple, get=GetStipple, set=SetStipple)
    %Property(name=Style, get=GetStyle, set=SetStyle)
    void _copyFrom(const wxBrush* other);
    %Docstring
        _copyFrom(other)
        
        For internal use only.
    %End
    %MethodCode
        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxBrush__copyFrom(sipCpp, other);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
    %End
    %TypeCode
    void _wxBrush__copyFrom(wxBrush* self, const wxBrush* other)
    {
        *self = *other;
    }
    %End

};  // end of class wxBrush


class wxBrushList
{
    %Docstring
        A brush list is a list containing all brushes which have been created.
    %End
    %TypeHeaderCode
        #include <wx/brush.h>
    %End

public:
    wxBrush * FindOrCreateBrush(
        const wxColour & colour,
        wxBrushStyle style = wxBRUSHSTYLE_SOLID
    );
    %Docstring
        FindOrCreateBrush(colour, style=BRUSHSTYLE_SOLID) -> Brush
        
        Finds a brush with the specified attributes and returns it, else
        creates a new brush, adds it to the brush list, and returns it.
    %End

};  // end of class wxBrushList


wxBrush wxNullBrush;

%Extract(id=pycode_core)
# These stock brushes will be initialized when the wx.App object is created.
BLUE_BRUSH = Brush()
GREEN_BRUSH = Brush()
YELLOW_BRUSH = Brush()
WHITE_BRUSH = Brush()
BLACK_BRUSH = Brush()
GREY_BRUSH = Brush()
MEDIUM_GREY_BRUSH = Brush()
LIGHT_GREY_BRUSH = Brush()
TRANSPARENT_BRUSH = Brush()
CYAN_BRUSH = Brush()
RED_BRUSH = Brush()

%End

%Extract(id=pycode_core)
wx.STIPPLE_MASK_OPAQUE = int(wx.BRUSHSTYLE_STIPPLE_MASK_OPAQUE)
wx.STIPPLE_MASK        = int(wx.BRUSHSTYLE_STIPPLE_MASK)
wx.STIPPLE             = int(wx.BRUSHSTYLE_STIPPLE)
wx.BDIAGONAL_HATCH     = int(wx.BRUSHSTYLE_BDIAGONAL_HATCH)
wx.CROSSDIAG_HATCH     = int(wx.BRUSHSTYLE_CROSSDIAG_HATCH)
wx.FDIAGONAL_HATCH     = int(wx.BRUSHSTYLE_FDIAGONAL_HATCH)
wx.CROSS_HATCH         = int(wx.BRUSHSTYLE_CROSS_HATCH)
wx.HORIZONTAL_HATCH    = int(wx.BRUSHSTYLE_HORIZONTAL_HATCH)
wx.VERTICAL_HATCH      = int(wx.BRUSHSTYLE_VERTICAL_HATCH)

%End


//---------------------------------------------------------------------------

