/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_grid.h"

        #include <wx/grid.h>

        #include <wx/object.h>
        #include <wx/grid.h>
        #include <wx/kbdstate.h>
        #include <wx/event.h>
        #include <wx/object.h>
        #include <wx/object.h>


class sipwxGridRangeSelectEvent : public  ::wxGridRangeSelectEvent
{
public:
    sipwxGridRangeSelectEvent();
    sipwxGridRangeSelectEvent(int, ::wxEventType, ::wxObject*,const  ::wxGridCellCoords&,const  ::wxGridCellCoords&,bool,const  ::wxKeyboardState&);
    sipwxGridRangeSelectEvent(const  ::wxGridRangeSelectEvent&);
    virtual ~sipwxGridRangeSelectEvent();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::wxEvent* Clone() const SIP_OVERRIDE;
     ::wxEventCategory GetEventCategory() const SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxGridRangeSelectEvent(const sipwxGridRangeSelectEvent &);
    sipwxGridRangeSelectEvent &operator = (const sipwxGridRangeSelectEvent &);

    char sipPyMethods[2];
};

sipwxGridRangeSelectEvent::sipwxGridRangeSelectEvent():  ::wxGridRangeSelectEvent(), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxGridRangeSelectEvent::sipwxGridRangeSelectEvent(int id, ::wxEventType type, ::wxObject*obj,const  ::wxGridCellCoords& topLeft,const  ::wxGridCellCoords& bottomRight,bool sel,const  ::wxKeyboardState& kbd):  ::wxGridRangeSelectEvent(id,type,obj,topLeft,bottomRight,sel,kbd), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxGridRangeSelectEvent::sipwxGridRangeSelectEvent(const  ::wxGridRangeSelectEvent& a0):  ::wxGridRangeSelectEvent(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxGridRangeSelectEvent::~sipwxGridRangeSelectEvent()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::wxEvent* sipwxGridRangeSelectEvent::Clone() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,SIP_NULLPTR,sipName_Clone);

    if (!sipMeth)
        return  ::wxGridRangeSelectEvent::Clone();

    extern  ::wxEvent* sipVH__grid_68(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__grid_68(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxEventCategory sipwxGridRangeSelectEvent::GetEventCategory() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,SIP_NULLPTR,sipName_GetEventCategory);

    if (!sipMeth)
        return  ::wxGridRangeSelectEvent::GetEventCategory();

    extern  ::wxEventCategory sipVH__grid_67(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__grid_67(sipGILState, 0, sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_AltDown, "AltDown() -> bool\n"
"\n"
"Returns true if the Alt key was down at the time of the event.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_AltDown(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_AltDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->AltDown();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_AltDown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_ControlDown, "ControlDown() -> bool\n"
"\n"
"Returns true if the Control key was down at the time of the event.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_ControlDown(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_ControlDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->ControlDown();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_ControlDown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetBottomRightCoords, "GetBottomRightCoords() -> GridCellCoords\n"
"\n"
"Top left corner of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetBottomRightCoords(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetBottomRightCoords(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
             ::wxGridCellCoords*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxGridCellCoords(sipCpp->GetBottomRightCoords());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxGridCellCoords,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetBottomRightCoords, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetBottomRow, "GetBottomRow() -> int\n"
"\n"
"Bottom row of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetBottomRow(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetBottomRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetBottomRow();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetBottomRow, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetLeftCol, "GetLeftCol() -> int\n"
"\n"
"Left column of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetLeftCol(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetLeftCol(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetLeftCol();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetLeftCol, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetRightCol, "GetRightCol() -> int\n"
"\n"
"Right column of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetRightCol(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetRightCol(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetRightCol();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetRightCol, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetTopLeftCoords, "GetTopLeftCoords() -> GridCellCoords\n"
"\n"
"Top left corner of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetTopLeftCoords(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetTopLeftCoords(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
             ::wxGridCellCoords*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxGridCellCoords(sipCpp->GetTopLeftCoords());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxGridCellCoords,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetTopLeftCoords, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_GetTopRow, "GetTopRow() -> int\n"
"\n"
"Top row of the rectangular area that was (de)selected.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_GetTopRow(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_GetTopRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetTopRow();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_GetTopRow, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_MetaDown, "MetaDown() -> bool\n"
"\n"
"Returns true if the Meta key was down at the time of the event.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_MetaDown(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_MetaDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->MetaDown();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_MetaDown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_Selecting, "Selecting() -> bool\n"
"\n"
"Returns true if the area was selected, false otherwise.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_Selecting(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_Selecting(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->Selecting();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_Selecting, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_ShiftDown, "ShiftDown() -> bool\n"
"\n"
"Returns true if the Shift key was down at the time of the event.");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_ShiftDown(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_ShiftDown(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->ShiftDown();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_ShiftDown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxGridRangeSelectEvent_Clone, "Clone(self) -> Event");

extern "C" {static PyObject *meth_wxGridRangeSelectEvent_Clone(PyObject *, PyObject *);}
static PyObject *meth_wxGridRangeSelectEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxGridRangeSelectEvent *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxGridRangeSelectEvent, &sipCpp))
        {
             ::wxEvent*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxGridRangeSelectEvent::Clone() : sipCpp->Clone());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxEvent,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_GridRangeSelectEvent, sipName_Clone, doc_wxGridRangeSelectEvent_Clone);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxGridRangeSelectEvent(void *, const sipTypeDef *);}
static void *cast_wxGridRangeSelectEvent(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxGridRangeSelectEvent *sipCpp = reinterpret_cast< ::wxGridRangeSelectEvent *>(sipCppV);

    if (targetType == sipType_wxNotifyEvent)
        return static_cast< ::wxNotifyEvent *>(sipCpp);

    if (targetType == sipType_wxCommandEvent)
        return static_cast< ::wxCommandEvent *>(sipCpp);

    if (targetType == sipType_wxEvent)
        return static_cast< ::wxEvent *>(sipCpp);

    if (targetType == sipType_wxObject)
        return static_cast< ::wxObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxGridRangeSelectEvent(void *, int);}
static void release_wxGridRangeSelectEvent(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxGridRangeSelectEvent *>(sipCppV);
    else
        delete reinterpret_cast< ::wxGridRangeSelectEvent *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxGridRangeSelectEvent(sipSimpleWrapper *);}
static void dealloc_wxGridRangeSelectEvent(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxGridRangeSelectEvent *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxGridRangeSelectEvent(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxGridRangeSelectEvent(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxGridRangeSelectEvent(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxGridRangeSelectEvent *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxGridRangeSelectEvent();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        int id;
         ::wxEventType type;
         ::wxObject* obj;
        const  ::wxGridCellCoords* topLeft;
        int topLeftState = 0;
        const  ::wxGridCellCoords* bottomRight;
        int bottomRightState = 0;
        bool sel = 1;
        const  ::wxKeyboardState& kbddef = wxKeyboardState();
        const  ::wxKeyboardState* kbd = &kbddef;

        static const char *sipKwdList[] = {
            sipName_id,
            sipName_type,
            sipName_obj,
            sipName_topLeft,
            sipName_bottomRight,
            sipName_sel,
            sipName_kbd,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "iiJ8J1J1|bJ9", &id, &type, sipType_wxObject, &obj, sipType_wxGridCellCoords, &topLeft, &topLeftState, sipType_wxGridCellCoords, &bottomRight, &bottomRightState, &sel, sipType_wxKeyboardState, &kbd))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxGridRangeSelectEvent(id,type,obj,*topLeft,*bottomRight,sel,*kbd);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxGridCellCoords *>(topLeft),sipType_wxGridCellCoords,topLeftState);
            sipReleaseType(const_cast< ::wxGridCellCoords *>(bottomRight),sipType_wxGridCellCoords,bottomRightState);

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::wxGridRangeSelectEvent* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_wxGridRangeSelectEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxGridRangeSelectEvent(*a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxGridRangeSelectEvent[] = {{17, 0, 1}};


static PyMethodDef methods_wxGridRangeSelectEvent[] = {
    {SIP_MLNAME_CAST(sipName_AltDown), meth_wxGridRangeSelectEvent_AltDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_AltDown)},
    {SIP_MLNAME_CAST(sipName_Clone), meth_wxGridRangeSelectEvent_Clone, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_Clone)},
    {SIP_MLNAME_CAST(sipName_ControlDown), meth_wxGridRangeSelectEvent_ControlDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_ControlDown)},
    {SIP_MLNAME_CAST(sipName_GetBottomRightCoords), meth_wxGridRangeSelectEvent_GetBottomRightCoords, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetBottomRightCoords)},
    {SIP_MLNAME_CAST(sipName_GetBottomRow), meth_wxGridRangeSelectEvent_GetBottomRow, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetBottomRow)},
    {SIP_MLNAME_CAST(sipName_GetLeftCol), meth_wxGridRangeSelectEvent_GetLeftCol, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetLeftCol)},
    {SIP_MLNAME_CAST(sipName_GetRightCol), meth_wxGridRangeSelectEvent_GetRightCol, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetRightCol)},
    {SIP_MLNAME_CAST(sipName_GetTopLeftCoords), meth_wxGridRangeSelectEvent_GetTopLeftCoords, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetTopLeftCoords)},
    {SIP_MLNAME_CAST(sipName_GetTopRow), meth_wxGridRangeSelectEvent_GetTopRow, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_GetTopRow)},
    {SIP_MLNAME_CAST(sipName_MetaDown), meth_wxGridRangeSelectEvent_MetaDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_MetaDown)},
    {SIP_MLNAME_CAST(sipName_Selecting), meth_wxGridRangeSelectEvent_Selecting, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_Selecting)},
    {SIP_MLNAME_CAST(sipName_ShiftDown), meth_wxGridRangeSelectEvent_ShiftDown, METH_VARARGS, SIP_MLDOC_CAST(doc_wxGridRangeSelectEvent_ShiftDown)}
};

sipVariableDef variables_wxGridRangeSelectEvent[] = {
    {PropertyVariable, sipName_TopRow, &methods_wxGridRangeSelectEvent[8], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_TopLeftCoords, &methods_wxGridRangeSelectEvent[7], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_RightCol, &methods_wxGridRangeSelectEvent[6], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_LeftCol, &methods_wxGridRangeSelectEvent[5], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_BottomRow, &methods_wxGridRangeSelectEvent[4], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_BottomRightCoords, &methods_wxGridRangeSelectEvent[3], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxGridRangeSelectEvent, "GridRangeSelectEvent()\n"
"GridRangeSelectEvent(id, type, obj, topLeft, bottomRight, sel=True, kbd=wx.KeyboardState())\n"
"\n"
"Events of this class notify about a range of cells being selected.");


sipClassTypeDef sipTypeDef__grid_wxGridRangeSelectEvent = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxGridRangeSelectEvent,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_GridRangeSelectEvent,
        {0, 0, 1},
        12, methods_wxGridRangeSelectEvent,
        0, SIP_NULLPTR,
        6, variables_wxGridRangeSelectEvent,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxGridRangeSelectEvent,
    -1,
    -1,
    supers_wxGridRangeSelectEvent,
    SIP_NULLPTR,
    init_type_wxGridRangeSelectEvent,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxGridRangeSelectEvent,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_wxGridRangeSelectEvent,
    cast_wxGridRangeSelectEvent,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
