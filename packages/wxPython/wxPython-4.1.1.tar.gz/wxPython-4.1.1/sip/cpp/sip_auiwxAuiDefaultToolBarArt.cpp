/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_aui.h"

        #include <wx/aui/auibar.h>

        #include <wx/window.h>
        #include <wx/gdicmn.h>
        #include <wx/dc.h>
        #include <wx/aui/auibar.h>
        #include <wx/gdicmn.h>
        #include <wx/font.h>
        #include <wx/aui/auibar.h>


class sipwxAuiDefaultToolBarArt : public  ::wxAuiDefaultToolBarArt
{
public:
    sipwxAuiDefaultToolBarArt();
    sipwxAuiDefaultToolBarArt(const  ::wxAuiDefaultToolBarArt&);
    virtual ~sipwxAuiDefaultToolBarArt();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::wxAuiToolBarArt* Clone() SIP_OVERRIDE;
    void SetFlags(uint) SIP_OVERRIDE;
    uint GetFlags() SIP_OVERRIDE;
    void SetFont(const  ::wxFont&) SIP_OVERRIDE;
     ::wxFont GetFont() SIP_OVERRIDE;
    void SetTextOrientation(int) SIP_OVERRIDE;
    int GetTextOrientation() SIP_OVERRIDE;
    void DrawBackground( ::wxDC&, ::wxWindow*,const  ::wxRect&) SIP_OVERRIDE;
    void DrawPlainBackground( ::wxDC&, ::wxWindow*,const  ::wxRect&) SIP_OVERRIDE;
    void DrawLabel( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&) SIP_OVERRIDE;
    void DrawButton( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&) SIP_OVERRIDE;
    void DrawDropDownButton( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&) SIP_OVERRIDE;
    void DrawControlLabel( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&) SIP_OVERRIDE;
    void DrawSeparator( ::wxDC&, ::wxWindow*,const  ::wxRect&) SIP_OVERRIDE;
    void DrawGripper( ::wxDC&, ::wxWindow*,const  ::wxRect&) SIP_OVERRIDE;
    void DrawOverflowButton( ::wxDC&, ::wxWindow*,const  ::wxRect&,int) SIP_OVERRIDE;
     ::wxSize GetLabelSize( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&) SIP_OVERRIDE;
     ::wxSize GetToolSize( ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&) SIP_OVERRIDE;
    int GetElementSize(int) SIP_OVERRIDE;
    void SetElementSize(int,int) SIP_OVERRIDE;
    int ShowDropDown( ::wxWindow*,const  ::wxAuiToolBarItemArray&) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxAuiDefaultToolBarArt(const sipwxAuiDefaultToolBarArt &);
    sipwxAuiDefaultToolBarArt &operator = (const sipwxAuiDefaultToolBarArt &);

    char sipPyMethods[21];
};

sipwxAuiDefaultToolBarArt::sipwxAuiDefaultToolBarArt():  ::wxAuiDefaultToolBarArt(), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxAuiDefaultToolBarArt::sipwxAuiDefaultToolBarArt(const  ::wxAuiDefaultToolBarArt& a0):  ::wxAuiDefaultToolBarArt(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxAuiDefaultToolBarArt::~sipwxAuiDefaultToolBarArt()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::wxAuiToolBarArt* sipwxAuiDefaultToolBarArt::Clone()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,SIP_NULLPTR,sipName_Clone);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::Clone();

    extern  ::wxAuiToolBarArt* sipVH__aui_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__aui_37(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxAuiDefaultToolBarArt::SetFlags(uint flags)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,SIP_NULLPTR,sipName_SetFlags);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::SetFlags(flags);
        return;
    }

    extern void sipVH__aui_38(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, uint);

    sipVH__aui_38(sipGILState, 0, sipPySelf, sipMeth, flags);
}

uint sipwxAuiDefaultToolBarArt::GetFlags()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,SIP_NULLPTR,sipName_GetFlags);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetFlags();

    extern uint sipVH__aui_39(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__aui_39(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxAuiDefaultToolBarArt::SetFont(const  ::wxFont& font)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,SIP_NULLPTR,sipName_SetFont);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::SetFont(font);
        return;
    }

    extern void sipVH__aui_40(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxFont&);

    sipVH__aui_40(sipGILState, 0, sipPySelf, sipMeth, font);
}

 ::wxFont sipwxAuiDefaultToolBarArt::GetFont()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,SIP_NULLPTR,sipName_GetFont);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetFont();

    extern  ::wxFont sipVH__aui_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__aui_41(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxAuiDefaultToolBarArt::SetTextOrientation(int orientation)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,SIP_NULLPTR,sipName_SetTextOrientation);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::SetTextOrientation(orientation);
        return;
    }

    extern void sipVH__aui_42(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH__aui_42(sipGILState, 0, sipPySelf, sipMeth, orientation);
}

int sipwxAuiDefaultToolBarArt::GetTextOrientation()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,SIP_NULLPTR,sipName_GetTextOrientation);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetTextOrientation();

    extern int sipVH__aui_43(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__aui_43(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxAuiDefaultToolBarArt::DrawBackground( ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,SIP_NULLPTR,sipName_DrawBackground);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawBackground(dc,wnd,rect);
        return;
    }

    extern void sipVH__aui_44(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxRect&);

    sipVH__aui_44(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, rect);
}

void sipwxAuiDefaultToolBarArt::DrawPlainBackground( ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,SIP_NULLPTR,sipName_DrawPlainBackground);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawPlainBackground(dc,wnd,rect);
        return;
    }

    extern void sipVH__aui_44(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxRect&);

    sipVH__aui_44(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, rect);
}

void sipwxAuiDefaultToolBarArt::DrawLabel( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,SIP_NULLPTR,sipName_DrawLabel);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawLabel(dc,wnd,item,rect);
        return;
    }

    extern void sipVH__aui_45(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&);

    sipVH__aui_45(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item, rect);
}

void sipwxAuiDefaultToolBarArt::DrawButton( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,SIP_NULLPTR,sipName_DrawButton);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawButton(dc,wnd,item,rect);
        return;
    }

    extern void sipVH__aui_45(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&);

    sipVH__aui_45(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item, rect);
}

void sipwxAuiDefaultToolBarArt::DrawDropDownButton( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,SIP_NULLPTR,sipName_DrawDropDownButton);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawDropDownButton(dc,wnd,item,rect);
        return;
    }

    extern void sipVH__aui_45(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&);

    sipVH__aui_45(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item, rect);
}

void sipwxAuiDefaultToolBarArt::DrawControlLabel( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,SIP_NULLPTR,sipName_DrawControlLabel);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawControlLabel(dc,wnd,item,rect);
        return;
    }

    extern void sipVH__aui_45(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&,const  ::wxRect&);

    sipVH__aui_45(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item, rect);
}

void sipwxAuiDefaultToolBarArt::DrawSeparator( ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,SIP_NULLPTR,sipName_DrawSeparator);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawSeparator(dc,wnd,rect);
        return;
    }

    extern void sipVH__aui_44(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxRect&);

    sipVH__aui_44(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, rect);
}

void sipwxAuiDefaultToolBarArt::DrawGripper( ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,SIP_NULLPTR,sipName_DrawGripper);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawGripper(dc,wnd,rect);
        return;
    }

    extern void sipVH__aui_44(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxRect&);

    sipVH__aui_44(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, rect);
}

void sipwxAuiDefaultToolBarArt::DrawOverflowButton( ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect,int state)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,SIP_NULLPTR,sipName_DrawOverflowButton);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::DrawOverflowButton(dc,wnd,rect,state);
        return;
    }

    extern void sipVH__aui_46(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxRect&,int);

    sipVH__aui_46(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, rect, state);
}

 ::wxSize sipwxAuiDefaultToolBarArt::GetLabelSize( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,SIP_NULLPTR,sipName_GetLabelSize);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetLabelSize(dc,wnd,item);

    extern  ::wxSize sipVH__aui_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&);

    return sipVH__aui_47(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item);
}

 ::wxSize sipwxAuiDefaultToolBarArt::GetToolSize( ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,SIP_NULLPTR,sipName_GetToolSize);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetToolSize(dc,wnd,item);

    extern  ::wxSize sipVH__aui_47(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&, ::wxWindow*,const  ::wxAuiToolBarItem&);

    return sipVH__aui_47(sipGILState, 0, sipPySelf, sipMeth, dc, wnd, item);
}

int sipwxAuiDefaultToolBarArt::GetElementSize(int element)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,SIP_NULLPTR,sipName_GetElementSize);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::GetElementSize(element);

    extern int sipVH__aui_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH__aui_34(sipGILState, 0, sipPySelf, sipMeth, element);
}

void sipwxAuiDefaultToolBarArt::SetElementSize(int element_id,int size)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,SIP_NULLPTR,sipName_SetElementSize);

    if (!sipMeth)
    {
         ::wxAuiDefaultToolBarArt::SetElementSize(element_id,size);
        return;
    }

    extern void sipVH__aui_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH__aui_21(sipGILState, 0, sipPySelf, sipMeth, element_id, size);
}

int sipwxAuiDefaultToolBarArt::ShowDropDown( ::wxWindow*wnd,const  ::wxAuiToolBarItemArray& items)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,SIP_NULLPTR,sipName_ShowDropDown);

    if (!sipMeth)
        return  ::wxAuiDefaultToolBarArt::ShowDropDown(wnd,items);

    extern int sipVH__aui_48(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxWindow*,const  ::wxAuiToolBarItemArray&);

    return sipVH__aui_48(sipGILState, 0, sipPySelf, sipMeth, wnd, items);
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_Clone, "Clone() -> AuiToolBarArt");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_Clone(PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_Clone(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxAuiDefaultToolBarArt *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp))
        {
             ::wxAuiToolBarArt*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::Clone() : sipCpp->Clone());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxAuiToolBarArt,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_Clone, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_SetFlags, "SetFlags(flags)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_SetFlags(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_SetFlags(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        uint flags;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bu", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, &flags))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::SetFlags(flags) : sipCpp->SetFlags(flags));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_SetFlags, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetFlags, "GetFlags() -> unsignedint");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetFlags(PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxAuiDefaultToolBarArt *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp))
        {
            uint sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetFlags() : sipCpp->GetFlags());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetFlags, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_SetFont, "SetFont(font)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_SetFont(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_SetFont(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxFont* font;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_font,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxFont, &font))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::SetFont(*font) : sipCpp->SetFont(*font));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_SetFont, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetFont, "GetFont() -> wx.Font");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetFont(PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxAuiDefaultToolBarArt *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp))
        {
             ::wxFont*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxFont((sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetFont() : sipCpp->GetFont()));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxFont,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetFont, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_SetTextOrientation, "SetTextOrientation(orientation)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_SetTextOrientation(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_SetTextOrientation(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int orientation;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_orientation,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, &orientation))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::SetTextOrientation(orientation) : sipCpp->SetTextOrientation(orientation));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_SetTextOrientation, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetTextOrientation, "GetTextOrientation() -> int");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetTextOrientation(PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetTextOrientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxAuiDefaultToolBarArt *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetTextOrientation() : sipCpp->GetTextOrientation());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetTextOrientation, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawBackground, "DrawBackground(dc, wnd, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawBackground(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawBackground(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawBackground(*dc,wnd,*rect) : sipCpp->DrawBackground(*dc,wnd,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawBackground, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawPlainBackground, "DrawPlainBackground(dc, wnd, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawPlainBackground(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawPlainBackground(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawPlainBackground(*dc,wnd,*rect) : sipCpp->DrawPlainBackground(*dc,wnd,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawPlainBackground, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawLabel, "DrawLabel(dc, wnd, item, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawLabel(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawLabel(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawLabel(*dc,wnd,*item,*rect) : sipCpp->DrawLabel(*dc,wnd,*item,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawButton, "DrawButton(dc, wnd, item, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawButton(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawButton(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawButton(*dc,wnd,*item,*rect) : sipCpp->DrawButton(*dc,wnd,*item,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawDropDownButton, "DrawDropDownButton(dc, wnd, item, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawDropDownButton(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawDropDownButton(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawDropDownButton(*dc,wnd,*item,*rect) : sipCpp->DrawDropDownButton(*dc,wnd,*item,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawDropDownButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawControlLabel, "DrawControlLabel(dc, wnd, item, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawControlLabel(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawControlLabel(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawControlLabel(*dc,wnd,*item,*rect) : sipCpp->DrawControlLabel(*dc,wnd,*item,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawControlLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawSeparator, "DrawSeparator(dc, wnd, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawSeparator(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawSeparator(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawSeparator(*dc,wnd,*rect) : sipCpp->DrawSeparator(*dc,wnd,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawSeparator, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawGripper, "DrawGripper(dc, wnd, rect)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawGripper(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawGripper(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxRect* rect;
        int rectState = 0;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J1", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxRect, &rect, &rectState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawGripper(*dc,wnd,*rect) : sipCpp->DrawGripper(*dc,wnd,*rect));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawGripper, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_DrawOverflowButton, "DrawOverflowButton(dc, wnd, rect, state)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_DrawOverflowButton(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_DrawOverflowButton(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxRect* rect;
        int rectState = 0;
        int state;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_rect,
            sipName_state,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J1i", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxRect, &rect, &rectState, &state))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::DrawOverflowButton(*dc,wnd,*rect,state) : sipCpp->DrawOverflowButton(*dc,wnd,*rect,state));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_DrawOverflowButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetLabelSize, "GetLabelSize(dc, wnd, item) -> wx.Size");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetLabelSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetLabelSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item))
        {
             ::wxSize*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize((sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetLabelSize(*dc,wnd,*item) : sipCpp->GetLabelSize(*dc,wnd,*item)));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetLabelSize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetToolSize, "GetToolSize(dc, wnd, item) -> wx.Size");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetToolSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetToolSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItem* item;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_wnd,
            sipName_item,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J8J9", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxDC, &dc, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItem, &item))
        {
             ::wxSize*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize((sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetToolSize(*dc,wnd,*item) : sipCpp->GetToolSize(*dc,wnd,*item)));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetToolSize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_GetElementSize, "GetElementSize(element) -> int");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_GetElementSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_GetElementSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int element;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_element,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, &element))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::GetElementSize(element) : sipCpp->GetElementSize(element));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_GetElementSize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_SetElementSize, "SetElementSize(element_id, size)");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_SetElementSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_SetElementSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int element_id;
        int size;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_element_id,
            sipName_size,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bii", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, &element_id, &size))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::SetElementSize(element_id,size) : sipCpp->SetElementSize(element_id,size));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_SetElementSize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt_ShowDropDown, "ShowDropDown(wnd, items) -> int");

extern "C" {static PyObject *meth_wxAuiDefaultToolBarArt_ShowDropDown(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxAuiDefaultToolBarArt_ShowDropDown(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxWindow* wnd;
        const  ::wxAuiToolBarItemArray* items;
         ::wxAuiDefaultToolBarArt *sipCpp;

        static const char *sipKwdList[] = {
            sipName_wnd,
            sipName_items,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8J9", &sipSelf, sipType_wxAuiDefaultToolBarArt, &sipCpp, sipType_wxWindow, &wnd, sipType_wxAuiToolBarItemArray, &items))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxAuiDefaultToolBarArt::ShowDropDown(wnd,*items) : sipCpp->ShowDropDown(wnd,*items));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_AuiDefaultToolBarArt, sipName_ShowDropDown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxAuiDefaultToolBarArt(void *, const sipTypeDef *);}
static void *cast_wxAuiDefaultToolBarArt(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxAuiDefaultToolBarArt *sipCpp = reinterpret_cast< ::wxAuiDefaultToolBarArt *>(sipCppV);

    if (targetType == sipType_wxAuiToolBarArt)
        return static_cast< ::wxAuiToolBarArt *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxAuiDefaultToolBarArt(void *, int);}
static void release_wxAuiDefaultToolBarArt(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxAuiDefaultToolBarArt *>(sipCppV);
    else
        delete reinterpret_cast< ::wxAuiDefaultToolBarArt *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void *array_wxAuiDefaultToolBarArt(Py_ssize_t);}
static void *array_wxAuiDefaultToolBarArt(Py_ssize_t sipNrElem)
{
    return new  ::wxAuiDefaultToolBarArt[sipNrElem];
}


extern "C" {static void assign_wxAuiDefaultToolBarArt(void *, SIP_SSIZE_T, void *);}
static void assign_wxAuiDefaultToolBarArt(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::wxAuiDefaultToolBarArt *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::wxAuiDefaultToolBarArt *>(sipSrc);
}


extern "C" {static void *copy_wxAuiDefaultToolBarArt(const void *, SIP_SSIZE_T);}
static void *copy_wxAuiDefaultToolBarArt(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::wxAuiDefaultToolBarArt(reinterpret_cast<const  ::wxAuiDefaultToolBarArt *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxAuiDefaultToolBarArt(sipSimpleWrapper *);}
static void dealloc_wxAuiDefaultToolBarArt(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxAuiDefaultToolBarArt *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxAuiDefaultToolBarArt(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxAuiDefaultToolBarArt(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxAuiDefaultToolBarArt(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxAuiDefaultToolBarArt *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxAuiDefaultToolBarArt();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::wxAuiDefaultToolBarArt* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_wxAuiDefaultToolBarArt, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxAuiDefaultToolBarArt(*a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxAuiDefaultToolBarArt[] = {{36, 255, 1}};


static PyMethodDef methods_wxAuiDefaultToolBarArt[] = {
    {SIP_MLNAME_CAST(sipName_Clone), meth_wxAuiDefaultToolBarArt_Clone, METH_VARARGS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_Clone)},
    {SIP_MLNAME_CAST(sipName_DrawBackground), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawBackground), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawBackground)},
    {SIP_MLNAME_CAST(sipName_DrawButton), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawButton), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawButton)},
    {SIP_MLNAME_CAST(sipName_DrawControlLabel), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawControlLabel), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawControlLabel)},
    {SIP_MLNAME_CAST(sipName_DrawDropDownButton), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawDropDownButton), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawDropDownButton)},
    {SIP_MLNAME_CAST(sipName_DrawGripper), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawGripper), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawGripper)},
    {SIP_MLNAME_CAST(sipName_DrawLabel), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawLabel), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawLabel)},
    {SIP_MLNAME_CAST(sipName_DrawOverflowButton), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawOverflowButton), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawOverflowButton)},
    {SIP_MLNAME_CAST(sipName_DrawPlainBackground), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawPlainBackground), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawPlainBackground)},
    {SIP_MLNAME_CAST(sipName_DrawSeparator), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_DrawSeparator), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_DrawSeparator)},
    {SIP_MLNAME_CAST(sipName_GetElementSize), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_GetElementSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetElementSize)},
    {SIP_MLNAME_CAST(sipName_GetFlags), meth_wxAuiDefaultToolBarArt_GetFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetFlags)},
    {SIP_MLNAME_CAST(sipName_GetFont), meth_wxAuiDefaultToolBarArt_GetFont, METH_VARARGS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetFont)},
    {SIP_MLNAME_CAST(sipName_GetLabelSize), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_GetLabelSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetLabelSize)},
    {SIP_MLNAME_CAST(sipName_GetTextOrientation), meth_wxAuiDefaultToolBarArt_GetTextOrientation, METH_VARARGS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetTextOrientation)},
    {SIP_MLNAME_CAST(sipName_GetToolSize), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_GetToolSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_GetToolSize)},
    {SIP_MLNAME_CAST(sipName_SetElementSize), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_SetElementSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_SetElementSize)},
    {SIP_MLNAME_CAST(sipName_SetFlags), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_SetFlags), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_SetFlags)},
    {SIP_MLNAME_CAST(sipName_SetFont), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_SetFont), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_SetFont)},
    {SIP_MLNAME_CAST(sipName_SetTextOrientation), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_SetTextOrientation), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_SetTextOrientation)},
    {SIP_MLNAME_CAST(sipName_ShowDropDown), SIP_MLMETH_CAST(meth_wxAuiDefaultToolBarArt_ShowDropDown), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxAuiDefaultToolBarArt_ShowDropDown)}
};

sipVariableDef variables_wxAuiDefaultToolBarArt[] = {
    {PropertyVariable, sipName_TextOrientation, &methods_wxAuiDefaultToolBarArt[14], &methods_wxAuiDefaultToolBarArt[19], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Font, &methods_wxAuiDefaultToolBarArt[12], &methods_wxAuiDefaultToolBarArt[18], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Flags, &methods_wxAuiDefaultToolBarArt[11], &methods_wxAuiDefaultToolBarArt[17], SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxAuiDefaultToolBarArt, "AuiDefaultToolBarArt()\n"
"\n"
"wxAuiDefaultToolBarArt is part of the wxAUI class framework.");


sipClassTypeDef sipTypeDef__aui_wxAuiDefaultToolBarArt = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_wxAuiDefaultToolBarArt,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_AuiDefaultToolBarArt,
        {0, 0, 1},
        21, methods_wxAuiDefaultToolBarArt,
        0, SIP_NULLPTR,
        3, variables_wxAuiDefaultToolBarArt,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxAuiDefaultToolBarArt,
    -1,
    -1,
    supers_wxAuiDefaultToolBarArt,
    SIP_NULLPTR,
    init_type_wxAuiDefaultToolBarArt,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxAuiDefaultToolBarArt,
    assign_wxAuiDefaultToolBarArt,
    array_wxAuiDefaultToolBarArt,
    copy_wxAuiDefaultToolBarArt,
    release_wxAuiDefaultToolBarArt,
    cast_wxAuiDefaultToolBarArt,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
