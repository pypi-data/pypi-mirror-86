/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_adv.h"

        #include <wx/odcombo.h>

        #include <wx/window.h>
        #include <wx/gdicmn.h>
        #include <wx/gdicmn.h>
        #include <wx/validate.h>
        #include <wx/dc.h>
        #include <wx/gdicmn.h>
        #include <wx/combo.h>
        #include <wx/window.h>
        #include <wx/event.h>
        #include <wx/bitmap.h>
        #include <wx/textctrl.h>
        #include <wx/event.h>
        #include <wx/event.h>
        #include <wx/event.h>
    #include <wx/setup.h>
    #include <wxPython/wxpy_api.h>
        #include <wx/event.h>
        #include <wx/cursor.h>
        #include <wx/caret.h>
        #include <wx/layout.h>
        #include <wx/sizer.h>
        #include <wx/dnd.h>
        #include <wx/access.h>
        #include <wx/accel.h>
        #include <wx/menu.h>
        #include <wx/tooltip.h>
        #include <wx/event.h>
        #include <wx/event.h>
        #include <wx/palette.h>
        #include <wx/colour.h>
        #include <wx/font.h>
        #include <wx/region.h>
        
        
        #include <wx/eventfilter.h>
        #include <wx/object.h>
        #include <wx/object.h>
        #include <wx/object.h>
        #include <wx/textcompleter.h>


class sipwxOwnerDrawnComboBox : public  ::wxOwnerDrawnComboBox
{
public:
    sipwxOwnerDrawnComboBox();
    sipwxOwnerDrawnComboBox( ::wxWindow*, ::wxWindowID,const  ::wxString&,const  ::wxPoint&,const  ::wxSize&,const  ::wxArrayString&,long,const  ::wxValidator&,const  ::wxString&);
    virtual ~sipwxOwnerDrawnComboBox();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtect_SendDestroyEvent();
    bool sipProtectVirt_AnimateShow(bool,const  ::wxRect&,int);
    bool sipProtectVirt_ProcessEvent(bool, ::wxEvent&);
    void sipProtectVirt_DoEnable(bool,bool);
    void sipProtectVirt_DoGetPosition(bool,int*,int*) const;
    void sipProtectVirt_DoGetSize(bool,int*,int*) const;
    void sipProtectVirt_DoGetClientSize(bool,int*,int*) const;
     ::wxSize sipProtectVirt_DoGetBestSize(bool) const;
     ::wxSize sipProtectVirt_DoGetBestClientSize(bool) const;
    void sipProtectVirt_DoSetSize(bool,int,int,int,int,int);
    void sipProtectVirt_DoSetClientSize(bool,int,int);
    void sipProtectVirt_DoSetSizeHints(bool,int,int,int,int,int,int);
     ::wxSize sipProtectVirt_DoGetBorderSize(bool) const;
    void sipProtectVirt_DoMoveWindow(bool,int,int,int,int);
    void sipProtectVirt_DoSetWindowVariant(bool, ::wxWindowVariant);
     ::wxBorder sipProtectVirt_GetDefaultBorder(bool) const;
     ::wxBorder sipProtectVirt_GetDefaultBorderForControl(bool) const;
    void sipProtectVirt_DoFreeze(bool);
    void sipProtectVirt_DoThaw(bool);
    bool sipProtectVirt_HasTransparentBackground(bool);
    bool sipProtectVirt_TryBefore(bool, ::wxEvent&);
    bool sipProtectVirt_TryAfter(bool, ::wxEvent&);
    void sipProtectVirt_DoSetPopupControl(bool, ::wxComboPopup*);
    void sipProtectVirt_DoShowPopup(bool,const  ::wxRect&,int);
    void sipProtectVirt_OnDrawBackground(bool, ::wxDC&,const  ::wxRect&,int,int) const;
    void sipProtectVirt_OnDrawItem(bool, ::wxDC&,const  ::wxRect&,int,int) const;
     ::wxCoord sipProtectVirt_OnMeasureItem(bool,size_t) const;
     ::wxCoord sipProtectVirt_OnMeasureItemWidth(bool,size_t) const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::wxCoord OnMeasureItemWidth(size_t) const SIP_OVERRIDE;
     ::wxCoord OnMeasureItem(size_t) const SIP_OVERRIDE;
    void OnDrawItem( ::wxDC&,const  ::wxRect&,int,int) const SIP_OVERRIDE;
    void OnDrawBackground( ::wxDC&,const  ::wxRect&,int,int) const SIP_OVERRIDE;
     ::wxString GetStringSelection() const SIP_OVERRIDE;
    int GetSelection() const SIP_OVERRIDE;
    void SetSelection(int) SIP_OVERRIDE;
    int FindString(const  ::wxString&,bool) const SIP_OVERRIDE;
    void SetString(uint,const  ::wxString&) SIP_OVERRIDE;
     ::wxString GetString(uint) const SIP_OVERRIDE;
    uint GetCount() const SIP_OVERRIDE;
    void RemoveChild( ::wxWindowBase*) SIP_OVERRIDE;
    void AddChild( ::wxWindowBase*) SIP_OVERRIDE;
    bool ProcessEvent( ::wxEvent&) SIP_OVERRIDE;
    bool TryBefore( ::wxEvent&) SIP_OVERRIDE;
    bool TryAfter( ::wxEvent&) SIP_OVERRIDE;
    bool AcceptsFocus() const SIP_OVERRIDE;
    bool AcceptsFocusFromKeyboard() const SIP_OVERRIDE;
    bool AcceptsFocusRecursively() const SIP_OVERRIDE;
    void SetCanFocus(bool) SIP_OVERRIDE;
    void EnableVisibleFocus(bool) SIP_OVERRIDE;
    bool InformFirstDirection(int,int,int) SIP_OVERRIDE;
     ::wxPoint GetClientAreaOrigin() const SIP_OVERRIDE;
    bool HasTransparentBackground() SIP_OVERRIDE;
    bool ShouldInheritColours() const SIP_OVERRIDE;
     ::wxValidator* GetValidator() SIP_OVERRIDE;
    void SetValidator(const  ::wxValidator&) SIP_OVERRIDE;
    bool TransferDataFromWindow() SIP_OVERRIDE;
    bool TransferDataToWindow() SIP_OVERRIDE;
    bool Validate() SIP_OVERRIDE;
    bool Destroy() SIP_OVERRIDE;
    void InheritAttributes() SIP_OVERRIDE;
    void InitDialog() SIP_OVERRIDE;
    void OnInternalIdle() SIP_OVERRIDE;
     ::wxWindow* GetMainWindowOfCompositeControl() SIP_OVERRIDE;
    void DoEnable(bool) SIP_OVERRIDE;
    void DoGetPosition(int*,int*) const SIP_OVERRIDE;
    void DoGetSize(int*,int*) const SIP_OVERRIDE;
    void DoGetClientSize(int*,int*) const SIP_OVERRIDE;
    void DoSetSize(int,int,int,int,int) SIP_OVERRIDE;
    void DoSetClientSize(int,int) SIP_OVERRIDE;
    void DoSetSizeHints(int,int,int,int,int,int) SIP_OVERRIDE;
     ::wxSize DoGetBorderSize() const SIP_OVERRIDE;
    void DoMoveWindow(int,int,int,int) SIP_OVERRIDE;
    void DoSetWindowVariant( ::wxWindowVariant) SIP_OVERRIDE;
     ::wxBorder GetDefaultBorder() const SIP_OVERRIDE;
     ::wxBorder GetDefaultBorderForControl() const SIP_OVERRIDE;
    void DoFreeze() SIP_OVERRIDE;
    void DoThaw() SIP_OVERRIDE;
     ::wxSize DoGetBestSize() const SIP_OVERRIDE;
     ::wxSize DoGetBestClientSize() const SIP_OVERRIDE;
    void Undo() SIP_OVERRIDE;
    void Redo() SIP_OVERRIDE;
    void Paste() SIP_OVERRIDE;
    void Cut() SIP_OVERRIDE;
    void Copy() SIP_OVERRIDE;
    bool CanUndo() const SIP_OVERRIDE;
    bool CanRedo() const SIP_OVERRIDE;
    bool CanPaste() const SIP_OVERRIDE;
    bool CanCut() const SIP_OVERRIDE;
    bool CanCopy() const SIP_OVERRIDE;
    void Dismiss() SIP_OVERRIDE;
    bool IsKeyPopupToggle(const  ::wxKeyEvent&) const SIP_OVERRIDE;
    void HidePopup(bool) SIP_OVERRIDE;
    void OnButtonClick() SIP_OVERRIDE;
    void ShowPopup() SIP_OVERRIDE;
    bool AnimateShow(const  ::wxRect&,int) SIP_OVERRIDE;
    void DoSetPopupControl( ::wxComboPopup*) SIP_OVERRIDE;
    void DoShowPopup(const  ::wxRect&,int) SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxOwnerDrawnComboBox(const sipwxOwnerDrawnComboBox &);
    sipwxOwnerDrawnComboBox &operator = (const sipwxOwnerDrawnComboBox &);

    char sipPyMethods[69];
};

sipwxOwnerDrawnComboBox::sipwxOwnerDrawnComboBox():  ::wxOwnerDrawnComboBox(), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxOwnerDrawnComboBox::sipwxOwnerDrawnComboBox( ::wxWindow*parent, ::wxWindowID id,const  ::wxString& value,const  ::wxPoint& pos,const  ::wxSize& size,const  ::wxArrayString& choices,long style,const  ::wxValidator& validator,const  ::wxString& name):  ::wxOwnerDrawnComboBox(parent,id,value,pos,size,choices,style,validator,name), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxOwnerDrawnComboBox::~sipwxOwnerDrawnComboBox()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::wxCoord sipwxOwnerDrawnComboBox::OnMeasureItemWidth(size_t item) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,SIP_NULLPTR,sipName_OnMeasureItemWidth);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::OnMeasureItemWidth(item);

    extern  ::wxCoord sipVH__adv_60(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, size_t);

    return sipVH__adv_60(sipGILState, 0, sipPySelf, sipMeth, item);
}

 ::wxCoord sipwxOwnerDrawnComboBox::OnMeasureItem(size_t item) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,SIP_NULLPTR,sipName_OnMeasureItem);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::OnMeasureItem(item);

    extern  ::wxCoord sipVH__adv_60(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, size_t);

    return sipVH__adv_60(sipGILState, 0, sipPySelf, sipMeth, item);
}

void sipwxOwnerDrawnComboBox::OnDrawItem( ::wxDC& dc,const  ::wxRect& rect,int item,int flags) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,SIP_NULLPTR,sipName_OnDrawItem);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::OnDrawItem(dc,rect,item,flags);
        return;
    }

    extern void sipVH__adv_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&,const  ::wxRect&,int,int);

    sipVH__adv_59(sipGILState, 0, sipPySelf, sipMeth, dc, rect, item, flags);
}

void sipwxOwnerDrawnComboBox::OnDrawBackground( ::wxDC& dc,const  ::wxRect& rect,int item,int flags) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,SIP_NULLPTR,sipName_OnDrawBackground);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::OnDrawBackground(dc,rect,item,flags);
        return;
    }

    extern void sipVH__adv_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxDC&,const  ::wxRect&,int,int);

    sipVH__adv_59(sipGILState, 0, sipPySelf, sipMeth, dc, rect, item, flags);
}

 ::wxString sipwxOwnerDrawnComboBox::GetStringSelection() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,SIP_NULLPTR,sipName_GetStringSelection);

    if (!sipMeth)
    {
         ::wxString sipRes;

                sipRes = wxItemContainerImmutable::GetStringSelection();

        return sipRes;
    }

    extern  ::wxString sipVH__adv_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_29(sipGILState, 0, sipPySelf, sipMeth);
}

int sipwxOwnerDrawnComboBox::GetSelection() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,SIP_NULLPTR,sipName_GetSelection);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetSelection();

    extern int sipVH__adv_58(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_58(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::SetSelection(int n)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,SIP_NULLPTR,sipName_SetSelection);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::SetSelection(n);
        return;
    }

    extern void sipVH__adv_57(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH__adv_57(sipGILState, 0, sipPySelf, sipMeth, n);
}

int sipwxOwnerDrawnComboBox::FindString(const  ::wxString& string,bool caseSensitive) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,SIP_NULLPTR,sipName_FindString);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::FindString(string,caseSensitive);

    extern int sipVH__adv_56(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxString&,bool);

    return sipVH__adv_56(sipGILState, 0, sipPySelf, sipMeth, string, caseSensitive);
}

void sipwxOwnerDrawnComboBox::SetString(uint n,const  ::wxString& s)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,SIP_NULLPTR,sipName_SetString);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::SetString(n,s);
        return;
    }

    extern void sipVH__adv_55(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, uint,const  ::wxString&);

    sipVH__adv_55(sipGILState, 0, sipPySelf, sipMeth, n, s);
}

 ::wxString sipwxOwnerDrawnComboBox::GetString(uint n) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,SIP_NULLPTR,sipName_GetString);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetString(n);

    extern  ::wxString sipVH__adv_54(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, uint);

    return sipVH__adv_54(sipGILState, 0, sipPySelf, sipMeth, n);
}

uint sipwxOwnerDrawnComboBox::GetCount() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,SIP_NULLPTR,sipName_GetCount);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetCount();

    extern uint sipVH__adv_53(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_53(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::RemoveChild( ::wxWindowBase*child)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,SIP_NULLPTR,sipName_RemoveChild);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::RemoveChild(child);
        return;
    }

    extern void sipVH__adv_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxWindowBase*);

    sipVH__adv_12(sipGILState, 0, sipPySelf, sipMeth, child);
}

void sipwxOwnerDrawnComboBox::AddChild( ::wxWindowBase*child)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,SIP_NULLPTR,sipName_AddChild);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::AddChild(child);
        return;
    }

    extern void sipVH__adv_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxWindowBase*);

    sipVH__adv_12(sipGILState, 0, sipPySelf, sipMeth, child);
}

bool sipwxOwnerDrawnComboBox::ProcessEvent( ::wxEvent& event)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,SIP_NULLPTR,sipName_ProcessEvent);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::ProcessEvent(event);

    extern bool sipVH__adv_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxEvent&);

    return sipVH__adv_13(sipGILState, 0, sipPySelf, sipMeth, event);
}

bool sipwxOwnerDrawnComboBox::TryBefore( ::wxEvent& event)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,SIP_NULLPTR,sipName_TryBefore);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::TryBefore(event);

    extern bool sipVH__adv_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxEvent&);

    return sipVH__adv_13(sipGILState, 0, sipPySelf, sipMeth, event);
}

bool sipwxOwnerDrawnComboBox::TryAfter( ::wxEvent& event)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,SIP_NULLPTR,sipName_TryAfter);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::TryAfter(event);

    extern bool sipVH__adv_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxEvent&);

    return sipVH__adv_13(sipGILState, 0, sipPySelf, sipMeth, event);
}

bool sipwxOwnerDrawnComboBox::AcceptsFocus() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[16]),sipPySelf,SIP_NULLPTR,sipName_AcceptsFocus);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::AcceptsFocus();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::AcceptsFocusFromKeyboard() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,SIP_NULLPTR,sipName_AcceptsFocusFromKeyboard);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::AcceptsFocusFromKeyboard();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::AcceptsFocusRecursively() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[18]),sipPySelf,SIP_NULLPTR,sipName_AcceptsFocusRecursively);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::AcceptsFocusRecursively();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::SetCanFocus(bool canFocus)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,SIP_NULLPTR,sipName_SetCanFocus);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::SetCanFocus(canFocus);
        return;
    }

    extern void sipVH__adv_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH__adv_14(sipGILState, 0, sipPySelf, sipMeth, canFocus);
}

void sipwxOwnerDrawnComboBox::EnableVisibleFocus(bool enabled)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,SIP_NULLPTR,sipName_EnableVisibleFocus);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::EnableVisibleFocus(enabled);
        return;
    }

    extern void sipVH__adv_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH__adv_14(sipGILState, 0, sipPySelf, sipMeth, enabled);
}

bool sipwxOwnerDrawnComboBox::InformFirstDirection(int direction,int size,int availableOtherDir)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,SIP_NULLPTR,sipName_InformFirstDirection);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::InformFirstDirection(direction,size,availableOtherDir);

    extern bool sipVH__adv_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,int);

    return sipVH__adv_15(sipGILState, 0, sipPySelf, sipMeth, direction, size, availableOtherDir);
}

 ::wxPoint sipwxOwnerDrawnComboBox::GetClientAreaOrigin() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,SIP_NULLPTR,sipName_GetClientAreaOrigin);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetClientAreaOrigin();

    extern  ::wxPoint sipVH__adv_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_16(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::HasTransparentBackground()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,SIP_NULLPTR,sipName_HasTransparentBackground);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::HasTransparentBackground();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::ShouldInheritColours() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,SIP_NULLPTR,sipName_ShouldInheritColours);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::ShouldInheritColours();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxValidator* sipwxOwnerDrawnComboBox::GetValidator()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,SIP_NULLPTR,sipName_GetValidator);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetValidator();

    extern  ::wxValidator* sipVH__adv_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_17(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::SetValidator(const  ::wxValidator& validator)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,SIP_NULLPTR,sipName_SetValidator);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::SetValidator(validator);
        return;
    }

    extern void sipVH__adv_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxValidator&);

    sipVH__adv_18(sipGILState, 0, sipPySelf, sipMeth, validator);
}

bool sipwxOwnerDrawnComboBox::TransferDataFromWindow()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,SIP_NULLPTR,sipName_TransferDataFromWindow);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::TransferDataFromWindow();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::TransferDataToWindow()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,SIP_NULLPTR,sipName_TransferDataToWindow);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::TransferDataToWindow();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::Validate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,SIP_NULLPTR,sipName_Validate);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::Validate();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::Destroy()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,SIP_NULLPTR,sipName_Destroy);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::Destroy();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::InheritAttributes()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,SIP_NULLPTR,sipName_InheritAttributes);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::InheritAttributes();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::InitDialog()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,SIP_NULLPTR,sipName_InitDialog);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::InitDialog();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::OnInternalIdle()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,SIP_NULLPTR,sipName_OnInternalIdle);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::OnInternalIdle();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxWindow* sipwxOwnerDrawnComboBox::GetMainWindowOfCompositeControl()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,SIP_NULLPTR,sipName_GetMainWindowOfCompositeControl);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetMainWindowOfCompositeControl();

    extern  ::wxWindow* sipVH__adv_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_7(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::DoEnable(bool enable)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,SIP_NULLPTR,sipName_DoEnable);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoEnable(enable);
        return;
    }

    extern void sipVH__adv_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH__adv_14(sipGILState, 0, sipPySelf, sipMeth, enable);
}

void sipwxOwnerDrawnComboBox::DoGetPosition(int*x,int*y) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,SIP_NULLPTR,sipName_DoGetPosition);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoGetPosition(x,y);
        return;
    }

    extern void sipVH__adv_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int*,int*);

    sipVH__adv_19(sipGILState, 0, sipPySelf, sipMeth, x, y);
}

void sipwxOwnerDrawnComboBox::DoGetSize(int*width,int*height) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[37]),sipPySelf,SIP_NULLPTR,sipName_DoGetSize);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoGetSize(width,height);
        return;
    }

    extern void sipVH__adv_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int*,int*);

    sipVH__adv_19(sipGILState, 0, sipPySelf, sipMeth, width, height);
}

void sipwxOwnerDrawnComboBox::DoGetClientSize(int*width,int*height) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[38]),sipPySelf,SIP_NULLPTR,sipName_DoGetClientSize);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoGetClientSize(width,height);
        return;
    }

    extern void sipVH__adv_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int*,int*);

    sipVH__adv_19(sipGILState, 0, sipPySelf, sipMeth, width, height);
}

void sipwxOwnerDrawnComboBox::DoSetSize(int x,int y,int width,int height,int sizeFlags)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,SIP_NULLPTR,sipName_DoSetSize);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoSetSize(x,y,width,height,sizeFlags);
        return;
    }

    extern void sipVH__adv_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,int,int,int);

    sipVH__adv_20(sipGILState, 0, sipPySelf, sipMeth, x, y, width, height, sizeFlags);
}

void sipwxOwnerDrawnComboBox::DoSetClientSize(int width,int height)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,SIP_NULLPTR,sipName_DoSetClientSize);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoSetClientSize(width,height);
        return;
    }

    extern void sipVH__adv_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH__adv_21(sipGILState, 0, sipPySelf, sipMeth, width, height);
}

void sipwxOwnerDrawnComboBox::DoSetSizeHints(int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,SIP_NULLPTR,sipName_DoSetSizeHints);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoSetSizeHints(minW,minH,maxW,maxH,incW,incH);
        return;
    }

    extern void sipVH__adv_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,int,int,int,int);

    sipVH__adv_22(sipGILState, 0, sipPySelf, sipMeth, minW, minH, maxW, maxH, incW, incH);
}

 ::wxSize sipwxOwnerDrawnComboBox::DoGetBorderSize() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[42]),sipPySelf,SIP_NULLPTR,sipName_DoGetBorderSize);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::DoGetBorderSize();

    extern  ::wxSize sipVH__adv_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_23(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::DoMoveWindow(int x,int y,int width,int height)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,SIP_NULLPTR,sipName_DoMoveWindow);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoMoveWindow(x,y,width,height);
        return;
    }

    extern void sipVH__adv_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int,int,int);

    sipVH__adv_24(sipGILState, 0, sipPySelf, sipMeth, x, y, width, height);
}

void sipwxOwnerDrawnComboBox::DoSetWindowVariant( ::wxWindowVariant variant)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,SIP_NULLPTR,sipName_DoSetWindowVariant);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoSetWindowVariant(variant);
        return;
    }

    extern void sipVH__adv_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxWindowVariant);

    sipVH__adv_25(sipGILState, 0, sipPySelf, sipMeth, variant);
}

 ::wxBorder sipwxOwnerDrawnComboBox::GetDefaultBorder() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[45]),sipPySelf,SIP_NULLPTR,sipName_GetDefaultBorder);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetDefaultBorder();

    extern  ::wxBorder sipVH__adv_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_26(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxBorder sipwxOwnerDrawnComboBox::GetDefaultBorderForControl() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[46]),sipPySelf,SIP_NULLPTR,sipName_GetDefaultBorderForControl);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::GetDefaultBorderForControl();

    extern  ::wxBorder sipVH__adv_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_26(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::DoFreeze()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,SIP_NULLPTR,sipName_DoFreeze);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoFreeze();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::DoThaw()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,SIP_NULLPTR,sipName_DoThaw);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoThaw();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxSize sipwxOwnerDrawnComboBox::DoGetBestSize() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[49]),sipPySelf,SIP_NULLPTR,sipName_DoGetBestSize);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::DoGetBestSize();

    extern  ::wxSize sipVH__adv_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_23(sipGILState, 0, sipPySelf, sipMeth);
}

 ::wxSize sipwxOwnerDrawnComboBox::DoGetBestClientSize() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[50]),sipPySelf,SIP_NULLPTR,sipName_DoGetBestClientSize);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::DoGetBestClientSize();

    extern  ::wxSize sipVH__adv_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_23(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Undo()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[51],sipPySelf,SIP_NULLPTR,sipName_Undo);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Undo();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Redo()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[52],sipPySelf,SIP_NULLPTR,sipName_Redo);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Redo();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Paste()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[53],sipPySelf,SIP_NULLPTR,sipName_Paste);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Paste();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Cut()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[54],sipPySelf,SIP_NULLPTR,sipName_Cut);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Cut();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Copy()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[55],sipPySelf,SIP_NULLPTR,sipName_Copy);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Copy();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::CanUndo() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[56]),sipPySelf,SIP_NULLPTR,sipName_CanUndo);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::CanUndo();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::CanRedo() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[57]),sipPySelf,SIP_NULLPTR,sipName_CanRedo);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::CanRedo();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::CanPaste() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[58]),sipPySelf,SIP_NULLPTR,sipName_CanPaste);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::CanPaste();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::CanCut() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[59]),sipPySelf,SIP_NULLPTR,sipName_CanCut);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::CanCut();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::CanCopy() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[60]),sipPySelf,SIP_NULLPTR,sipName_CanCopy);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::CanCopy();

    extern bool sipVH__adv_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__adv_3(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::Dismiss()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[61],sipPySelf,SIP_NULLPTR,sipName_Dismiss);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::Dismiss();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::IsKeyPopupToggle(const  ::wxKeyEvent& event) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[62]),sipPySelf,SIP_NULLPTR,sipName_IsKeyPopupToggle);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::IsKeyPopupToggle(event);

    extern bool sipVH__adv_52(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxKeyEvent&);

    return sipVH__adv_52(sipGILState, 0, sipPySelf, sipMeth, event);
}

void sipwxOwnerDrawnComboBox::HidePopup(bool generateEvent)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[63],sipPySelf,SIP_NULLPTR,sipName_HidePopup);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::HidePopup(generateEvent);
        return;
    }

    extern void sipVH__adv_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH__adv_14(sipGILState, 0, sipPySelf, sipMeth, generateEvent);
}

void sipwxOwnerDrawnComboBox::OnButtonClick()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[64],sipPySelf,SIP_NULLPTR,sipName_OnButtonClick);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::OnButtonClick();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxOwnerDrawnComboBox::ShowPopup()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[65],sipPySelf,SIP_NULLPTR,sipName_ShowPopup);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::ShowPopup();
        return;
    }

    extern void sipVH__adv_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__adv_4(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxOwnerDrawnComboBox::AnimateShow(const  ::wxRect& rect,int flags)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[66],sipPySelf,SIP_NULLPTR,sipName_AnimateShow);

    if (!sipMeth)
        return  ::wxOwnerDrawnComboBox::AnimateShow(rect,flags);

    extern bool sipVH__adv_51(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxRect&,int);

    return sipVH__adv_51(sipGILState, 0, sipPySelf, sipMeth, rect, flags);
}

void sipwxOwnerDrawnComboBox::DoSetPopupControl( ::wxComboPopup*popup)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[67],sipPySelf,SIP_NULLPTR,sipName_DoSetPopupControl);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoSetPopupControl(popup);
        return;
    }

    extern void sipVH__adv_50(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::wxComboPopup*);

    sipVH__adv_50(sipGILState, 0, sipPySelf, sipMeth, popup);
}

void sipwxOwnerDrawnComboBox::DoShowPopup(const  ::wxRect& rect,int flags)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[68],sipPySelf,SIP_NULLPTR,sipName_DoShowPopup);

    if (!sipMeth)
    {
         ::wxOwnerDrawnComboBox::DoShowPopup(rect,flags);
        return;
    }

    extern void sipVH__adv_49(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::wxRect&,int);

    sipVH__adv_49(sipGILState, 0, sipPySelf, sipMeth, rect, flags);
}

void sipwxOwnerDrawnComboBox::sipProtect_SendDestroyEvent()
{
     ::wxWindow::SendDestroyEvent();
}

bool sipwxOwnerDrawnComboBox::sipProtectVirt_AnimateShow(bool sipSelfWasArg,const  ::wxRect& rect,int flags)
{
    return (sipSelfWasArg ?  ::wxComboCtrl::AnimateShow(rect,flags) : AnimateShow(rect,flags));
}

bool sipwxOwnerDrawnComboBox::sipProtectVirt_ProcessEvent(bool sipSelfWasArg, ::wxEvent& event)
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::ProcessEvent(event) : ProcessEvent(event));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoEnable(bool sipSelfWasArg,bool enable)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoEnable(enable) : DoEnable(enable));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetPosition(bool sipSelfWasArg,int*x,int*y) const
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetPosition(x,y) : DoGetPosition(x,y));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetSize(bool sipSelfWasArg,int*width,int*height) const
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetSize(width,height) : DoGetSize(width,height));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetClientSize(bool sipSelfWasArg,int*width,int*height) const
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetClientSize(width,height) : DoGetClientSize(width,height));
}

 ::wxSize sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetBestSize(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetBestSize() : DoGetBestSize());
}

 ::wxSize sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetBestClientSize(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetBestClientSize() : DoGetBestClientSize());
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoSetSize(bool sipSelfWasArg,int x,int y,int width,int height,int sizeFlags)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoSetSize(x,y,width,height,sizeFlags) : DoSetSize(x,y,width,height,sizeFlags));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoSetClientSize(bool sipSelfWasArg,int width,int height)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoSetClientSize(width,height) : DoSetClientSize(width,height));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoSetSizeHints(bool sipSelfWasArg,int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoSetSizeHints(minW,minH,maxW,maxH,incW,incH) : DoSetSizeHints(minW,minH,maxW,maxH,incW,incH));
}

 ::wxSize sipwxOwnerDrawnComboBox::sipProtectVirt_DoGetBorderSize(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoGetBorderSize() : DoGetBorderSize());
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoMoveWindow(bool sipSelfWasArg,int x,int y,int width,int height)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoMoveWindow(x,y,width,height) : DoMoveWindow(x,y,width,height));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoSetWindowVariant(bool sipSelfWasArg, ::wxWindowVariant variant)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoSetWindowVariant(variant) : DoSetWindowVariant(variant));
}

 ::wxBorder sipwxOwnerDrawnComboBox::sipProtectVirt_GetDefaultBorder(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::GetDefaultBorder() : GetDefaultBorder());
}

 ::wxBorder sipwxOwnerDrawnComboBox::sipProtectVirt_GetDefaultBorderForControl(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::GetDefaultBorderForControl() : GetDefaultBorderForControl());
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoFreeze(bool sipSelfWasArg)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoFreeze() : DoFreeze());
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoThaw(bool sipSelfWasArg)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoThaw() : DoThaw());
}

bool sipwxOwnerDrawnComboBox::sipProtectVirt_HasTransparentBackground(bool sipSelfWasArg)
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::HasTransparentBackground() : HasTransparentBackground());
}

bool sipwxOwnerDrawnComboBox::sipProtectVirt_TryBefore(bool sipSelfWasArg, ::wxEvent& event)
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::TryBefore(event) : TryBefore(event));
}

bool sipwxOwnerDrawnComboBox::sipProtectVirt_TryAfter(bool sipSelfWasArg, ::wxEvent& event)
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::TryAfter(event) : TryAfter(event));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoSetPopupControl(bool sipSelfWasArg, ::wxComboPopup*popup)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoSetPopupControl(popup) : DoSetPopupControl(popup));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_DoShowPopup(bool sipSelfWasArg,const  ::wxRect& rect,int flags)
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::DoShowPopup(rect,flags) : DoShowPopup(rect,flags));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_OnDrawBackground(bool sipSelfWasArg, ::wxDC& dc,const  ::wxRect& rect,int item,int flags) const
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::OnDrawBackground(dc,rect,item,flags) : OnDrawBackground(dc,rect,item,flags));
}

void sipwxOwnerDrawnComboBox::sipProtectVirt_OnDrawItem(bool sipSelfWasArg, ::wxDC& dc,const  ::wxRect& rect,int item,int flags) const
{
    (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::OnDrawItem(dc,rect,item,flags) : OnDrawItem(dc,rect,item,flags));
}

 ::wxCoord sipwxOwnerDrawnComboBox::sipProtectVirt_OnMeasureItem(bool sipSelfWasArg,size_t item) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::OnMeasureItem(item) : OnMeasureItem(item));
}

 ::wxCoord sipwxOwnerDrawnComboBox::sipProtectVirt_OnMeasureItemWidth(bool sipSelfWasArg,size_t item) const
{
    return (sipSelfWasArg ?  ::wxOwnerDrawnComboBox::OnMeasureItemWidth(item) : OnMeasureItemWidth(item));
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SendDestroyEvent, "SendDestroyEvent()\n"
"\n"
"Generate wxWindowDestroyEvent for this window.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SendDestroyEvent(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_SendDestroyEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_SendDestroyEvent();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_SendDestroyEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AnimateShow, "AnimateShow(rect, flags) -> bool\n"
"\n"
"This member function is not normally called in application code.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AnimateShow(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_AnimateShow(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxRect* rect;
        int rectState = 0;
        int flags;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1i", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxRect, &rect, &rectState, &flags))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_AnimateShow(sipSelfWasArg,*rect,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_AnimateShow, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_Create, "Create(parent, id=wx.ID_ANY, value=wx.EmptyString, pos=wx.DefaultPosition, size=wx.DefaultSize, choices=[], style=0, validator=wx.DefaultValidator, name=wx.ComboBoxNameStr) -> bool\n"
"\n"
"Creates the combobox for two-step construction.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_Create(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* parent;
         ::wxWindowID id = wxID_ANY;
        const  ::wxString& valuedef = wxEmptyString;
        const  ::wxString* value = &valuedef;
        int valueState = 0;
        const  ::wxPoint& posdef = wxDefaultPosition;
        const  ::wxPoint* pos = &posdef;
        int posState = 0;
        const  ::wxSize& sizedef = wxDefaultSize;
        const  ::wxSize* size = &sizedef;
        int sizeState = 0;
        const  ::wxArrayString& choicesdef = wxArrayString();
        const  ::wxArrayString* choices = &choicesdef;
        int choicesState = 0;
        long style = 0;
        const  ::wxValidator& validatordef = wxDefaultValidator;
        const  ::wxValidator* validator = &validatordef;
        const  ::wxString& namedef = wxComboBoxNameStr;
        const  ::wxString* name = &namedef;
        int nameState = 0;
        sipWrapper *sipOwner = SIP_NULLPTR;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_id,
            sipName_value,
            sipName_pos,
            sipName_size,
            sipName_choices,
            sipName_style,
            sipName_validator,
            sipName_name,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJH|iJ1J1J1J1lJ9J1", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxWindow, &parent, &sipOwner, &id, sipType_wxString,&value, &valueState, sipType_wxPoint, &pos, &posState, sipType_wxSize, &size, &sizeState, sipType_wxArrayString,&choices, &choicesState, &style, sipType_wxValidator, &validator, sipType_wxString,&name, &nameState))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->Create(parent,id,*value,*pos,*size,*choices,style,*validator,*name);
            Py_END_ALLOW_THREADS

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);
            sipReleaseType(const_cast< ::wxString *>(value),sipType_wxString,valueState);
            sipReleaseType(const_cast< ::wxPoint *>(pos),sipType_wxPoint,posState);
            sipReleaseType(const_cast< ::wxSize *>(size),sipType_wxSize,sizeState);
            sipReleaseType(const_cast< ::wxArrayString *>(choices),sipType_wxArrayString,choicesState);
            sipReleaseType(const_cast< ::wxString *>(name),sipType_wxString,nameState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_Create, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_IsListEmpty, "IsListEmpty() -> bool\n"
"\n"
"Returns true if the list of combobox choices is empty.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_IsListEmpty(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_IsListEmpty(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsListEmpty();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_IsListEmpty, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_IsTextEmpty, "IsTextEmpty() -> bool\n"
"\n"
"Returns true if the text of the combobox is empty.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_IsTextEmpty(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_IsTextEmpty(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsTextEmpty();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_IsTextEmpty, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetWidestItem, "GetWidestItem() -> int\n"
"\n"
"Returns index to the widest item in the list.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetWidestItem(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetWidestItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetWidestItem();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetWidestItem, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetWidestItemWidth, "GetWidestItemWidth() -> int\n"
"\n"
"Returns width of the widest item in the list.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetWidestItemWidth(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetWidestItemWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetWidestItemWidth();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetWidestItemWidth, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetClientAreaOrigin, "GetClientAreaOrigin(self) -> Point");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetClientAreaOrigin(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetClientAreaOrigin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxPoint*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxPoint((sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetClientAreaOrigin() : sipCpp->GetClientAreaOrigin()));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxPoint,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetClientAreaOrigin, doc_wxOwnerDrawnComboBox_GetClientAreaOrigin);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_Validate, "Validate(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_Validate(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_Validate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::Validate() : sipCpp->Validate());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_Validate, doc_wxOwnerDrawnComboBox_Validate);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_TransferDataToWindow, "TransferDataToWindow(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_TransferDataToWindow(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_TransferDataToWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::TransferDataToWindow() : sipCpp->TransferDataToWindow());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_TransferDataToWindow, doc_wxOwnerDrawnComboBox_TransferDataToWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_TransferDataFromWindow, "TransferDataFromWindow(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_TransferDataFromWindow(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_TransferDataFromWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::TransferDataFromWindow() : sipCpp->TransferDataFromWindow());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_TransferDataFromWindow, doc_wxOwnerDrawnComboBox_TransferDataFromWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_InitDialog, "InitDialog(self)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_InitDialog(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_InitDialog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::InitDialog() : sipCpp->InitDialog());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_InitDialog, doc_wxOwnerDrawnComboBox_InitDialog);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AcceptsFocus, "AcceptsFocus(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocus(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::AcceptsFocus() : sipCpp->AcceptsFocus());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_AcceptsFocus, doc_wxOwnerDrawnComboBox_AcceptsFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AcceptsFocusRecursively, "AcceptsFocusRecursively(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocusRecursively(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocusRecursively(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::AcceptsFocusRecursively() : sipCpp->AcceptsFocusRecursively());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_AcceptsFocusRecursively, doc_wxOwnerDrawnComboBox_AcceptsFocusRecursively);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard, "AcceptsFocusFromKeyboard(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::AcceptsFocusFromKeyboard() : sipCpp->AcceptsFocusFromKeyboard());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_AcceptsFocusFromKeyboard, doc_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AddChild, "AddChild(self, child: WindowBase)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AddChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxWindowBase* child;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_child,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxWindowBase, &child))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::AddChild(child) : sipCpp->AddChild(child));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_AddChild, doc_wxOwnerDrawnComboBox_AddChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_RemoveChild, "RemoveChild(self, child: WindowBase)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxWindowBase* child;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_child,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxWindowBase, &child))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::RemoveChild(child) : sipCpp->RemoveChild(child));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_RemoveChild, doc_wxOwnerDrawnComboBox_RemoveChild);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_InheritAttributes, "InheritAttributes(self)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_InheritAttributes(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_InheritAttributes(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::InheritAttributes() : sipCpp->InheritAttributes());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_InheritAttributes, doc_wxOwnerDrawnComboBox_InheritAttributes);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_ShouldInheritColours, "ShouldInheritColours(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_ShouldInheritColours(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_ShouldInheritColours(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::ShouldInheritColours() : sipCpp->ShouldInheritColours());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_ShouldInheritColours, doc_wxOwnerDrawnComboBox_ShouldInheritColours);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_OnInternalIdle, "OnInternalIdle(self)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_OnInternalIdle(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_OnInternalIdle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::OnInternalIdle() : sipCpp->OnInternalIdle());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_OnInternalIdle, doc_wxOwnerDrawnComboBox_OnInternalIdle);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxWindow*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetMainWindowOfCompositeControl() : sipCpp->GetMainWindowOfCompositeControl());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetMainWindowOfCompositeControl, doc_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_InformFirstDirection, "InformFirstDirection(self, direction: int, size: int, availableOtherDir: int) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_InformFirstDirection(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_InformFirstDirection(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int direction;
        int size;
        int availableOtherDir;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_direction,
            sipName_size,
            sipName_availableOtherDir,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Biii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &direction, &size, &availableOtherDir))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::InformFirstDirection(direction,size,availableOtherDir) : sipCpp->InformFirstDirection(direction,size,availableOtherDir));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_InformFirstDirection, doc_wxOwnerDrawnComboBox_InformFirstDirection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetCanFocus, "SetCanFocus(self, canFocus: bool)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SetCanFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_SetCanFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool canFocus;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_canFocus,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &canFocus))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::SetCanFocus(canFocus) : sipCpp->SetCanFocus(canFocus));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_SetCanFocus, doc_wxOwnerDrawnComboBox_SetCanFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_Destroy, "Destroy(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_Destroy(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_Destroy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::Destroy() : sipCpp->Destroy());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_Destroy, doc_wxOwnerDrawnComboBox_Destroy);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetValidator, "SetValidator(self, validator: Validator)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SetValidator(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_SetValidator(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxValidator* validator;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_validator,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxValidator, &validator))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::SetValidator(*validator) : sipCpp->SetValidator(*validator));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_SetValidator, doc_wxOwnerDrawnComboBox_SetValidator);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetValidator, "GetValidator(self) -> Validator");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetValidator(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxValidator*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetValidator() : sipCpp->GetValidator());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxValidator,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetValidator, doc_wxOwnerDrawnComboBox_GetValidator);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_EnableVisibleFocus, "EnableVisibleFocus(self, enabled: bool)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_EnableVisibleFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_EnableVisibleFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool enabled;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &enabled))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::EnableVisibleFocus(enabled) : sipCpp->EnableVisibleFocus(enabled));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_EnableVisibleFocus, doc_wxOwnerDrawnComboBox_EnableVisibleFocus);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_ProcessEvent, "ProcessEvent(self, event: Event) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_ProcessEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_ProcessEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxEvent* event;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxEvent, &event))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_ProcessEvent(sipSelfWasArg,*event);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_ProcessEvent, doc_wxOwnerDrawnComboBox_ProcessEvent);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoEnable, "DoEnable(self, enable: bool)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoEnable(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool enable;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_enable,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &enable))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoEnable(sipSelfWasArg,enable);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoEnable, doc_wxOwnerDrawnComboBox_DoEnable);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int x;
        int y;
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoGetPosition(sipSelfWasArg,&x,&y);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(ii)",x,y);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetPosition, doc_wxOwnerDrawnComboBox_DoGetPosition);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int width;
        int height;
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoGetSize(sipSelfWasArg,&width,&height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(ii)",width,height);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetSize, doc_wxOwnerDrawnComboBox_DoGetSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int width;
        int height;
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoGetClientSize(sipSelfWasArg,&width,&height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(ii)",width,height);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetClientSize, doc_wxOwnerDrawnComboBox_DoGetClientSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetBestSize, "DoGetBestSize(self) -> Size");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetBestSize(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetBestSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxSize*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(sipCpp->sipProtectVirt_DoGetBestSize(sipSelfWasArg));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetBestSize, doc_wxOwnerDrawnComboBox_DoGetBestSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetBestClientSize, "DoGetBestClientSize(self) -> Size");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetBestClientSize(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetBestClientSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxSize*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(sipCpp->sipProtectVirt_DoGetBestClientSize(sipSelfWasArg));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetBestClientSize, doc_wxOwnerDrawnComboBox_DoGetBestClientSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetSize, "DoSetSize(self, x: int, y: int, width: int, height: int, sizeFlags: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoSetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int x;
        int y;
        int width;
        int height;
        int sizeFlags;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_x,
            sipName_y,
            sipName_width,
            sipName_height,
            sipName_sizeFlags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Biiiii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &x, &y, &width, &height, &sizeFlags))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoSetSize(sipSelfWasArg,x,y,width,height,sizeFlags);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoSetSize, doc_wxOwnerDrawnComboBox_DoSetSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetClientSize, "DoSetClientSize(self, width: int, height: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetClientSize(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoSetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int width;
        int height;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_width,
            sipName_height,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &width, &height))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoSetClientSize(sipSelfWasArg,width,height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoSetClientSize, doc_wxOwnerDrawnComboBox_DoSetClientSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetSizeHints, "DoSetSizeHints(self, minW: int, minH: int, maxW: int, maxH: int, incW: int, incH: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetSizeHints(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoSetSizeHints(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int minW;
        int minH;
        int maxW;
        int maxH;
        int incW;
        int incH;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_minW,
            sipName_minH,
            sipName_maxW,
            sipName_maxH,
            sipName_incW,
            sipName_incH,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Biiiiii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &minW, &minH, &maxW, &maxH, &incW, &incH))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoSetSizeHints(sipSelfWasArg,minW,minH,maxW,maxH,incW,incH);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoSetSizeHints, doc_wxOwnerDrawnComboBox_DoSetSizeHints);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetBorderSize, "DoGetBorderSize(self) -> Size");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetBorderSize(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoGetBorderSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxSize*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(sipCpp->sipProtectVirt_DoGetBorderSize(sipSelfWasArg));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoGetBorderSize, doc_wxOwnerDrawnComboBox_DoGetBorderSize);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoMoveWindow, "DoMoveWindow(self, x: int, y: int, width: int, height: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoMoveWindow(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoMoveWindow(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int x;
        int y;
        int width;
        int height;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_x,
            sipName_y,
            sipName_width,
            sipName_height,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Biiii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &x, &y, &width, &height))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoMoveWindow(sipSelfWasArg,x,y,width,height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoMoveWindow, doc_wxOwnerDrawnComboBox_DoMoveWindow);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetWindowVariant, "DoSetWindowVariant(self, variant: WindowVariant)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetWindowVariant(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoSetWindowVariant(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxWindowVariant variant;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_variant,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BE", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxWindowVariant, &variant))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoSetWindowVariant(sipSelfWasArg,variant);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoSetWindowVariant, doc_wxOwnerDrawnComboBox_DoSetWindowVariant);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetDefaultBorder, "GetDefaultBorder(self) -> Border");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetDefaultBorder(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetDefaultBorder(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxBorder sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_GetDefaultBorder(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_wxBorder);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetDefaultBorder, doc_wxOwnerDrawnComboBox_GetDefaultBorder);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetDefaultBorderForControl, "GetDefaultBorderForControl(self) -> Border");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetDefaultBorderForControl(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetDefaultBorderForControl(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxBorder sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_GetDefaultBorderForControl(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_wxBorder);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetDefaultBorderForControl, doc_wxOwnerDrawnComboBox_GetDefaultBorderForControl);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoFreeze, "DoFreeze(self)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoFreeze(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoFreeze(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoFreeze(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoFreeze, doc_wxOwnerDrawnComboBox_DoFreeze);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoThaw, "DoThaw(self)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoThaw(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoThaw(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoThaw(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoThaw, doc_wxOwnerDrawnComboBox_DoThaw);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_HasTransparentBackground, "HasTransparentBackground(self) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_HasTransparentBackground(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_HasTransparentBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        sipwxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_HasTransparentBackground(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_HasTransparentBackground, doc_wxOwnerDrawnComboBox_HasTransparentBackground);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_TryBefore, "TryBefore(self, event: Event) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_TryBefore(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_TryBefore(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxEvent* event;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxEvent, &event))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_TryBefore(sipSelfWasArg,*event);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_TryBefore, doc_wxOwnerDrawnComboBox_TryBefore);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_TryAfter, "TryAfter(self, event: Event) -> bool");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_TryAfter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_TryAfter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxEvent* event;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxEvent, &event))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_TryAfter(sipSelfWasArg,*event);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_TryAfter, doc_wxOwnerDrawnComboBox_TryAfter);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetClassDefaultAttributes, "GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetClassDefaultAttributes(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetClassDefaultAttributes(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL;

        static const char *sipKwdList[] = {
            sipName_variant,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|E", sipType_wxWindowVariant, &variant))
        {
             ::wxVisualAttributes*sipRes;

        if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxVisualAttributes( ::wxOwnerDrawnComboBox::GetClassDefaultAttributes(variant));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxVisualAttributes,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetClassDefaultAttributes, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetCount, "GetCount(self) -> int");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetCount(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            uint sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetCount() : sipCpp->GetCount());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetCount, doc_wxOwnerDrawnComboBox_GetCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetString, "GetString(self, n: int) -> object");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetString(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        uint n;
        const  ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_n,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bu", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &n))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString((sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetString(n) : sipCpp->GetString(n)));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetString, doc_wxOwnerDrawnComboBox_GetString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetString, "SetString(self, n: int, s: object)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SetString(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_SetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        uint n;
        const  ::wxString* s;
        int sState = 0;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_n,
            sipName_s,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BuJ1", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &n, sipType_wxString,&s, &sState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::SetString(n,*s) : sipCpp->SetString(n,*s));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(s),sipType_wxString,sState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_SetString, doc_wxOwnerDrawnComboBox_SetString);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetSelection, "GetSelection(self) -> int");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetSelection(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::GetSelection() : sipCpp->GetSelection());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetSelection, doc_wxOwnerDrawnComboBox_GetSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetSelection, "SetSelection(self, n: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SetSelection(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_SetSelection(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int n;
         ::wxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_n,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bi", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &n))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::wxOwnerDrawnComboBox::SetSelection(n) : sipCpp->SetSelection(n));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_SetSelection, doc_wxOwnerDrawnComboBox_SetSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetStringSelection, "GetStringSelection(self) -> object");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetStringSelection(PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_GetStringSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxOwnerDrawnComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp))
        {
             ::wxString*sipRes = 0;

                sipRes = new wxString(sipCpp->wxItemContainerImmutable::GetStringSelection());

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_GetStringSelection, doc_wxOwnerDrawnComboBox_GetStringSelection);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetPopupControl, "DoSetPopupControl(self, popup: ComboPopup)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetPopupControl(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoSetPopupControl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxComboPopup* popup;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_popup,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxComboPopup, &popup))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoSetPopupControl(sipSelfWasArg,popup);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoSetPopupControl, doc_wxOwnerDrawnComboBox_DoSetPopupControl);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoShowPopup, "DoShowPopup(self, rect: Rect, flags: int)");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoShowPopup(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_DoShowPopup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::wxRect* rect;
        int rectState = 0;
        int flags;
        sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1i", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxRect, &rect, &rectState, &flags))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_DoShowPopup(sipSelfWasArg,*rect,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_DoShowPopup, doc_wxOwnerDrawnComboBox_DoShowPopup);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_OnDrawBackground, "OnDrawBackground(dc, rect, item, flags)\n"
"\n"
"This method is used to draw the items background and, maybe, a border\n"
"around it.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_OnDrawBackground(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_OnDrawBackground(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
        const  ::wxRect* rect;
        int rectState = 0;
        int item;
        int flags;
        const sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_rect,
            sipName_item,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J1ii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxDC, &dc, sipType_wxRect, &rect, &rectState, &item, &flags))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_OnDrawBackground(sipSelfWasArg,*dc,*rect,item,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_OnDrawBackground, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_OnDrawItem, "OnDrawItem(dc, rect, item, flags)\n"
"\n"
"The derived class may implement this function to actually draw the\n"
"item with the given index on the provided DC.");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_OnDrawItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_OnDrawItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::wxDC* dc;
        const  ::wxRect* rect;
        int rectState = 0;
        int item;
        int flags;
        const sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_dc,
            sipName_rect,
            sipName_item,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9J1ii", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, sipType_wxDC, &dc, sipType_wxRect, &rect, &rectState, &item, &flags))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_OnDrawItem(sipSelfWasArg,*dc,*rect,item,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxRect *>(rect),sipType_wxRect,rectState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_OnDrawItem, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_OnMeasureItem, "OnMeasureItem(item) -> Coord\n"
"\n"
"The derived class may implement this method to return the height of\n"
"the specified item (in pixels).");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_OnMeasureItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_OnMeasureItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        size_t item;
        const sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_item,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B=", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &item))
        {
             ::wxCoord sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_OnMeasureItem(sipSelfWasArg,item);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_OnMeasureItem, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_OnMeasureItemWidth, "OnMeasureItemWidth(item) -> Coord\n"
"\n"
"The derived class may implement this method to return the width of the\n"
"specified item (in pixels).");

extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_OnMeasureItemWidth(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxOwnerDrawnComboBox_OnMeasureItemWidth(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        size_t item;
        const sipwxOwnerDrawnComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_item,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B=", &sipSelf, sipType_wxOwnerDrawnComboBox, &sipCpp, &item))
        {
             ::wxCoord sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_OnMeasureItemWidth(sipSelfWasArg,item);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_OwnerDrawnComboBox, sipName_OnMeasureItemWidth, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxOwnerDrawnComboBox(void *, const sipTypeDef *);}
static void *cast_wxOwnerDrawnComboBox(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxOwnerDrawnComboBox *sipCpp = reinterpret_cast< ::wxOwnerDrawnComboBox *>(sipCppV);

    if (targetType == sipType_wxComboCtrl)
        return static_cast< ::wxComboCtrl *>(sipCpp);

    if (targetType == sipType_wxControl)
        return static_cast< ::wxControl *>(sipCpp);

    if (targetType == sipType_wxWindow)
        return static_cast< ::wxWindow *>(sipCpp);

    if (targetType == sipType_wxWindowBase)
        return static_cast< ::wxWindowBase *>(sipCpp);

    if (targetType == sipType_wxEvtHandler)
        return static_cast< ::wxEvtHandler *>(sipCpp);

    if (targetType == sipType_wxObject)
        return static_cast< ::wxObject *>(sipCpp);

    if (targetType == sipType_wxTrackable)
        return static_cast< ::wxTrackable *>(sipCpp);

    if (targetType == sipType_wxTextEntry)
        return static_cast< ::wxTextEntry *>(sipCpp);

    if (targetType == sipType_wxItemContainer)
        return static_cast< ::wxItemContainer *>(sipCpp);

    if (targetType == sipType_wxItemContainerImmutable)
        return static_cast< ::wxItemContainerImmutable *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxOwnerDrawnComboBox(void *, int);}
static void release_wxOwnerDrawnComboBox(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxOwnerDrawnComboBox *>(sipCppV);
    else
        delete reinterpret_cast< ::wxOwnerDrawnComboBox *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void *array_wxOwnerDrawnComboBox(Py_ssize_t);}
static void *array_wxOwnerDrawnComboBox(Py_ssize_t sipNrElem)
{
    return new  ::wxOwnerDrawnComboBox[sipNrElem];
}


extern "C" {static void dealloc_wxOwnerDrawnComboBox(sipSimpleWrapper *);}
static void dealloc_wxOwnerDrawnComboBox(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxOwnerDrawnComboBox *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxOwnerDrawnComboBox(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxOwnerDrawnComboBox(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxOwnerDrawnComboBox(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipwxOwnerDrawnComboBox *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {

        if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxOwnerDrawnComboBox();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
         ::wxWindow* parent;
         ::wxWindowID id = wxID_ANY;
        const  ::wxString& valuedef = wxEmptyString;
        const  ::wxString* value = &valuedef;
        int valueState = 0;
        const  ::wxPoint& posdef = wxDefaultPosition;
        const  ::wxPoint* pos = &posdef;
        int posState = 0;
        const  ::wxSize& sizedef = wxDefaultSize;
        const  ::wxSize* size = &sizedef;
        int sizeState = 0;
        const  ::wxArrayString& choicesdef = wxArrayString();
        const  ::wxArrayString* choices = &choicesdef;
        int choicesState = 0;
        long style = 0;
        const  ::wxValidator& validatordef = wxDefaultValidator;
        const  ::wxValidator* validator = &validatordef;
        const  ::wxString& namedef = "comboBox";
        const  ::wxString* name = &namedef;
        int nameState = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_id,
            sipName_value,
            sipName_pos,
            sipName_size,
            sipName_choices,
            sipName_style,
            sipName_validator,
            sipName_name,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "JH|iJ1J1J1J1lJ9J1", sipType_wxWindow, &parent, sipOwner, &id, sipType_wxString,&value, &valueState, sipType_wxPoint, &pos, &posState, sipType_wxSize, &size, &sizeState, sipType_wxArrayString,&choices, &choicesState, &style, sipType_wxValidator, &validator, sipType_wxString,&name, &nameState))
        {

        if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxOwnerDrawnComboBox(parent,id,*value,*pos,*size,*choices,style,*validator,*name);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(value),sipType_wxString,valueState);
            sipReleaseType(const_cast< ::wxPoint *>(pos),sipType_wxPoint,posState);
            sipReleaseType(const_cast< ::wxSize *>(size),sipType_wxSize,sizeState);
            sipReleaseType(const_cast< ::wxArrayString *>(choices),sipType_wxArrayString,choicesState);
            sipReleaseType(const_cast< ::wxString *>(name),sipType_wxString,nameState);

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxOwnerDrawnComboBox[] = {{11, 0, 0}, {31, 0, 1}};


static PyMethodDef methods_wxOwnerDrawnComboBox[] = {
    {SIP_MLNAME_CAST(sipName_AcceptsFocus), meth_wxOwnerDrawnComboBox_AcceptsFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_AcceptsFocus)},
    {SIP_MLNAME_CAST(sipName_AcceptsFocusFromKeyboard), meth_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard)},
    {SIP_MLNAME_CAST(sipName_AcceptsFocusRecursively), meth_wxOwnerDrawnComboBox_AcceptsFocusRecursively, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_AcceptsFocusRecursively)},
    {SIP_MLNAME_CAST(sipName_AddChild), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_AddChild), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_AddChild)},
    {SIP_MLNAME_CAST(sipName_AnimateShow), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_AnimateShow), METH_VARARGS|METH_KEYWORDS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_Create), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_Create), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_Create)},
    {SIP_MLNAME_CAST(sipName_Destroy), meth_wxOwnerDrawnComboBox_Destroy, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_Destroy)},
    {SIP_MLNAME_CAST(sipName_DoEnable), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoEnable), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoEnable)},
    {SIP_MLNAME_CAST(sipName_DoFreeze), meth_wxOwnerDrawnComboBox_DoFreeze, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoFreeze)},
    {SIP_MLNAME_CAST(sipName_DoGetBestClientSize), meth_wxOwnerDrawnComboBox_DoGetBestClientSize, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetBestClientSize)},
    {SIP_MLNAME_CAST(sipName_DoGetBestSize), meth_wxOwnerDrawnComboBox_DoGetBestSize, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetBestSize)},
    {SIP_MLNAME_CAST(sipName_DoGetBorderSize), meth_wxOwnerDrawnComboBox_DoGetBorderSize, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetBorderSize)},
    {SIP_MLNAME_CAST(sipName_DoGetClientSize), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoGetClientSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetClientSize)},
    {SIP_MLNAME_CAST(sipName_DoGetPosition), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoGetPosition), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetPosition)},
    {SIP_MLNAME_CAST(sipName_DoGetSize), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoGetSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoGetSize)},
    {SIP_MLNAME_CAST(sipName_DoMoveWindow), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoMoveWindow), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoMoveWindow)},
    {SIP_MLNAME_CAST(sipName_DoSetClientSize), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoSetClientSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoSetClientSize)},
    {SIP_MLNAME_CAST(sipName_DoSetPopupControl), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoSetPopupControl), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoSetPopupControl)},
    {SIP_MLNAME_CAST(sipName_DoSetSize), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoSetSize), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoSetSize)},
    {SIP_MLNAME_CAST(sipName_DoSetSizeHints), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoSetSizeHints), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoSetSizeHints)},
    {SIP_MLNAME_CAST(sipName_DoSetWindowVariant), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoSetWindowVariant), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoSetWindowVariant)},
    {SIP_MLNAME_CAST(sipName_DoShowPopup), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_DoShowPopup), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoShowPopup)},
    {SIP_MLNAME_CAST(sipName_DoThaw), meth_wxOwnerDrawnComboBox_DoThaw, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_DoThaw)},
    {SIP_MLNAME_CAST(sipName_EnableVisibleFocus), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_EnableVisibleFocus), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_EnableVisibleFocus)},
    {SIP_MLNAME_CAST(sipName_GetClassDefaultAttributes), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_GetClassDefaultAttributes), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetClassDefaultAttributes)},
    {SIP_MLNAME_CAST(sipName_GetClientAreaOrigin), meth_wxOwnerDrawnComboBox_GetClientAreaOrigin, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetClientAreaOrigin)},
    {SIP_MLNAME_CAST(sipName_GetCount), meth_wxOwnerDrawnComboBox_GetCount, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetCount)},
    {SIP_MLNAME_CAST(sipName_GetDefaultBorder), meth_wxOwnerDrawnComboBox_GetDefaultBorder, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetDefaultBorder)},
    {SIP_MLNAME_CAST(sipName_GetDefaultBorderForControl), meth_wxOwnerDrawnComboBox_GetDefaultBorderForControl, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetDefaultBorderForControl)},
    {SIP_MLNAME_CAST(sipName_GetMainWindowOfCompositeControl), meth_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl)},
    {SIP_MLNAME_CAST(sipName_GetSelection), meth_wxOwnerDrawnComboBox_GetSelection, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetSelection)},
    {SIP_MLNAME_CAST(sipName_GetString), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_GetString), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetString)},
    {SIP_MLNAME_CAST(sipName_GetStringSelection), meth_wxOwnerDrawnComboBox_GetStringSelection, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetStringSelection)},
    {SIP_MLNAME_CAST(sipName_GetValidator), meth_wxOwnerDrawnComboBox_GetValidator, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetValidator)},
    {SIP_MLNAME_CAST(sipName_GetWidestItem), meth_wxOwnerDrawnComboBox_GetWidestItem, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetWidestItem)},
    {SIP_MLNAME_CAST(sipName_GetWidestItemWidth), meth_wxOwnerDrawnComboBox_GetWidestItemWidth, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_GetWidestItemWidth)},
    {SIP_MLNAME_CAST(sipName_HasTransparentBackground), meth_wxOwnerDrawnComboBox_HasTransparentBackground, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_HasTransparentBackground)},
    {SIP_MLNAME_CAST(sipName_InformFirstDirection), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_InformFirstDirection), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_InformFirstDirection)},
    {SIP_MLNAME_CAST(sipName_InheritAttributes), meth_wxOwnerDrawnComboBox_InheritAttributes, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_InheritAttributes)},
    {SIP_MLNAME_CAST(sipName_InitDialog), meth_wxOwnerDrawnComboBox_InitDialog, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_InitDialog)},
    {SIP_MLNAME_CAST(sipName_IsListEmpty), meth_wxOwnerDrawnComboBox_IsListEmpty, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_IsListEmpty)},
    {SIP_MLNAME_CAST(sipName_IsTextEmpty), meth_wxOwnerDrawnComboBox_IsTextEmpty, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_IsTextEmpty)},
    {SIP_MLNAME_CAST(sipName_OnDrawBackground), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_OnDrawBackground), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_OnDrawBackground)},
    {SIP_MLNAME_CAST(sipName_OnDrawItem), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_OnDrawItem), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_OnDrawItem)},
    {SIP_MLNAME_CAST(sipName_OnInternalIdle), meth_wxOwnerDrawnComboBox_OnInternalIdle, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_OnInternalIdle)},
    {SIP_MLNAME_CAST(sipName_OnMeasureItem), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_OnMeasureItem), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_OnMeasureItem)},
    {SIP_MLNAME_CAST(sipName_OnMeasureItemWidth), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_OnMeasureItemWidth), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_OnMeasureItemWidth)},
    {SIP_MLNAME_CAST(sipName_ProcessEvent), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_ProcessEvent), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_ProcessEvent)},
    {SIP_MLNAME_CAST(sipName_RemoveChild), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_RemoveChild), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_RemoveChild)},
    {SIP_MLNAME_CAST(sipName_SendDestroyEvent), meth_wxOwnerDrawnComboBox_SendDestroyEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_SetCanFocus), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_SetCanFocus), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_SetCanFocus)},
    {SIP_MLNAME_CAST(sipName_SetSelection), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_SetSelection), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_SetSelection)},
    {SIP_MLNAME_CAST(sipName_SetString), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_SetString), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_SetString)},
    {SIP_MLNAME_CAST(sipName_SetValidator), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_SetValidator), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_SetValidator)},
    {SIP_MLNAME_CAST(sipName_ShouldInheritColours), meth_wxOwnerDrawnComboBox_ShouldInheritColours, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_ShouldInheritColours)},
    {SIP_MLNAME_CAST(sipName_TransferDataFromWindow), meth_wxOwnerDrawnComboBox_TransferDataFromWindow, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_TransferDataFromWindow)},
    {SIP_MLNAME_CAST(sipName_TransferDataToWindow), meth_wxOwnerDrawnComboBox_TransferDataToWindow, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_TransferDataToWindow)},
    {SIP_MLNAME_CAST(sipName_TryAfter), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_TryAfter), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_TryAfter)},
    {SIP_MLNAME_CAST(sipName_TryBefore), SIP_MLMETH_CAST(meth_wxOwnerDrawnComboBox_TryBefore), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_TryBefore)},
    {SIP_MLNAME_CAST(sipName_Validate), meth_wxOwnerDrawnComboBox_Validate, METH_VARARGS, SIP_MLDOC_CAST(doc_wxOwnerDrawnComboBox_Validate)}
};

sipVariableDef variables_wxOwnerDrawnComboBox[] = {
    {PropertyVariable, sipName_WidestItemWidth, &methods_wxOwnerDrawnComboBox[35], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_WidestItem, &methods_wxOwnerDrawnComboBox[34], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxOwnerDrawnComboBox, "OwnerDrawnComboBox()\n"
"OwnerDrawnComboBox(parent, id=wx.ID_ANY, value=wx.EmptyString, pos=wx.DefaultPosition, size=wx.DefaultSize, choices=[], style=0, validator=wx.DefaultValidator, name=\"comboBox\")\n"
"\n"
"wxOwnerDrawnComboBox is a combobox with owner-drawn list items.");


sipClassTypeDef sipTypeDef__adv_wxOwnerDrawnComboBox = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxOwnerDrawnComboBox,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_OwnerDrawnComboBox,
        {0, 0, 1},
        60, methods_wxOwnerDrawnComboBox,
        0, SIP_NULLPTR,
        2, variables_wxOwnerDrawnComboBox,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxOwnerDrawnComboBox,
    -1,
    -1,
    supers_wxOwnerDrawnComboBox,
    SIP_NULLPTR,
    init_type_wxOwnerDrawnComboBox,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxOwnerDrawnComboBox,
    SIP_NULLPTR,
    array_wxOwnerDrawnComboBox,
    SIP_NULLPTR,
    release_wxOwnerDrawnComboBox,
    cast_wxOwnerDrawnComboBox,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
