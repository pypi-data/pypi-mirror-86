/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

        #include <wx/combo.h>



/* Call the instance's destructor. */
extern "C" {static void release_wxComboCtrlFeatures(void *, int);}
static void release_wxComboCtrlFeatures(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxComboCtrlFeatures *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void *array_wxComboCtrlFeatures(Py_ssize_t);}
static void *array_wxComboCtrlFeatures(Py_ssize_t sipNrElem)
{
    return new  ::wxComboCtrlFeatures[sipNrElem];
}


extern "C" {static void assign_wxComboCtrlFeatures(void *, SIP_SSIZE_T, void *);}
static void assign_wxComboCtrlFeatures(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::wxComboCtrlFeatures *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::wxComboCtrlFeatures *>(sipSrc);
}


extern "C" {static void *copy_wxComboCtrlFeatures(const void *, SIP_SSIZE_T);}
static void *copy_wxComboCtrlFeatures(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::wxComboCtrlFeatures(reinterpret_cast<const  ::wxComboCtrlFeatures *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxComboCtrlFeatures(sipSimpleWrapper *);}
static void dealloc_wxComboCtrlFeatures(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxComboCtrlFeatures(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_wxComboCtrlFeatures(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxComboCtrlFeatures(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::wxComboCtrlFeatures *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxComboCtrlFeatures();
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    {
        const  ::wxComboCtrlFeatures* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_wxComboCtrlFeatures, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxComboCtrlFeatures(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}

static sipEnumMemberDef enummembers_wxComboCtrlFeatures[] = {
    {sipName_All, static_cast<int>( ::wxComboCtrlFeatures::All), -1},
    {sipName_BitmapButton, static_cast<int>( ::wxComboCtrlFeatures::BitmapButton), -1},
    {sipName_Borderless, static_cast<int>( ::wxComboCtrlFeatures::Borderless), -1},
    {sipName_ButtonSpacing, static_cast<int>( ::wxComboCtrlFeatures::ButtonSpacing), -1},
    {sipName_MovableButton, static_cast<int>( ::wxComboCtrlFeatures::MovableButton), -1},
    {sipName_PaintControl, static_cast<int>( ::wxComboCtrlFeatures::PaintControl), -1},
    {sipName_PaintWritable, static_cast<int>( ::wxComboCtrlFeatures::PaintWritable), -1},
    {sipName_TextIndent, static_cast<int>( ::wxComboCtrlFeatures::TextIndent), -1},
};

PyDoc_STRVAR(doc_wxComboCtrlFeatures, "Features enabled for wxComboCtrl.");


sipClassTypeDef sipTypeDef__core_wxComboCtrlFeatures = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_wxComboCtrlFeatures,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_ComboCtrlFeatures,
        {0, 0, 1},
        0, SIP_NULLPTR,
        8, enummembers_wxComboCtrlFeatures,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxComboCtrlFeatures,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_wxComboCtrlFeatures,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxComboCtrlFeatures,
    assign_wxComboCtrlFeatures,
    array_wxComboCtrlFeatures,
    copy_wxComboCtrlFeatures,
    release_wxComboCtrlFeatures,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
