/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_html.h"

        #include <wx/html/htmprint.h>

        #include <wx/html/htmlfilt.h>
        #include <wx/cmndata.h>
        #include <wx/print.h>
        #include <wx/gdicmn.h>
        #include <wx/dc.h>
        #include <wx/gdicmn.h>
        #include <wx/object.h>
        #include <wx/object.h>
        #include <wx/object.h>
    void _wxHtmlPrintout_SetFonts(wxHtmlPrintout* self, const wxString * normal_face, const wxString * fixed_face, const wxArrayInt* sizes)
    {
        if (sizes->GetCount() != 7) {
            wxPyErr_SetString(PyExc_ValueError, "Sequence of 7 integers expected.");
            return;
        }
        self->SetFonts(*normal_face, *fixed_face, &sizes->Item(0));
    }


class sipwxHtmlPrintout : public  ::wxHtmlPrintout
{
public:
    sipwxHtmlPrintout(const  ::wxString&);
    virtual ~sipwxHtmlPrintout();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::wxString GetTitle() const SIP_OVERRIDE;
    bool IsPreview() const SIP_OVERRIDE;
    void OnBeginPrinting() SIP_OVERRIDE;
    void OnEndDocument() SIP_OVERRIDE;
    void OnEndPrinting() SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipwxHtmlPrintout(const sipwxHtmlPrintout &);
    sipwxHtmlPrintout &operator = (const sipwxHtmlPrintout &);

    char sipPyMethods[5];
};

sipwxHtmlPrintout::sipwxHtmlPrintout(const  ::wxString& title):  ::wxHtmlPrintout(title), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipwxHtmlPrintout::~sipwxHtmlPrintout()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::wxString sipwxHtmlPrintout::GetTitle() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,SIP_NULLPTR,sipName_GetTitle);

    if (!sipMeth)
        return  ::wxHtmlPrintout::GetTitle();

    extern  ::wxString sipVH__html_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__html_16(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipwxHtmlPrintout::IsPreview() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,SIP_NULLPTR,sipName_IsPreview);

    if (!sipMeth)
        return  ::wxHtmlPrintout::IsPreview();

    extern bool sipVH__html_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH__html_41(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxHtmlPrintout::OnBeginPrinting()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,SIP_NULLPTR,sipName_OnBeginPrinting);

    if (!sipMeth)
    {
         ::wxHtmlPrintout::OnBeginPrinting();
        return;
    }

    extern void sipVH__html_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__html_20(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxHtmlPrintout::OnEndDocument()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,SIP_NULLPTR,sipName_OnEndDocument);

    if (!sipMeth)
    {
         ::wxHtmlPrintout::OnEndDocument();
        return;
    }

    extern void sipVH__html_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__html_20(sipGILState, 0, sipPySelf, sipMeth);
}

void sipwxHtmlPrintout::OnEndPrinting()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,SIP_NULLPTR,sipName_OnEndPrinting);

    if (!sipMeth)
    {
         ::wxHtmlPrintout::OnEndPrinting();
        return;
    }

    extern void sipVH__html_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH__html_20(sipGILState, 0, sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetFonts, "SetFonts(normal_face, fixed_face, sizes)\n"
"\n"
"This function sets font sizes and faces.");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetFonts(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetFonts(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* normal_face;
        int normal_faceState = 0;
        const  ::wxString* fixed_face;
        int fixed_faceState = 0;
        const  ::wxArrayInt* sizes;
        int sizesState = 0;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_normal_face,
            sipName_fixed_face,
            sipName_sizes,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1J1J1", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxString,&normal_face, &normal_faceState, sipType_wxString,&fixed_face, &fixed_faceState, sipType_wxArrayInt,&sizes, &sizesState))
        {
            int sipIsErr = 0;

        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        _wxHtmlPrintout_SetFonts(sipCpp, normal_face, fixed_face, sizes);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(const_cast< ::wxString *>(normal_face),sipType_wxString,normal_faceState);
            sipReleaseType(const_cast< ::wxString *>(fixed_face),sipType_wxString,fixed_faceState);
            sipReleaseType(const_cast< ::wxArrayInt *>(sizes),sipType_wxArrayInt,sizesState);

            if (sipIsErr)
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetFonts, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetFooter, "SetFooter(footer, pg=PAGE_ALL)\n"
"\n"
"Set page footer.");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetFooter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetFooter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* footer;
        int footerState = 0;
        int pg = wxPAGE_ALL;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_footer,
            sipName_pg,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|i", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxString,&footer, &footerState, &pg))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetFooter(*footer,pg);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(footer),sipType_wxString,footerState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetFooter, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetHeader, "SetHeader(header, pg=PAGE_ALL)\n"
"\n"
"Set page header.");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetHeader(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetHeader(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* header;
        int headerState = 0;
        int pg = wxPAGE_ALL;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_header,
            sipName_pg,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|i", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxString,&header, &headerState, &pg))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetHeader(*header,pg);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(header),sipType_wxString,headerState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetHeader, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetHtmlFile, "SetHtmlFile(htmlfile)\n"
"\n"
"Prepare the class for printing this HTML file.");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetHtmlFile(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetHtmlFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* htmlfile;
        int htmlfileState = 0;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_htmlfile,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxString,&htmlfile, &htmlfileState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetHtmlFile(*htmlfile);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(htmlfile),sipType_wxString,htmlfileState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetHtmlFile, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetHtmlText, "SetHtmlText(html, basepath=wx.EmptyString, isdir=True)\n"
"\n"
"Prepare the class for printing this HTML text.");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetHtmlText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetHtmlText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* html;
        int htmlState = 0;
        const  ::wxString& basepathdef = wxEmptyString;
        const  ::wxString* basepath = &basepathdef;
        int basepathState = 0;
        bool isdir = 1;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_html,
            sipName_basepath,
            sipName_isdir,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1|J1b", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxString,&html, &htmlState, sipType_wxString,&basepath, &basepathState, &isdir))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetHtmlText(*html,*basepath,isdir);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(html),sipType_wxString,htmlState);
            sipReleaseType(const_cast< ::wxString *>(basepath),sipType_wxString,basepathState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetHtmlText, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_SetMargins, "SetMargins(top=25.2, bottom=25.2, left=25.2, right=25.2, spaces=5)\n"
"SetMargins(pageSetupData)\n"
"\n"
"Sets margins in millimeters.\n"
"");

extern "C" {static PyObject *meth_wxHtmlPrintout_SetMargins(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_SetMargins(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        float top = 25.2;
        float bottom = 25.2;
        float left = 25.2;
        float right = 25.2;
        float spaces = 5;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_top,
            sipName_bottom,
            sipName_left,
            sipName_right,
            sipName_spaces,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|fffff", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, &top, &bottom, &left, &right, &spaces))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetMargins(top,bottom,left,right,spaces);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::wxPageSetupDialogData* pageSetupData;
         ::wxHtmlPrintout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_pageSetupData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxHtmlPrintout, &sipCpp, sipType_wxPageSetupDialogData, &pageSetupData))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetMargins(*pageSetupData);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_SetMargins, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxHtmlPrintout_AddFilter, "AddFilter(filter)\n"
"\n"
"Adds a filter to the static list of filters for wxHtmlPrintout.");

extern "C" {static PyObject *meth_wxHtmlPrintout_AddFilter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_AddFilter(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxHtmlFilter* filter;

        static const char *sipKwdList[] = {
            sipName_filter,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxHtmlFilter, &filter))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
             ::wxHtmlPrintout::AddFilter(filter);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_HtmlPrintout, sipName_AddFilter, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_wxHtmlPrintout_OnPrintPage(PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_OnPrintPage(PyObject *, PyObject *)
{

    sipNoMethod(SIP_NULLPTR, sipName_HtmlPrintout, sipName_OnPrintPage, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_wxHtmlPrintout_HasPage(PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_HasPage(PyObject *, PyObject *)
{

    sipNoMethod(SIP_NULLPTR, sipName_HtmlPrintout, sipName_HasPage, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_wxHtmlPrintout_GetPageInfo(PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_GetPageInfo(PyObject *, PyObject *)
{

    sipNoMethod(SIP_NULLPTR, sipName_HtmlPrintout, sipName_GetPageInfo, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_wxHtmlPrintout_OnBeginDocument(PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_OnBeginDocument(PyObject *, PyObject *)
{

    sipNoMethod(SIP_NULLPTR, sipName_HtmlPrintout, sipName_OnBeginDocument, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_wxHtmlPrintout_OnPreparePrinting(PyObject *, PyObject *);}
static PyObject *meth_wxHtmlPrintout_OnPreparePrinting(PyObject *, PyObject *)
{

    sipNoMethod(SIP_NULLPTR, sipName_HtmlPrintout, sipName_OnPreparePrinting, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxHtmlPrintout(void *, const sipTypeDef *);}
static void *cast_wxHtmlPrintout(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxHtmlPrintout *sipCpp = reinterpret_cast< ::wxHtmlPrintout *>(sipCppV);

    if (targetType == sipType_wxPrintout)
        return static_cast< ::wxPrintout *>(sipCpp);

    if (targetType == sipType_wxObject)
        return static_cast< ::wxObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxHtmlPrintout(void *, int);}
static void release_wxHtmlPrintout(void *sipCppV, int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipwxHtmlPrintout *>(sipCppV);
    else
        delete reinterpret_cast< ::wxHtmlPrintout *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void *array_wxHtmlPrintout(Py_ssize_t);}
static void *array_wxHtmlPrintout(Py_ssize_t sipNrElem)
{
    return new  ::wxHtmlPrintout[sipNrElem];
}


extern "C" {static void dealloc_wxHtmlPrintout(sipSimpleWrapper *);}
static void dealloc_wxHtmlPrintout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipwxHtmlPrintout *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxHtmlPrintout(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_wxHtmlPrintout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxHtmlPrintout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipwxHtmlPrintout *sipCpp = SIP_NULLPTR;

    {
        const  ::wxString& titledef = "Printout";
        const  ::wxString* title = &titledef;
        int titleState = 0;

        static const char *sipKwdList[] = {
            sipName_title,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|J1", sipType_wxString,&title, &titleState))
        {

        if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipwxHtmlPrintout(*title);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(title),sipType_wxString,titleState);

            if (PyErr_Occurred())
            {
                delete sipCpp;
                return SIP_NULLPTR;
            }

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxHtmlPrintout[] = {{31, 0, 1}};


static PyMethodDef methods_wxHtmlPrintout[] = {
    {SIP_MLNAME_CAST(sipName_AddFilter), SIP_MLMETH_CAST(meth_wxHtmlPrintout_AddFilter), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_AddFilter)},
    {SIP_MLNAME_CAST(sipName_GetPageInfo), meth_wxHtmlPrintout_GetPageInfo, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_HasPage), meth_wxHtmlPrintout_HasPage, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_OnBeginDocument), meth_wxHtmlPrintout_OnBeginDocument, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_OnPreparePrinting), meth_wxHtmlPrintout_OnPreparePrinting, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_OnPrintPage), meth_wxHtmlPrintout_OnPrintPage, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_SetFonts), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetFonts), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetFonts)},
    {SIP_MLNAME_CAST(sipName_SetFooter), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetFooter), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetFooter)},
    {SIP_MLNAME_CAST(sipName_SetHeader), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetHeader), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetHeader)},
    {SIP_MLNAME_CAST(sipName_SetHtmlFile), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetHtmlFile), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetHtmlFile)},
    {SIP_MLNAME_CAST(sipName_SetHtmlText), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetHtmlText), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetHtmlText)},
    {SIP_MLNAME_CAST(sipName_SetMargins), SIP_MLMETH_CAST(meth_wxHtmlPrintout_SetMargins), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxHtmlPrintout_SetMargins)}
};

PyDoc_STRVAR(doc_wxHtmlPrintout, "HtmlPrintout(title=\"Printout\")\n"
"\n"
"This class serves as printout class for HTML documents.");


sipClassTypeDef sipTypeDef__html_wxHtmlPrintout = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxHtmlPrintout,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_HtmlPrintout,
        {0, 0, 1},
        12, methods_wxHtmlPrintout,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxHtmlPrintout,
    -1,
    -1,
    supers_wxHtmlPrintout,
    SIP_NULLPTR,
    init_type_wxHtmlPrintout,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxHtmlPrintout,
    SIP_NULLPTR,
    array_wxHtmlPrintout,
    SIP_NULLPTR,
    release_wxHtmlPrintout,
    cast_wxHtmlPrintout,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
