/*
 * Module code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_html.h"

        #include <wx/object.h>
        #include <wx/colour.h>
        #include <wx/dc.h>
        #include <wx/html/htmlcell.h>
        #include <wx/html/htmlcell.h>
        #include <wx/html/htmlcell.h>
        #include <wx/cursor.h>
        #include <wx/html/htmlwin.h>
        #include <wx/gdicmn.h>
        #include <wx/event.h>
        #include <wx/html/htmlcell.h>
        #include <wx/filesys.h>
        #include <wx/html/htmltag.h>
        #include <wx/html/htmlpars.h>
        #include <wx/html/htmlpars.h>
        #include <wx/window.h>
        #include <wx/bitmap.h>
        #include <wx/gdicmn.h>
        #include <wx/validate.h>
        #include <wx/event.h>
        #include <wx/event.h>
        #include <wx/font.h>
        #include <wx/toolbar.h>
        #include <wx/statusbr.h>
        #include <wx/frame.h>
        #include <wx/config.h>
        #include <wx/html/helpdlg.h>
        #include <wx/html/helpdata.h>
        #include <wx/html/helpfrm.h>
        #include <wx/gdicmn.h>
        #include <wx/html/htmlcell.h>
        #include <wx/html/htmprint.h>
        #include <wx/html/htmprint.h>
        #include <wx/html/htmprint.h>
        #include <wx/html/winpars.h>
        #include <wx/html/helpdata.h>
        #include <wx/html/helpdata.h>
        #include <wx/html/helpwnd.h>
        #include <wx/html/helpctrl.h>
        #include <wx/html/helpctrl.h>
        #include <wx/htmllbox.h>

/* Define the strings used by this module. */
const char sipStrings__html[] = {
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 'I', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e', ':', ':', 'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'L', 'R', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'F', 'o', 'r', 'S', 'c', 'r', 'o', 'l', 'l', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 'O', 'f', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'E', 'a', 's', 'y', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', ':', ':', 'P', 'r', 'o', 'm', 'p', 't', 'M', 'o', 'd', 'e', 0,
    'H', 't', 'm', 'l', 'W', 'i', 'n', 'P', 'a', 'r', 's', 'e', 'r', '_', 'A', 'd', 'd', 'T', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'N', 'o', 'n', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'C', 'h', 'i', 'l', 'd', 'O', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'o', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'R', 'e', 'p', 'r', 'e', 's', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'S', 'i', 'm', 'p', 'l', 'e', 'H', 't', 'm', 'l', 'L', 'i', 's', 't', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'A', 'r', 'e', 'F', 'r', 'o', 'm', 'T', 'o', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 'S', 'e', 't', 0,
    'H', 'T', 'M', 'L', '_', 'F', 'I', 'N', 'D', '_', 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'B', 'E', 'F', 'O', 'R', 'E', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'u', 'l', 'd', 'P', 'r', 'e', 'v', 'e', 'n', 't', 'A', 'p', 'p', 'E', 'x', 'i', 't', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 'S', 'R', 'E', 'M', 'O', 'V', 'E', 0,
    'S', 'e', 't', 'H', 'T', 'M', 'L', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'H', 'T', 'M', 'L', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'T', 'M', 'L', '_', 'L', 'I', 'N', 'K', '_', 'C', 'L', 'I', 'C', 'K', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'T', 'M', 'L', '_', 'C', 'E', 'L', 'L', '_', 'C', 'L', 'I', 'C', 'K', 'E', 'D', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'T', 'e', 'x', 't', 'B', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'C', 'l', 'e', 'a', 'r', 'F', 'r', 'o', 'm', 'T', 'o', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 0,
    'H', 'T', 'M', 'L', '_', 'F', 'I', 'N', 'D', '_', 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'A', 'F', 'T', 'E', 'R', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'l', 'y', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'X', 'B', 'U', 'T', 'T', 'O', 'N', 'A', 'L', 'L', 0,
    'S', 'e', 't', 'H', 'T', 'M', 'L', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'I', 'm', 'a', 'g', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'o', 'r', 'd', 'W', 'i', 't', 'h', 'T', 'a', 'b', 's', 'C', 'e', 'l', 'l', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 'S', 'L', 'I', 'S', 'T', 0,
    'H', 'F', '_', 'I', 'C', 'O', 'N', 'S', '_', 'B', 'O', 'O', 'K', '_', 'C', 'H', 'A', 'P', 'T', 'E', 'R', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 'I', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'T', 'M', 'L', '_', 'C', 'E', 'L', 'L', '_', 'H', 'O', 'V', 'E', 'R', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'S', 'E', 'A', 'R', 'C', 'H', 'C', 'H', 'O', 'I', 'C', 'E', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'S', 'E', 'A', 'R', 'C', 'H', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 'S', 'A', 'D', 'D', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'O', 'N', 'D', '_', 'I', 'S', 'I', 'M', 'A', 'G', 'E', 'M', 'A', 'P', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'S', 'e', 'n', 'd', 'A', 'u', 't', 'o', 'S', 'c', 'r', 'o', 'l', 'l', 'E', 'v', 'e', 'n', 't', 's', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'I', 'n', 'h', 'e', 'r', 'i', 't', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'I', 'n', 'f', 'o', 'r', 'm', 'F', 'i', 'r', 's', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'S', 'i', 'm', 'p', 'l', 'e', 'H', 't', 'm', 'l', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'X', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'D', 'a', 't', 'a', 'I', 't', 'e', 'm', 's', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'n', 'T', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'R', 'e', 'l', 'a', 't', 'e', 'd', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'O', 'p', 'e', 'n', 'i', 'n', 'g', 'S', 't', 'a', 't', 'u', 's', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'C', 'e', 'l', 'l', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 0,
    'S', 'e', 't', 'F', 'r', 'o', 'm', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'L', 'R', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'L', 'R', '_', 'F', 'O', 'R', 'E', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'o', 'n', 't', 'e', 'x', 't', 'P', 'o', 'p', 'u', 'p', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 's', 'H', 'e', 'i', 'g', 'h', 't', 'H', 'i', 'n', 't', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'A', 'r', 'e', 'a', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'S', 'E', 'A', 'R', 'C', 'H', 'L', 'I', 'S', 'T', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'S', 'E', 'A', 'R', 'C', 'H', 'T', 'E', 'X', 'T', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'S', 'E', 'A', 'R', 'C', 'H', 'P', 'A', 'G', 'E', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'B', 'o', 'o', 'k', 'R', 'e', 'c', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'D', 'a', 't', 'a', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'I', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'E', 'a', 's', 'y', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'W', 'r', 'i', 't', 'e', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'n', 'e', 'd', 'P', 'a', 'g', 'e', 'T', 'i', 't', 'l', 'e', 0,
    'H', 'T', 'M', 'L', 'C', 'o', 'o', 'r', 'd', 's', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'H', 'T', 'M', 'L', 'W', 'i', 'n', 'd', 'o', 'w', 'T', 'i', 't', 'l', 'e', 0,
    'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', '_', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'H', 'W', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'N', 'E', 'V', 'E', 'R', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'C', 'R', 'I', 'P', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'O', 'N', 'D', '_', 'I', 'S', 'A', 'N', 'C', 'H', 'O', 'R', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'H', 'T', 'M', 'L', '_', 'U', 'N', 'I', 'T', 'S', '_', 'P', 'E', 'R', 'C', 'E', 'N', 'T', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', 0,
    'S', 'e', 't', 'F', 'r', 'a', 'm', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'G', 'e', 't', 'F', 'r', 'a', 'm', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 's', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'D', 'o', 'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'H', 'L', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'H', 'E', 'L', 'P', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'C', 'O', 'U', 'N', 'T', 'I', 'N', 'F', 'O', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'X', 'T', 'E', 'X', 'T', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'X', 'L', 'I', 'S', 'T', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'X', 'P', 'A', 'G', 'E', 0,
    'A', 'd', 'd', 'T', 'o', 'o', 'l', 'b', 'a', 'r', 'B', 'u', 't', 't', 'o', 'n', 's', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'o', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'N', 'e', 'x', 't', 'P', 'a', 'g', 'e', 'B', 'r', 'e', 'a', 'k', 0,
    'R', 'e', 'a', 'd', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'a', 't', 'i', 'o', 'n', 0,
    'H', 'i', 's', 't', 'o', 'r', 'y', 'C', 'a', 'n', 'F', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'S', 'e', 't', 'H', 'T', 'M', 'L', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'O', 'n', 'H', 'T', 'M', 'L', 'L', 'i', 'n', 'k', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'H', 'W', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'A', 'U', 'T', 'O', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'M', 'o', 'u', 's', 'e', 'C', 'l', 'i', 'c', 'k', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 0,
    'S', 'e', 't', 'T', 'o', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'E', 'L', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'H', 'T', 'M', 'L', '_', 'U', 'N', 'I', 'T', 'S', '_', 'P', 'I', 'X', 'E', 'L', 'S', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'O', 'n', 'P', 'r', 'e', 'p', 'a', 'r', 'e', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'O', 't', 'h', 'e', 'r', 'D', 'i', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'H', 'e', 'l', 'p', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'T', 'R', 'E', 'E', 'C', 'T', 'R', 'L', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'O', 'P', 'E', 'N', 'F', 'I', 'L', 'E', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'H', 'F', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'A', 'r', 'r', 'a', 'y', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 't', 'a', 'r', 't', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'R', 'a', 'n', 'g', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'B', 'o', 'o', 'k', 'R', 'e', 'c', 'o', 'r', 'd', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'D', 'C', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'O', 'n', 'C', 'e', 'l', 'l', 'M', 'o', 'u', 's', 'e', 'H', 'o', 'v', 'e', 'r', 0,
    'S', 'e', 't', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'F', 'o', 'n', 't', 's', 0,
    'O', 'n', 'H', 'T', 'M', 'L', 'O', 'p', 'e', 'n', 'i', 'n', 'g', 'U', 'R', 'L', 0,
    'H', 'W', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'P', 'a', 'r', 's', 'e', 'I', 'n', 'n', 'e', 'r', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'G', 'e', 't', 'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'T', 'a', 'g', 's', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'T', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'm', 'A', 's', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'm', 'A', 's', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'd', 'g', 'e', 't', 'C', 'e', 'l', 'l', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'C', 'o', 'l', 'o', 'u', 'r', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'C', 'u', 'r', 's', 'o', 'r', 'A', 't', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'S', 'c', 'r', 'i', 'p', 't', 'M', 'o', 'd', 'e', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'n', 'e', 'w', 'F', 'r', 'a', 'm', 'e', 'E', 'a', 'c', 'h', 'T', 'i', 'm', 'e', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'T', 'e', 'x', 't', 'P', 'o', 'p', 'u', 'p', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'S', 'e', 'n', 'd', 'D', 'e', 's', 't', 'r', 'o', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'M', 'a', 'r', 'k', 'u', 'p', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'M', 'o', 'd', 'a', 'l', 'H', 'e', 'l', 'p', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'H', 'e', 'l', 'p', 'F', 'r', 'a', 'm', 'e', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'O', 'P', 'T', 'I', 'O', 'N', 'S', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'F', 'O', 'R', 'W', 'A', 'R', 'D', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'F', 'r', 'a', 'm', 'e', 0,
    'H', 'F', '_', 'I', 'C', 'O', 'N', 'S', '_', 'F', 'O', 'L', 'D', 'E', 'R', 0,
    'H', 'F', '_', 'F', 'L', 'A', 'T', '_', 'T', 'O', 'O', 'L', 'B', 'A', 'R', 0,
    'G', 'e', 't', 'B', 'o', 'o', 'k', 'R', 'e', 'c', 'A', 'r', 'r', 'a', 'y', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 'e', 'd', 'N', 'a', 'm', 'e', 0,
    't', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'C', 'l', 'a', 's', 's', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'n', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'C', 'e', 'l', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'L', 'i', 'n', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'R', 'e', 'l', 'a', 't', 'e', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'T', 'o', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'R', 'e', 'l', 'a', 't', 'e', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'n', 'e', 'd', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', '_', 'T', 'e', 'x', 't', 0,
    'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', '_', 'L', 'i', 'n', 'k', 0,
    'H', 'W', '_', 'N', 'O', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'd', 'j', 'u', 's', 't', 'P', 'a', 'g', 'e', 'b', 'r', 'e', 'a', 'k', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'C', 'R', 'I', 'P', 'T', '_', 'S', 'U', 'P', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'C', 'R', 'I', 'P', 'T', '_', 'S', 'U', 'B', 0,
    'H', 'T', 'M', 'L', '_', 'F', 'I', 'N', 'D', '_', 'E', 'X', 'A', 'C', 'T', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'A', 'L', 'L', 0,
    'H', 'T', 'M', 'L', '_', 'I', 'N', 'D', 'E', 'N', 'T', '_', 'T', 'O', 'P', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'U', 'P', 'N', 'O', 'D', 'E', 0,
    'S', 'e', 't', 'T', 'i', 't', 'l', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'H', 'F', '_', 'M', 'E', 'R', 'G', 'E', '_', 'B', 'O', 'O', 'K', 'S', 0,
    'F', 'i', 'n', 'd', 'P', 'a', 'g', 'e', 'B', 'y', 'N', 'a', 'm', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'H', 'e', 'l', 'p', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'E', 'n', 'd', 0,
    'S', 'e', 't', 'A', 'c', 't', 'u', 'a', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'G', 'e', 't', 'A', 'c', 't', 'u', 'a', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'C', 'l', 'o', 's', 'e', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'G', 'e', 't', 'T', 'o', 't', 'a', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'k', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'k', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'H', 'i', 's', 't', 'o', 'r', 'y', 'F', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'H', 'i', 's', 't', 'o', 'r', 'y', 'C', 'a', 'n', 'B', 'a', 'c', 'k', 0,
    'P', 'u', 's', 'h', 'T', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'U', 'R', 'L', '_', 'O', 'T', 'H', 'E', 'R', 0,
    'H', 'T', 'M', 'L', '_', 'U', 'R', 'L', '_', 'I', 'M', 'A', 'G', 'E', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'F', 'o', 'n', 't', 'C', 'e', 'l', 'l', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'o', 'r', 'd', 'C', 'e', 'l', 'l', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'L', 'i', 'n', 'k', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 'U', 'n', 'i', 't', 's', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'C', 'O', 'N', 'D', '_', 'U', 'S', 'E', 'R', 0,
    'H', 'T', 'M', 'L', '_', 'A', 'L', 'I', 'G', 'N', '_', 'T', 'O', 'P', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 'P', 'a', 'g', 'e', 's', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 's', 0,
    'O', 'n', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'I', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'P', 'A', 'N', 'E', 'L', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'H', 'F', '_', 'I', 'C', 'O', 'N', 'S', '_', 'B', 'O', 'O', 'K', 0,
    'H', 'F', '_', 'O', 'P', 'E', 'N', '_', 'F', 'I', 'L', 'E', 'S', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'x', 'A', 'r', 'r', 'a', 'y', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'O', 'p', 'e', 'n', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'm', 'p', 't', 'M', 'o', 'd', 'e', 0,
    'P', 'r', 'o', 'm', 'p', 't', '_', 'A', 'l', 'w', 'a', 'y', 's', 0,
    'G', 'e', 't', 'T', 'o', 't', 'a', 'l', 'W', 'i', 'd', 't', 'h', 0,
    'O', 'n', 'C', 'e', 'l', 'l', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'O', 'n', 'L', 'i', 'n', 'k', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'n', 'e', 'd', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'H', 'T', 'M', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'G', 'e', 't', 'H', 'T', 'M', 'L', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'H', 'T', 'M', 'L', '_', 'R', 'E', 'D', 'I', 'R', 'E', 'C', 'T', 0,
    'P', 'o', 'p', 'T', 'a', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'U', 'R', 'L', '_', 'P', 'A', 'G', 'E', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'U', 'R', 'L', 'T', 'y', 'p', 'e', 0,
    'P', 'a', 'r', 's', 'e', 'A', 's', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'm', 'A', 's', 'I', 'n', 't', 0,
    'S', 'e', 't', 'W', 'i', 'd', 't', 'h', 'F', 'l', 'o', 'a', 't', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'T', 'e', 'x', 't', 0,
    'F', 'i', 'n', 'd', 'C', 'e', 'l', 'l', 'B', 'y', 'P', 'o', 's', 0,
    'D', 'r', 'a', 'w', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'O', 'n', 'E', 'n', 'd', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'E', 'n', 'd', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'p', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'K', 'e', 'y', 'w', 'o', 'r', 'd', 'S', 'e', 'a', 'r', 'c', 'h', 0,
    'O', 'n', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'H', 'L', 'B', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'e', 'a', 'r', 'c', 'h', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'L', 'i', 's', 't', 's', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'D', 'O', 'W', 'N', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'B', 'A', 'C', 'K', 0,
    'H', 'F', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 'S', 0,
    'F', 'i', 'n', 'd', 'P', 'a', 'g', 'e', 'B', 'y', 'I', 'd', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'k', 'C', 'o', 'l', 'o', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'F', 'i', 'x', 'e', 'd', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'k', 'C', 'o', 'l', 'o', 'r', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'F', 'i', 'x', 'e', 'd', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'P', 'r', 'o', 'm', 'p', 't', '_', 'N', 'e', 'v', 'e', 'r', 0,
    'O', 'n', 'O', 'p', 'e', 'n', 'i', 'n', 'g', 'U', 'R', 'L', 0,
    'H', 'i', 's', 't', 'o', 'r', 'y', 'C', 'l', 'e', 'a', 'r', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'T', 'o', 'P', 'a', 'g', 'e', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'P', 'a', 'r', 'a', 'm', 's', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'E', 'L', '_', 'O', 'U', 'T', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'B', 'l', 'o', 'c', 'k', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'D', 'o', 'M', 'o', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    '_', '_', 'c', 'o', 'n', 't', 'a', 'i', 'n', 's', '_', '_', 0,
    's', 'h', 'o', 'w', 'W', 'a', 'i', 't', 'M', 's', 'g', 0,
    'H', 'F', '_', 'E', 'M', 'B', 'E', 'D', 'D', 'E', 'D', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'I', 'n', 'd', 'e', 'x', 0,
    'H', 'F', '_', 'C', 'O', 'N', 'T', 'E', 'N', 'T', 'S', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'P', 'a', 't', 'h', 0,
    'S', 'e', 't', 'B', 'a', 's', 'e', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'B', 'o', 'o', 'k', 'F', 'i', 'l', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'c', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'B', 'o', 'l', 'd', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'c', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'B', 'o', 'l', 'd', 0,
    'S', 'e', 't', 'H', 't', 'm', 'l', 'F', 'i', 'l', 'e', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'T', 'e', 'x', 't', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'i', 'l', 'e', 0,
    'P', 'r', 'o', 'm', 'p', 't', '_', 'O', 'n', 'c', 'e', 0,
    'S', 'e', 't', 'H', 't', 'm', 'l', 'C', 'e', 'l', 'l', 0,
    'S', 'e', 't', 'H', 't', 'm', 'l', 'T', 'e', 'x', 't', 0,
    'l', 'i', 'n', 'k', 'c', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'k', 'I', 'n', 'f', 'o', 0,
    'n', 'o', 'r', 'm', 'a', 'l', '_', 'f', 'a', 'c', 'e', 0,
    'H', 'i', 's', 't', 'o', 'r', 'y', 'B', 'a', 'c', 'k', 0,
    'S', 't', 'o', 'p', 'P', 'a', 'r', 's', 'i', 'n', 'g', 0,
    'w', 'i', 't', 'h', '_', 'q', 'u', 'o', 't', 'e', 's', 0,
    'G', 'e', 't', 'H', 't', 'm', 'l', 'C', 'e', 'l', 'l', 0,
    'p', 'i', 'x', 'e', 'l', '_', 's', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'V', 'e', 'r', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'H', 'o', 'r', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'V', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'H', 'o', 'r', 0,
    'G', 'e', 't', 'R', 'o', 'o', 't', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'B', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'B', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'F', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'F', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'C', 'e', 'l', 'l', 0,
    'H', 'T', 'M', 'L', '_', 'S', 'E', 'L', '_', 'I', 'N', 0,
    'O', 'n', 'P', 'r', 'i', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    't', 'i', 't', 'l', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 's', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'T', 'y', 'p', 'e', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    'h', 'e', 'l', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'I', 'D', '_', 'H', 'T', 'M', 'L', '_', 'U', 'P', 0,
    'c', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'H', 'F', '_', 'T', 'O', 'O', 'L', 'B', 'A', 'R', 0,
    'S', 'e', 't', 'T', 'e', 'm', 'p', 'D', 'i', 'r', 0,
    'p', 'r', 'o', 'm', 'p', 't', 'M', 'o', 'd', 'e', 0,
    'f', 'i', 'x', 'e', 'd', '_', 'f', 'a', 'c', 'e', 0,
    'S', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'W', 'o', 'r', 'd', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'L', 'i', 'n', 'e', 0,
    'O', 'n', 'S', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'r', 'e', 'd', 'i', 'r', 'e', 'c', 't', 'T', 'o', 0,
    'H', 'T', 'M', 'L', '_', 'B', 'L', 'O', 'C', 'K', 0,
    'I', 'n', 'i', 't', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'd', 'u', 'c', 't', 0,
    'D', 'o', 'n', 'e', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'P', 'a', 'r', 's', 'e', 'I', 'n', 'n', 'e', 'r', 0,
    'I', 'n', 's', 'e', 'r', 't', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'D', 'e', 's', 'c', 'e', 'n', 't', 0,
    'p', 'a', 'g', 'e', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'P', 'o', 's', 0,
    'D', 'o', 'G', 'i', 'v', 'e', 'H', 'e', 'l', 'p', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'I', 't', 'e', 'm', 0,
    'w', 'i', 'd', 't', 'h', 'T', 'i', 't', 'l', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'I', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 0,
    'F', 'i', 'n', 'd', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 's', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 0,
    'I', 'n', 'i', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 0,
    'H', 'F', '_', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'U', 's', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 0,
    'h', 'e', 'l', 'p', 'S', 't', 'y', 'l', 'e', 0,
    'H', 'F', '_', 'S', 'E', 'A', 'R', 'C', 'H', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 0,
    'P', 'r', 'i', 'n', 't', 'T', 'e', 'x', 't', 0,
    'P', 'r', 'i', 'n', 't', 'F', 'i', 'l', 'e', 0,
    'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 0,
    'P', 'A', 'G', 'E', '_', 'E', 'V', 'E', 'N', 0,
    's', 't', 'a', 't', 'u', 's', 'b', 'a', 'r', 0,
    'H', 'T', 'M', 'L', '_', 'O', 'P', 'E', 'N', 0,
    'G', 'e', 't', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'D', 'o', 'P', 'a', 'r', 's', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'S', 'e', 't', 'P', 'a', 'r', 's', 'e', 'r', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 'T', 'a', 'g', 0,
    'H', 'a', 's', 'E', 'n', 'd', 'i', 'n', 'g', 0,
    'w', 'x', 'H', 't', 'm', 'l', 'T', 'a', 'g', 0,
    'G', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'G', 'e', 't', 'A', 'b', 's', 'P', 'o', 's', 0,
    'c', 'o', 'n', 'd', 'i', 't', 'i', 'o', 'n', 0,
    'p', 'a', 'g', 'e', 'b', 'r', 'e', 'a', 'k', 0,
    'G', 'e', 't', 'B', 'g', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'B', 'g', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'C', 'e', 'l', 'l', 0,
    'I', 's', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'S', 'e', 't', 'V', 'i', 'e', 'w', 'e', 'r', 0,
    's', 'e', 'c', 't', 'i', 'o', 'n', 'N', 'o', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'I', 'd', 0,
    'G', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'S', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'a', 'x', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'i', 'n', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'v', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    's', 'i', 'z', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'T', 'r', 'y', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'h', 'e', 'l', 'p', 'F', 'i', 'l', 'e', 0,
    'b', 'o', 'o', 'k', 'F', 'i', 'l', 'e', 0,
    'H', 'F', '_', 'M', 'O', 'D', 'A', 'L', 0,
    'H', 'F', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'r', 'o', 'o', 't', 'p', 'a', 't', 'h', 0,
    'H', 'F', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'H', 'F', '_', 'I', 'N', 'D', 'E', 'X', 0,
    'b', 'o', 'o', 'k', '_', 'u', 'r', 'l', 0,
    'S', 'e', 't', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'S', 't', 'a', 'r', 't', 0,
    'b', 'o', 'o', 'k', 'f', 'i', 'l', 'e', 0,
    'w', 'n', 'd', 'I', 'f', 'a', 'c', 'e', 0,
    'h', 't', 'm', 'l', 't', 'e', 'x', 't', 0,
    'h', 't', 'm', 'l', 'f', 'i', 'l', 'e', 0,
    'b', 'a', 's', 'e', 'p', 'a', 't', 'h', 0,
    'P', 'A', 'G', 'E', '_', 'A', 'L', 'L', 0,
    'P', 'A', 'G', 'E', '_', 'O', 'D', 'D', 0,
    'l', 'i', 'n', 'k', 'i', 'n', 'f', 'o', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 's', 0,
    'L', 'o', 'a', 'd', 'P', 'a', 'g', 'e', 0,
    'H', 'a', 's', 'P', 'a', 'r', 'a', 'm', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'm', 0,
    'R', 'e', 'a', 'd', 'F', 'i', 'l', 'e', 0,
    'w', 'o', 'r', 'd', 'O', 'r', 'i', 'g', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'T', 'o', 'P', 'o', 's', 0,
    'f', 'r', 'o', 'm', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 0,
    'G', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'D', 'o', 'F', 'r', 'e', 'e', 'z', 'e', 0,
    'D', 'o', 'E', 'n', 'a', 'b', 'l', 'e', 0,
    'V', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    'c', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'A', 'd', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'T', 'r', 'y', 'A', 'f', 't', 'e', 'r', 0,
    'G', 'e', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'L', 'o', 'a', 'd', 'F', 'i', 'l', 'e', 0,
    'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'f', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'w', 'x', '.', '_', 'h', 't', 'm', 'l', 0,
    'b', 'o', 'o', 'k', 'U', 'r', 'l', 0,
    'k', 'e', 'y', 'w', 'o', 'r', 'd', 0,
    'A', 'd', 'd', 'B', 'o', 'o', 'k', 0,
    'G', 'e', 't', 'C', 'e', 'l', 'l', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 0,
    'O', 'p', 'e', 'n', 'U', 'R', 'L', 0,
    'l', 'i', 'n', 'e', 'p', 'o', 's', 0,
    'G', 'e', 't', 'H', 'r', 'e', 'f', 0,
    'S', 'e', 't', 'N', 'e', 'x', 't', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'k', 0,
    'G', 'e', 't', 'P', 'o', 's', 'Y', 0,
    'G', 'e', 't', 'P', 'o', 's', 'X', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'k', 0,
    'v', 'i', 'e', 'w', '_', 'y', '2', 0,
    'v', 'i', 'e', 'w', '_', 'y', '1', 0,
    'f', 'r', 'o', 'm', 'P', 'o', 's', 0,
    'I', 'N', 'T', '_', 'M', 'A', 'X', 0,
    'H', 'a', 's', 'P', 'a', 'g', 'e', 0,
    's', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'b', 'l', 'o', 'c', 'k', 'N', 'o', 0,
    't', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 0,
    'c', 'h', 'o', 'i', 'c', 'e', 's', 0,
    'u', 'n', 'i', 't', 'M', 'a', 'x', 0,
    'u', 'n', 'i', 't', 'M', 'i', 'n', 0,
    'v', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 0,
    'h', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'C', 'a', 'n', 'R', 'e', 'a', 'd', 0,
    'I', 's', 'E', 'm', 'p', 't', 'y', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'G', 'e', 't', 'N', 'a', 'm', 'e', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 0,
    's', 'e', 'r', 'v', 'e', 'r', 0,
    's', 'p', 'a', 'c', 'e', 's', 0,
    'f', 'o', 'o', 't', 'e', 'r', 0,
    'R', 'e', 'n', 'd', 'e', 'r', 0,
    'A', 'd', 'd', 'T', 'a', 'g', 0,
    'p', 'a', 'r', 's', 'e', 'r', 0,
    't', 'o', 'C', 'e', 'l', 'l', 0,
    'c', 'o', 'n', 'f', 'i', 'g', 0,
    'c', 'l', 'i', 'e', 'n', 't', 0,
    'v', 'i', 'e', 'w', 'e', 'r', 0,
    'O', 'n', 'Q', 'u', 'i', 't', 0,
    'd', 'i', 'a', 'l', 'o', 'g', 0,
    'r', 'o', 'w', 'M', 'a', 'x', 0,
    'r', 'o', 'w', 'M', 'i', 'n', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 0,
    'D', 'o', 'T', 'h', 'a', 'w', 0,
    't', 'a', 'r', 'g', 'e', 't', 0,
    'S', 'e', 't', 'P', 'o', 's', 0,
    'L', 'a', 'y', 'o', 'u', 't', 0,
    'D', 'e', 't', 'a', 'c', 'h', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 0,
    's', 'o', 'u', 'r', 'c', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 0,
    'a', 'n', 'c', 'h', 'o', 'r', 0,
    's', 't', 'r', 'e', 'a', 'm', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'c', 'u', 'r', 's', 'o', 'r', 0,
    'b', 'o', 't', 't', 'o', 'm', 0,
    's', 't', 'r', 'i', 'n', 'g', 0,
    'h', 'e', 'a', 'd', 'e', 'r', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'h', 'e', 'i', 'g', 'h', 't', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    't', 'o', 'p', 'i', 'c', 0,
    'i', 's', 'd', 'i', 'r', 0,
    'S', 'e', 't', 'D', 'C', 0,
    's', 'i', 'z', 'e', 's', 0,
    'b', 'm', 'p', 'B', 'g', 0,
    'S', 'e', 't', 'F', 'S', 0,
    'P', 'a', 'r', 's', 'e', 0,
    'G', 'e', 't', 'F', 'S', 0,
    'u', 'n', 'i', 't', 's', 0,
    'r', 'e', 'P', 'o', 's', 0,
    'p', 'a', 'r', 'a', 'm', 0,
    't', 'o', 'P', 'o', 's', 0,
    'p', 'o', 'p', 'u', 'p', 0,
    'f', 'r', 'o', 'm', '_', 0,
    'c', 'o', 'l', 'B', 'g', 0,
    'c', 'o', 'l', 'F', 'g', 0,
    's', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'C', 0,
    'C', 'l', 'o', 'n', 'e', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'I', 'd', 0,
    'f', 'r', 'a', 'm', 'e', 0,
    'l', 'e', 'v', 'e', 'l', 0,
    'c', 'h', 'i', 'l', 'd', 0,
    'a', 'l', 'i', 'g', 'n', 0,
    't', 'i', 't', 'l', 'e', 0,
    'p', 'o', 'i', 'n', 't', 0,
    's', 't', 'a', 'r', 't', 0,
    's', 't', 'y', 'l', 'e', 0,
    'r', 'i', 'g', 'h', 't', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'w', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'I', 'd', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'v', 'a', 'l', 'u', 'e', 0,
    'b', 'o', 'o', 'k', 0,
    't', 'a', 'g', 's', 0,
    'h', 'r', 'e', 'f', 0,
    'c', 'l', 'r', '2', 0,
    'c', 'l', 'r', '1', 0,
    'c', 'e', 'l', 'l', 0,
    'l', 'i', 'n', 'k', 0,
    'w', 'h', 'a', 't', 0,
    'u', 'n', 'i', 't', 0,
    'i', 'n', 'c', 'H', 0,
    'i', 'n', 'c', 'W', 0,
    'm', 'a', 'x', 'H', 0,
    'm', 'a', 'x', 'W', 0,
    'm', 'i', 'n', 'H', 0,
    'm', 'i', 'n', 'W', 0,
    's', 'h', 'o', 'w', 0,
    'f', 'o', 'n', 't', 0,
    't', 'y', 'p', 'e', 0,
    'F', 'i', 'n', 'd', 0,
    'l', 'e', 'f', 't', 0,
    'r', 'e', 'c', 't', 0,
    'p', 'a', 'g', 'e', 0,
    's', 'i', 'z', 'e', 0,
    'm', 'o', 'd', 'e', 0,
    't', 'i', 'm', 'e', 0,
    'i', 't', 'e', 'm', 0,
    'd', 'a', 't', 'a', 0,
    'c', 'f', 'g', 0,
    'p', 'a', 'r', 0,
    'w', 'n', 'd', 0,
    't', 'a', 'g', 0,
    'c', 'l', 'r', 0,
    's', 'e', 'l', 0,
    't', 'o', '_', 0,
    'i', 'd', 'x', 0,
    'm', 's', 'g', 0,
    'r', 'o', 'w', 0,
    't', 'o', 'p', 0,
    's', 't', 'r', 0,
    'o', 'b', 'j', 0,
    'p', 'g', 0,
    'e', 'v', 0,
    'a', 'l', 0,
    'd', 'c', 0,
    'f', 's', 0,
    'i', 'd', 0,
    'b', 0,
    'i', 0,
};
        class wxPyHtmlTagsModule : public wxHtmlTagsModule {
        public:
            wxPyHtmlTagsModule() : wxHtmlTagsModule() {
            }

            bool OnInit() {
                wxHtmlWinParser::AddModule(this);
                return true;
            }

            void OnExit() {
                wxPyThreadBlocker blocker;
                for (size_t x=0; x < m_tagHandlersArray.GetCount(); x++) {
                    PyObject* obj = (PyObject*)m_tagHandlersArray.Item(x);
                    Py_DECREF(obj);
                }
                m_tagHandlersArray.Clear();
                wxHtmlWinParser::RemoveModule(this);
            }

            void FillHandlersTable(wxHtmlWinParser *parser) {
                wxPyThreadBlocker blocker;

                // make a new instance of each handler class and register it with the parser
                for (size_t cls=0; cls < s_tagHandlerClasses.GetCount(); cls++) {
                    PyObject* pyClass = (PyObject*)s_tagHandlerClasses.Item(cls);

                    wxHtmlWinTagHandler* thPtr = NULL;

                    PyObject* arg = PyTuple_New(0);
                    PyObject* obj = PyObject_CallObject(pyClass, arg);
                    Py_DECREF(arg);

                    // Make sure it succeeded
                    if (!obj) {
                        PyErr_Print();
                        return;
                    }

                    // now figure out where it's C++ object is...
                    if (! wxPyConvertWrappedPtr(obj, (void **)&thPtr, wxT("wxHtmlWinTagHandler"))) {
                        return;
                    }

                    // add it,
                    parser->AddTagHandler(thPtr);

                    // and track it
                    m_tagHandlersArray.Add(obj);
                }
            }

            static void AddPyTagHandler(PyObject* tagHandlerClass) {
                wxPyThreadBlocker blocker;
                Py_INCREF(tagHandlerClass);
                s_tagHandlerClasses.Add(tagHandlerClass);
            }

        private:
            wxDECLARE_DYNAMIC_CLASS(wxPyHtmlTagsModule);

            static wxArrayPtrVoid       s_tagHandlerClasses;
            wxArrayPtrVoid              m_tagHandlersArray;
        };

        wxIMPLEMENT_DYNAMIC_CLASS(wxPyHtmlTagsModule, wxHtmlTagsModule)
        wxArrayPtrVoid wxPyHtmlTagsModule::s_tagHandlerClasses;
        
void _HtmlWinParser_AddTagHandler_function(PyObject* tagHandlerClass)
{
    wxPyHtmlTagsModule::AddPyTagHandler(tagHandlerClass);
    wxPyReinitializeModules();
}
        #include <wx/html/htmlwin.h>
        #include <wx/html/htmprint.h>
        #include <wx/html/helpctrl.h>
        #include <wx/html/helpwnd.h>
        #include <wx/html/helpfrm.h>
        #include <wx/html/helpdlg.h>
        

int sipVH__html_88(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& string,bool caseSensitive)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Nb", new  ::wxString(string), sipType_wxString, SIP_NULLPTR, caseSensitive);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__html_87(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint n,const  ::wxString& string)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "uN", n, new  ::wxString(string), sipType_wxString, SIP_NULLPTR);
}

 ::wxString sipVH__html_86(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint n)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "u", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

uint sipVH__html_85(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    uint sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "u", &sipRes);

    return sipRes;
}

 ::wxString sipVH__html_84(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

void sipVH__html_83(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n,const  ::wxHtmlLinkInfo& link)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "=N", n, new  ::wxHtmlLinkInfo(link), sipType_wxHtmlLinkInfo, SIP_NULLPTR);
}

 ::wxOrientation sipVH__html_82(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxOrientation sipRes = ::wxHORIZONTAL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxOrientation, &sipRes);

    return sipRes;
}

void sipVH__html_81(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t row)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "=", row);
}

void sipVH__html_80(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t rowMin,size_t rowMax)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "==", rowMin, rowMax);
}

 ::wxCoord sipVH__html_79(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxCoord sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__html_78(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,const  ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN=", &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, n);
}

void sipVH__html_77(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DD=", &dc, sipType_wxDC, SIP_NULLPTR, &rect, sipType_wxRect, SIP_NULLPTR, n);
}

 ::wxCoord sipVH__html_76(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n)
{
     ::wxCoord sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxHtmlHelpFrame* sipVH__html_75(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlHelpData*data)
{
     ::wxHtmlHelpFrame* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", data, sipType_wxHtmlHelpData, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlHelpFrame, &sipRes);

    return sipRes;
}

 ::wxHtmlHelpDialog* sipVH__html_74(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlHelpData*data)
{
     ::wxHtmlHelpDialog* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", data, sipType_wxHtmlHelpData, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlHelpDialog, &sipRes);

    return sipRes;
}

bool sipVH__html_73(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& file,int server)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxString(file), sipType_wxString, SIP_NULLPTR, server);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__html_72(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxConfigBase*cfg,const  ::wxString& path)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN", cfg, sipType_wxConfigBase, SIP_NULLPTR, new  ::wxString(path), sipType_wxString, SIP_NULLPTR);
}

bool sipVH__html_71(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long blockNo)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", blockNo);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__html_70(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text,const  ::wxPoint& pos)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxFrame* sipVH__html_69(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxSize*size, ::wxPoint*pos,bool*newFrameEachTime)
{
     ::wxFrame* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H0H4H4b)", sipType_wxFrame, &sipRes, sipType_wxSize, size, sipType_wxPoint, pos, newFrameEachTime);

    return sipRes;
}

bool sipVH__html_68(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& keyword, ::wxHelpSearchMode mode)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(keyword), sipType_wxString, SIP_NULLPTR, mode, sipType_wxHelpSearchMode);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__html_67(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& file)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(file), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__html_66(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& titleFormat,const  ::wxSize& size,const  ::wxPoint& pos,bool newFrameEachTime)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "NNNb", new  ::wxString(titleFormat), sipType_wxString, SIP_NULLPTR, new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR, newFrameEachTime);
}

void sipVH__html_65(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parentWindow)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", parentWindow, sipType_wxWindow, SIP_NULLPTR);
}

void sipVH__html_64(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& viewer,long flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Nl", new  ::wxString(viewer), sipType_wxString, SIP_NULLPTR, flags);
}

void sipVH__html_63(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text,bool show)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Nb", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, show);
}

 ::wxStatusBar* sipVH__html_62(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int number,long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxStatusBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iliN", number, style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxStatusBar, &sipRes);

    return sipRes;
}

 ::wxToolBar* sipVH__html_61(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxToolBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "liN", style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxToolBar, &sipRes);

    return sipRes;
}

void sipVH__html_60(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC*dc,double pixel_scale)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Dd", dc, sipType_wxDC, SIP_NULLPTR, pixel_scale);
}

 ::wxFont* sipVH__html_59(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxFont* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxFont, &sipRes);

    return sipRes;
}

void sipVH__html_58(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*minPage,int*maxPage,int*selPageFrom,int*selPageTo)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(iiii)", minPage, maxPage, selPageFrom, selPageTo);
}

bool sipVH__html_57(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int startPage,int endPage)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", startPage, endPage);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__html_56(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int page)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", page);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxEventCategory sipVH__html_55(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEventCategory sipRes = ::wxEVT_CATEGORY_UI;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxEventCategory, &sipRes);

    return sipRes;
}

 ::wxEvent* sipVH__html_54(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEvent* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxEvent, &sipRes);

    return sipRes;
}

void sipVH__html_53(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlCell*cell, ::wxCoord x, ::wxCoord y)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Dii", cell, sipType_wxHtmlCell, SIP_NULLPTR, x, y);
}

bool sipVH__html_52(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlCell*cell, ::wxCoord x, ::wxCoord y,const  ::wxMouseEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DiiN", cell, sipType_wxHtmlCell, SIP_NULLPTR, x, y, new  ::wxMouseEvent(event), sipType_wxMouseEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxSize sipVH__html_51(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& size)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

bool sipVH__html_50(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*child)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", child, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__html_49(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxScrollWinEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxScrollWinEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__html_48(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &dc, sipType_wxDC, SIP_NULLPTR);
}

void sipVH__html_47(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*child)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", child, sipType_wxWindowBase, SIP_NULLPTR);
}

bool sipVH__html_46(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__html_45(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int direction,int size,int availableOtherDir)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iii", direction, size, availableOtherDir);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxPoint sipVH__html_44(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPoint sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPoint, &sipRes);

    return sipRes;
}

 ::wxValidator* sipVH__html_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxValidator* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxValidator, &sipRes);

    return sipRes;
}

void sipVH__html_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxValidator& validator)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxValidator *>(&validator), sipType_wxValidator, SIP_NULLPTR);
}

bool sipVH__html_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__html_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool enable)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", enable);
}

void sipVH__html_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*width,int*height)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(ii)", width, height);
}

void sipVH__html_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height,int sizeFlags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiii", x, y, width, height, sizeFlags);
}

void sipVH__html_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiiii", minW, minH, maxW, maxH, incW, incH);
}

void sipVH__html_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiii", x, y, width, height);
}

void sipVH__html_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowVariant variant)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "F", variant, sipType_wxWindowVariant);
}

 ::wxBorder sipVH__html_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBorder sipRes = ::wxBORDER_DEFAULT;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxBorder, &sipRes);

    return sipRes;
}

 ::wxSize sipVH__html_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

 ::wxCursor sipVH__html_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlWindowInterface::HTMLCursor type)
{
     ::wxCursor sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", type, sipType_wxHtmlWindowInterface_HTMLCursor);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxCursor, &sipRes);

    return sipRes;
}

void sipVH__html_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxBitmap& bmpBg)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxBitmap(bmpBg), sipType_wxBitmap, SIP_NULLPTR);
}

void sipVH__html_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxColour& clr)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxColour(clr), sipType_wxColour, SIP_NULLPTR);
}

 ::wxColour sipVH__html_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxColour sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxColour, &sipRes);

    return sipRes;
}

 ::wxWindow* sipVH__html_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxWindow, &sipRes);

    return sipRes;
}

 ::wxPoint sipVH__html_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlCell*cell,const  ::wxPoint& pos)
{
     ::wxPoint sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", cell, sipType_wxHtmlCell, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPoint, &sipRes);

    return sipRes;
}

 ::wxHtmlOpeningStatus sipVH__html_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlURLType type,const  ::wxString& url, ::wxString*redirectTo)
{
     ::wxHtmlOpeningStatus sipRes = ::wxHTML_OPEN;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "FN", type, sipType_wxHtmlURLType, new  ::wxString(url), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH4)", sipType_wxHtmlOpeningStatus, &sipRes, sipType_wxString, redirectTo);

    return sipRes;
}

void sipVH__html_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxHtmlLinkInfo& link)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxHtmlLinkInfo(link), sipType_wxHtmlLinkInfo, SIP_NULLPTR);
}

void sipVH__html_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxHtmlTag& tag)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxHtmlTag *>(&tag), sipType_wxHtmlTag, SIP_NULLPTR);
}

 ::wxFSFile* sipVH__html_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlURLType type,const  ::wxString& url)
{
     ::wxFSFile* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "FN", type, sipType_wxHtmlURLType, new  ::wxString(url), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxFSFile, &sipRes);

    return sipRes;
}

void sipVH__html_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& source)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxString(source), sipType_wxString, SIP_NULLPTR);
}

 ::wxObject* sipVH__html_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxObject, &sipRes);

    return sipRes;
}

void sipVH__html_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

void sipVH__html_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlTagHandler*handler)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", handler, sipType_wxHtmlTagHandler, SIP_NULLPTR);
}

void sipVH__html_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlParser*parser)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", parser, sipType_wxHtmlParser, SIP_NULLPTR);
}

bool sipVH__html_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxHtmlTag& tag)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxHtmlTag *>(&tag), sipType_wxHtmlTag, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__html_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxString sipVH__html_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFSFile& file)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxFSFile *>(&file), sipType_wxFSFile, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__html_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFSFile& file)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxFSFile *>(&file), sipType_wxFSFile, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__html_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlSelection*sel)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", sel, sipType_wxHtmlSelection, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

void sipVH__html_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", x, y);
}

bool sipVH__html_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlWindowInterface*window,const  ::wxPoint& pos,const  ::wxMouseEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNN", window, sipType_wxHtmlWindowInterface, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR, new  ::wxMouseEvent(event), sipType_wxMouseEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__html_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int w)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "i", w);
}

 ::wxCursor sipVH__html_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlWindowInterface*window,const  ::wxPoint& rePos)
{
     ::wxCursor sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", window, sipType_wxHtmlWindowInterface, SIP_NULLPTR, new  ::wxPoint(rePos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxCursor, &sipRes);

    return sipRes;
}

 ::wxCursor sipVH__html_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxHtmlWindowInterface*window)
{
     ::wxCursor sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", window, sipType_wxHtmlWindowInterface, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxCursor, &sipRes);

    return sipRes;
}

 ::wxHtmlLinkInfo* sipVH__html_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y)
{
     ::wxHtmlLinkInfo* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", x, y);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlLinkInfo, &sipRes);

    return sipRes;
}

 ::wxHtmlCell* sipVH__html_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxHtmlCell* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlCell, &sipRes);

    return sipRes;
}

 ::wxHtmlCell* sipVH__html_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCoord x, ::wxCoord y,uint flags)
{
     ::wxHtmlCell* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iiu", x, y, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlCell, &sipRes);

    return sipRes;
}

const  ::wxHtmlCell* sipVH__html_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int condition,const void*param)
{
     ::wxHtmlCell* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "is", condition, param);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxHtmlCell, &sipRes);

    return sipRes;
}

void sipVH__html_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,int x,int y, ::wxHtmlRenderingInfo& info)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DiiD", &dc, sipType_wxDC, SIP_NULLPTR, x, y, &info, sipType_wxHtmlRenderingInfo, SIP_NULLPTR);
}

void sipVH__html_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,int x,int y,int view_y1,int view_y2, ::wxHtmlRenderingInfo& info)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DiiiiD", &dc, sipType_wxDC, SIP_NULLPTR, x, y, view_y1, view_y2, &info, sipType_wxHtmlRenderingInfo, SIP_NULLPTR);
}

bool sipVH__html_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*pagebreak,int pageHeight)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", *pagebreak, pageHeight);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bi)", &sipRes, pagebreak);

    return sipRes;
}

 ::wxColour sipVH__html_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxColour& clr)
{
     ::wxColour sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxColour(clr), sipType_wxColour, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxColour, &sipRes);

    return sipRes;
}


PyDoc_STRVAR(doc_HtmlWinParser_AddTagHandler, "HtmlWinParser_AddTagHandler(tagHandlerClass)");

extern "C" {static PyObject *func_HtmlWinParser_AddTagHandler(PyObject *,PyObject *, PyObject *);}
static PyObject *func_HtmlWinParser_AddTagHandler(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        PyObject * tagHandlerClass;

        static const char *sipKwdList[] = {
            sipName_tagHandlerClass,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "P0", &tagHandlerClass))
        {
            int sipIsErr = 0;

    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    _HtmlWinParser_AddTagHandler_function(tagHandlerClass);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_HtmlWinParser_AddTagHandler, SIP_NULLPTR);

    return SIP_NULLPTR;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlEasyPrinting__PromptMode, {0}, 0}, sipNameNr_PromptMode, 7, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlWindowInterface__HTMLCursor, {0}, 0}, sipNameNr_HTMLCursor, 38, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlOpeningStatus, {0}, 0}, sipNameNr_HtmlOpeningStatus, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlURLType, {0}, 0}, sipNameNr_HtmlURLType, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlScriptMode, {0}, 0}, sipNameNr_HtmlScriptMode, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxHtmlSelectionState, {0}, 0}, sipNameNr_HtmlSelectionState, -1, SIP_NULLPTR},
};

/* These are the enum members of all global enums. */
static sipEnumMemberDef enummembers[] = {
    {sipName_HTML_BLOCK, static_cast<int>(::wxHTML_BLOCK), 22},
    {sipName_HTML_OPEN, static_cast<int>(::wxHTML_OPEN), 22},
    {sipName_HTML_REDIRECT, static_cast<int>(::wxHTML_REDIRECT), 22},
    {sipName_HTML_SCRIPT_NORMAL, static_cast<int>(::wxHTML_SCRIPT_NORMAL), 28},
    {sipName_HTML_SCRIPT_SUB, static_cast<int>(::wxHTML_SCRIPT_SUB), 28},
    {sipName_HTML_SCRIPT_SUP, static_cast<int>(::wxHTML_SCRIPT_SUP), 28},
    {sipName_HTML_SEL_CHANGING, static_cast<int>(::wxHTML_SEL_CHANGING), 30},
    {sipName_HTML_SEL_IN, static_cast<int>(::wxHTML_SEL_IN), 30},
    {sipName_HTML_SEL_OUT, static_cast<int>(::wxHTML_SEL_OUT), 30},
    {sipName_HTML_URL_IMAGE, static_cast<int>(::wxHTML_URL_IMAGE), 33},
    {sipName_HTML_URL_OTHER, static_cast<int>(::wxHTML_URL_OTHER), 33},
    {sipName_HTML_URL_PAGE, static_cast<int>(::wxHTML_URL_PAGE), 33},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes__html[] = {
    &sipTypeDef__html_wxHtmlBookRecArray.ctd_base,
    &sipTypeDef__html_wxHtmlBookRecord.ctd_base,
    &sipTypeDef__html_wxHtmlCell.ctd_base,
    &sipTypeDef__html_wxHtmlCellEvent.ctd_base,
    &sipTypeDef__html_wxHtmlColourCell.ctd_base,
    &sipTypeDef__html_wxHtmlContainerCell.ctd_base,
    &sipTypeDef__html_wxHtmlDCRenderer.ctd_base,
    &sipTypeDef__html_wxHtmlEasyPrinting.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef__html_wxHtmlFilter.ctd_base,
    &sipTypeDef__html_wxHtmlFontCell.ctd_base,
    &sipTypeDef__html_wxHtmlHelpController.ctd_base,
    &sipTypeDef__html_wxHtmlHelpData.ctd_base,
    &sipTypeDef__html_wxHtmlHelpDataItem.ctd_base,
    &sipTypeDef__html_wxHtmlHelpDataItems.ctd_base,
    &sipTypeDef__html_wxHtmlHelpDialog.ctd_base,
    &sipTypeDef__html_wxHtmlHelpFrame.ctd_base,
    &sipTypeDef__html_wxHtmlHelpWindow.ctd_base,
    &sipTypeDef__html_wxHtmlLinkEvent.ctd_base,
    &sipTypeDef__html_wxHtmlLinkInfo.ctd_base,
    &sipTypeDef__html_wxHtmlListBox.ctd_base,
    &sipTypeDef__html_wxHtmlModalHelp.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef__html_wxHtmlParser.ctd_base,
    &sipTypeDef__html_wxHtmlPrintout.ctd_base,
    &sipTypeDef__html_wxHtmlRenderingInfo.ctd_base,
    &sipTypeDef__html_wxHtmlRenderingState.ctd_base,
    &sipTypeDef__html_wxHtmlRenderingStyle.ctd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef__html_wxHtmlSelection.ctd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef__html_wxHtmlTag.ctd_base,
    &sipTypeDef__html_wxHtmlTagHandler.ctd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef__html_wxHtmlWidgetCell.ctd_base,
    &sipTypeDef__html_wxHtmlWinParser.ctd_base,
    &sipTypeDef__html_wxHtmlWinTagHandler.ctd_base,
    &sipTypeDef__html_wxHtmlWindow.ctd_base,
    &sipTypeDef__html_wxHtmlWindowInterface.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef__html_wxHtmlWordCell.ctd_base,
    &sipTypeDef__html_wxHtmlWordWithTabsCell.ctd_base,
    &sipTypeDef__html_wxSimpleHtmlListBox.ctd_base,
};


/* This defines the types that this module needs to import from _core. */
sipImportedTypeDef sipImportedTypes__html__core[] = {
    {"_ScrolledWindowBase"},
    {"wxArrayInt"},
    {"wxArrayString"},
    {"wxBitmap"},
    {"wxBorder"},
    {"wxColour"},
    {"wxCommandEvent"},
    {"wxConfigBase"},
    {"wxCursor"},
    {"wxDC"},
    {"wxDialog"},
    {"wxEvent"},
    {"wxEventCategory"},
    {"wxEvtHandler"},
    {"wxFSFile"},
    {"wxFileName"},
    {"wxFileSystem"},
    {"wxFont"},
    {"wxFrame"},
    {"wxHelpControllerBase"},
    {"wxHelpSearchMode"},
    {"wxItemContainer"},
    {"wxItemContainerImmutable"},
    {"wxMouseEvent"},
    {"wxNonOwnedWindow"},
    {"wxObject"},
    {"wxOrientation"},
    {"wxPageSetupDialogData"},
    {"wxPanel"},
    {"wxPoint"},
    {"wxPrintData"},
    {"wxPrintout"},
    {"wxRect"},
    {"wxScrollWinEvent"},
    {"wxScrolledWindow"},
    {"wxSize"},
    {"wxStatusBar"},
    {"wxString"},
    {"wxToolBar"},
    {"wxTopLevelWindow"},
    {"wxTrackable"},
    {"wxVListBox"},
    {"wxVScrolledWindow"},
    {"wxValidator"},
    {"wxVarScrollHelperBase"},
    {"wxVarVScrollHelper"},
    {"wxVisualAttributes"},
    {"wxWindow"},
    {"wxWindowBase"},
    {"wxWindowVariant"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"wx._core", sipImportedTypes__html__core, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* Define the strings to be added to this module dictionary. */
static sipStringInstanceDef stringInstances[] = {
    {sipName_HtmlListBoxNameStr, wxHtmlListBoxNameStr, 'N'},
    {sipName_SimpleHtmlListBoxNameStr, wxSimpleHtmlListBoxNameStr, 'N'},
    {0, 0, 0}
};


/* Define the ints to be added to this module dictionary. */
static sipIntInstanceDef intInstances[] = {
    {sipName_HF_BOOKMARKS, wxHF_BOOKMARKS},
    {sipName_HF_CONTENTS, wxHF_CONTENTS},
    {sipName_HF_DEFAULT_STYLE, wxHF_DEFAULT_STYLE},
    {sipName_HF_DIALOG, wxHF_DIALOG},
    {sipName_HF_EMBEDDED, wxHF_EMBEDDED},
    {sipName_HF_FLAT_TOOLBAR, wxHF_FLAT_TOOLBAR},
    {sipName_HF_FRAME, wxHF_FRAME},
    {sipName_HF_ICONS_BOOK, wxHF_ICONS_BOOK},
    {sipName_HF_ICONS_BOOK_CHAPTER, wxHF_ICONS_BOOK_CHAPTER},
    {sipName_HF_ICONS_FOLDER, wxHF_ICONS_FOLDER},
    {sipName_HF_INDEX, wxHF_INDEX},
    {sipName_HF_MERGE_BOOKS, wxHF_MERGE_BOOKS},
    {sipName_HF_MODAL, wxHF_MODAL},
    {sipName_HF_OPEN_FILES, wxHF_OPEN_FILES},
    {sipName_HF_PRINT, wxHF_PRINT},
    {sipName_HF_SEARCH, wxHF_SEARCH},
    {sipName_HF_TOOLBAR, wxHF_TOOLBAR},
    {sipName_HLB_DEFAULT_STYLE, wxHLB_DEFAULT_STYLE},
    {sipName_HLB_MULTIPLE, wxHLB_MULTIPLE},
    {sipName_HTML_ALIGN_BOTTOM, wxHTML_ALIGN_BOTTOM},
    {sipName_HTML_ALIGN_CENTER, wxHTML_ALIGN_CENTER},
    {sipName_HTML_ALIGN_JUSTIFY, wxHTML_ALIGN_JUSTIFY},
    {sipName_HTML_ALIGN_LEFT, wxHTML_ALIGN_LEFT},
    {sipName_HTML_ALIGN_RIGHT, wxHTML_ALIGN_RIGHT},
    {sipName_HTML_ALIGN_TOP, wxHTML_ALIGN_TOP},
    {sipName_HTML_CLR_BACKGROUND, wxHTML_CLR_BACKGROUND},
    {sipName_HTML_CLR_FOREGROUND, wxHTML_CLR_FOREGROUND},
    {sipName_HTML_CLR_TRANSPARENT_BACKGROUND, wxHTML_CLR_TRANSPARENT_BACKGROUND},
    {sipName_HTML_COND_ISANCHOR, wxHTML_COND_ISANCHOR},
    {sipName_HTML_COND_ISIMAGEMAP, wxHTML_COND_ISIMAGEMAP},
    {sipName_HTML_COND_USER, wxHTML_COND_USER},
    {sipName_HTML_INDENT_ALL, wxHTML_INDENT_ALL},
    {sipName_HTML_INDENT_BOTTOM, wxHTML_INDENT_BOTTOM},
    {sipName_HTML_INDENT_HORIZONTAL, wxHTML_INDENT_HORIZONTAL},
    {sipName_HTML_INDENT_LEFT, wxHTML_INDENT_LEFT},
    {sipName_HTML_INDENT_RIGHT, wxHTML_INDENT_RIGHT},
    {sipName_HTML_INDENT_TOP, wxHTML_INDENT_TOP},
    {sipName_HTML_INDENT_VERTICAL, wxHTML_INDENT_VERTICAL},
    {sipName_HTML_UNITS_PERCENT, wxHTML_UNITS_PERCENT},
    {sipName_HTML_UNITS_PIXELS, wxHTML_UNITS_PIXELS},
    {sipName_HW_DEFAULT_STYLE, wxHW_DEFAULT_STYLE},
    {sipName_HW_NO_SELECTION, wxHW_NO_SELECTION},
    {sipName_HW_SCROLLBAR_AUTO, wxHW_SCROLLBAR_AUTO},
    {sipName_HW_SCROLLBAR_NEVER, wxHW_SCROLLBAR_NEVER},
    {sipName_ID_HTML_HELPFRAME, wxID_HTML_HELPFRAME},
    {sipName_INT_MAX, INT_MAX},
    {sipName_wxEVT_HTML_CELL_CLICKED, wxEVT_HTML_CELL_CLICKED},
    {sipName_wxEVT_HTML_CELL_HOVER, wxEVT_HTML_CELL_HOVER},
    {sipName_wxEVT_HTML_LINK_CLICKED, wxEVT_HTML_LINK_CLICKED},
    {sipName_ID_HTML_PANEL, wxID_HTML_PANEL},
    {sipName_ID_HTML_BACK, wxID_HTML_BACK},
    {sipName_ID_HTML_FORWARD, wxID_HTML_FORWARD},
    {sipName_ID_HTML_UPNODE, wxID_HTML_UPNODE},
    {sipName_ID_HTML_UP, wxID_HTML_UP},
    {sipName_ID_HTML_DOWN, wxID_HTML_DOWN},
    {sipName_ID_HTML_PRINT, wxID_HTML_PRINT},
    {sipName_ID_HTML_OPENFILE, wxID_HTML_OPENFILE},
    {sipName_ID_HTML_OPTIONS, wxID_HTML_OPTIONS},
    {sipName_ID_HTML_BOOKMARKSLIST, wxID_HTML_BOOKMARKSLIST},
    {sipName_ID_HTML_BOOKMARKSADD, wxID_HTML_BOOKMARKSADD},
    {sipName_ID_HTML_BOOKMARKSREMOVE, wxID_HTML_BOOKMARKSREMOVE},
    {sipName_ID_HTML_TREECTRL, wxID_HTML_TREECTRL},
    {sipName_ID_HTML_INDEXPAGE, wxID_HTML_INDEXPAGE},
    {sipName_ID_HTML_INDEXLIST, wxID_HTML_INDEXLIST},
    {sipName_ID_HTML_INDEXTEXT, wxID_HTML_INDEXTEXT},
    {sipName_ID_HTML_INDEXBUTTON, wxID_HTML_INDEXBUTTON},
    {sipName_ID_HTML_INDEXBUTTONALL, wxID_HTML_INDEXBUTTONALL},
    {sipName_ID_HTML_NOTEBOOK, wxID_HTML_NOTEBOOK},
    {sipName_ID_HTML_SEARCHPAGE, wxID_HTML_SEARCHPAGE},
    {sipName_ID_HTML_SEARCHTEXT, wxID_HTML_SEARCHTEXT},
    {sipName_ID_HTML_SEARCHLIST, wxID_HTML_SEARCHLIST},
    {sipName_ID_HTML_SEARCHBUTTON, wxID_HTML_SEARCHBUTTON},
    {sipName_ID_HTML_SEARCHCHOICE, wxID_HTML_SEARCHCHOICE},
    {sipName_ID_HTML_COUNTINFO, wxID_HTML_COUNTINFO},
    {sipName_PAGE_ODD, wxPAGE_ODD},
    {sipName_PAGE_EVEN, wxPAGE_EVEN},
    {sipName_PAGE_ALL, wxPAGE_ALL},
    {sipName_HTML_FIND_EXACT, wxHTML_FIND_EXACT},
    {sipName_HTML_FIND_NEAREST_BEFORE, wxHTML_FIND_NEAREST_BEFORE},
    {sipName_HTML_FIND_NEAREST_AFTER, wxHTML_FIND_NEAREST_AFTER},
    {0, 0}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI__html = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_wx__html,
    0,
    sipStrings__html,
    importsTable,
    SIP_NULLPTR,
    43,
    sipExportedTypes__html,
    SIP_NULLPTR,
    12,
    enummembers,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, stringInstances, intInstances, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI__html;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit__html
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        init_html
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_MLNAME_CAST(sipName_HtmlWinParser_AddTagHandler), SIP_MLMETH_CAST(func_HtmlWinParser_AddTagHandler), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_HtmlWinParser_AddTagHandler)},
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "wx._html",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_wx__html, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_wx__html), sip_methods);
#endif

    if (sipModule == SIP_NULLPTR)
        SIP_MODULE_RETURN(SIP_NULLPTR);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("wx.siplib");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("wx.siplib"));
#endif

    if (sip_sipmod == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == SIP_NULLPTR || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI__html = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "wx.siplib._C_API"));
#else
    sipAPI__html = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI__html == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
#endif

        wxPyReinitializeModules();
        
    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI__html,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI__html,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    SIP_MODULE_RETURN(sipModule);
}
