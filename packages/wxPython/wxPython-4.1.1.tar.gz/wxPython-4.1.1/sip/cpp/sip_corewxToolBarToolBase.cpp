/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"

        #include <wx/toolbar.h>

        #include <wx/toolbar.h>
        #include <wx/bitmap.h>
        #include <wx/control.h>
        #include <wx/menu.h>
        #include <wx/object.h>
        #include <wx/object.h>
        #include <wx/object.h>
    wxToolBar* _wxToolBarToolBase_GetToolBar(wxToolBarToolBase* self)
    {
        return (wxToolBar*)self->GetToolBar();
    }
    wxPyUserData* _wxToolBarToolBase_GetClientData(const wxToolBarToolBase* self)
    {
        return dynamic_cast<wxPyUserData*>(self->GetClientData());
    }


PyDoc_STRVAR(doc_wxToolBarToolBase_GetId, "GetId() -> int");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetId(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetId();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetControl, "GetControl() -> Control");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetControl(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetControl(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxControl*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetControl();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxControl,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetControl, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetToolBar, "GetToolBar() -> ToolBar\n"
"\n"
"Return the toolbar this tool is a member of.");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetToolBar(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetToolBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxToolBar*sipRes = 0;
            int sipIsErr = 0;

        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxToolBarToolBase_GetToolBar(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxToolBar,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetToolBar, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsStretchable, "IsStretchable() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsStretchable(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsStretchable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsStretchable();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsStretchable, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsButton, "IsButton() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsButton(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsButton();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsButton, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsControl, "IsControl() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsControl(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsControl(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsControl();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsControl, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsSeparator, "IsSeparator() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsSeparator(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsSeparator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsSeparator();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsSeparator, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsStretchableSpace, "IsStretchableSpace() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsStretchableSpace(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsStretchableSpace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsStretchableSpace();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsStretchableSpace, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetStyle, "GetStyle() -> int");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetStyle(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetStyle();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return SIPLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetStyle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetKind, "GetKind() -> ItemKind");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetKind(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetKind(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxItemKind sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetKind();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_wxItemKind);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetKind, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_MakeStretchable, "MakeStretchable()");

extern "C" {static PyObject *meth_wxToolBarToolBase_MakeStretchable(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_MakeStretchable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->MakeStretchable();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_MakeStretchable, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsEnabled, "IsEnabled() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsEnabled(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsEnabled();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsEnabled, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_IsToggled, "IsToggled() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_IsToggled(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_IsToggled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->IsToggled();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_IsToggled, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_CanBeToggled, "CanBeToggled() -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_CanBeToggled(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_CanBeToggled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->CanBeToggled();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_CanBeToggled, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetNormalBitmap, "GetNormalBitmap() -> Bitmap");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetNormalBitmap(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetNormalBitmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxBitmap*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxBitmap(sipCpp->GetNormalBitmap());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxBitmap,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetNormalBitmap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetDisabledBitmap, "GetDisabledBitmap() -> Bitmap");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetDisabledBitmap(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetDisabledBitmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxBitmap*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxBitmap(sipCpp->GetDisabledBitmap());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxBitmap,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetDisabledBitmap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetBitmap, "GetBitmap() -> Bitmap");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetBitmap(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetBitmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxBitmap*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxBitmap(sipCpp->GetBitmap());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxBitmap,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetBitmap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetLabel, "GetLabel() -> String");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetLabel(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetLabel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(sipCpp->GetLabel());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetShortHelp, "GetShortHelp() -> String");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetShortHelp(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetShortHelp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(sipCpp->GetShortHelp());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetShortHelp, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetLongHelp, "GetLongHelp() -> String");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetLongHelp(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetLongHelp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(sipCpp->GetLongHelp());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetLongHelp, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetClientData, "GetClientData() -> PyUserData");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetClientData(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetClientData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxPyUserData*sipRes = 0;
            int sipIsErr = 0;

        PyErr_Clear();
        Py_BEGIN_ALLOW_THREADS
        sipRes = _wxToolBarToolBase_GetClientData(sipCpp);
        Py_END_ALLOW_THREADS
        if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxPyUserData,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetClientData, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_Enable, "Enable(enable) -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_Enable(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_Enable(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool enable;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_enable,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, &enable))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->Enable(enable);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_Enable, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_Toggle, "Toggle(toggle) -> bool\n"
"Toggle()\n"
"");

extern "C" {static PyObject *meth_wxToolBarToolBase_Toggle(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_Toggle(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool toggle;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_toggle,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, &toggle))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->Toggle(toggle);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    {
         ::wxToolBarToolBase *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->Toggle();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_Toggle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetToggle, "SetToggle(toggle) -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetToggle(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetToggle(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool toggle;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_toggle,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "Bb", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, &toggle))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->SetToggle(toggle);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetToggle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetShortHelp, "SetShortHelp(help) -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetShortHelp(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetShortHelp(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* help;
        int helpState = 0;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_help,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxString,&help, &helpState))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->SetShortHelp(*help);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(help),sipType_wxString,helpState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetShortHelp, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetLongHelp, "SetLongHelp(help) -> bool");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetLongHelp(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetLongHelp(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* help;
        int helpState = 0;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_help,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxString,&help, &helpState))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->SetLongHelp(*help);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(help),sipType_wxString,helpState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetLongHelp, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetNormalBitmap, "SetNormalBitmap(bmp)");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetNormalBitmap(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetNormalBitmap(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxBitmap* bmp;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_bmp,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxBitmap, &bmp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetNormalBitmap(*bmp);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetNormalBitmap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetDisabledBitmap, "SetDisabledBitmap(bmp)");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetDisabledBitmap(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetDisabledBitmap(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxBitmap* bmp;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_bmp,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ9", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxBitmap, &bmp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetDisabledBitmap(*bmp);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetDisabledBitmap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetLabel, "SetLabel(label)");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetLabel(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetLabel(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* label;
        int labelState = 0;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_label,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ1", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxString,&label, &labelState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetLabel(*label);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label),sipType_wxString,labelState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetClientData, "SetClientData(clientData)");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetClientData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetClientData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxPyUserData* clientData;
        int clientDataState = 0;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_clientData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ2", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxPyUserData,&clientData, &clientDataState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetClientData(clientData);
            Py_END_ALLOW_THREADS
            sipReleaseType(clientData,sipType_wxPyUserData,clientDataState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetClientData, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_Detach, "Detach()");

extern "C" {static PyObject *meth_wxToolBarToolBase_Detach(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_Detach(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->Detach();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_Detach, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_Attach, "Attach(tbar)");

extern "C" {static PyObject *meth_wxToolBarToolBase_Attach(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_Attach(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxToolBar* tbar;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_tbar,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ8", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxToolBar, &tbar))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->Attach(tbar);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_Attach, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_SetDropdownMenu, "SetDropdownMenu(menu)");

extern "C" {static PyObject *meth_wxToolBarToolBase_SetDropdownMenu(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_SetDropdownMenu(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxMenu* menu;
         ::wxToolBarToolBase *sipCpp;

        static const char *sipKwdList[] = {
            sipName_menu,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "BJ:", &sipSelf, sipType_wxToolBarToolBase, &sipCpp, sipType_wxMenu, &menu))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipCpp->SetDropdownMenu(menu);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_SetDropdownMenu, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_wxToolBarToolBase_GetDropdownMenu, "GetDropdownMenu() -> Menu");

extern "C" {static PyObject *meth_wxToolBarToolBase_GetDropdownMenu(PyObject *, PyObject *);}
static PyObject *meth_wxToolBarToolBase_GetDropdownMenu(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxToolBarToolBase *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_wxToolBarToolBase, &sipCpp))
        {
             ::wxMenu*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->GetDropdownMenu();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxMenu,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_ToolBarToolBase, sipName_GetDropdownMenu, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_wxToolBarToolBase(void *, const sipTypeDef *);}
static void *cast_wxToolBarToolBase(void *sipCppV, const sipTypeDef *targetType)
{
     ::wxToolBarToolBase *sipCpp = reinterpret_cast< ::wxToolBarToolBase *>(sipCppV);

    if (targetType == sipType_wxObject)
        return static_cast< ::wxObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_wxToolBarToolBase(void *, int);}
static void release_wxToolBarToolBase(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxToolBarToolBase *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_wxToolBarToolBase(sipSimpleWrapper *);}
static void dealloc_wxToolBarToolBase(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxToolBarToolBase(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_wxToolBarToolBase[] = {{371, 255, 1}};


static PyMethodDef methods_wxToolBarToolBase[] = {
    {SIP_MLNAME_CAST(sipName_Attach), SIP_MLMETH_CAST(meth_wxToolBarToolBase_Attach), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_Attach)},
    {SIP_MLNAME_CAST(sipName_CanBeToggled), meth_wxToolBarToolBase_CanBeToggled, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_CanBeToggled)},
    {SIP_MLNAME_CAST(sipName_Detach), meth_wxToolBarToolBase_Detach, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_Detach)},
    {SIP_MLNAME_CAST(sipName_Enable), SIP_MLMETH_CAST(meth_wxToolBarToolBase_Enable), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_Enable)},
    {SIP_MLNAME_CAST(sipName_GetBitmap), meth_wxToolBarToolBase_GetBitmap, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetBitmap)},
    {SIP_MLNAME_CAST(sipName_GetClientData), meth_wxToolBarToolBase_GetClientData, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetClientData)},
    {SIP_MLNAME_CAST(sipName_GetControl), meth_wxToolBarToolBase_GetControl, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetControl)},
    {SIP_MLNAME_CAST(sipName_GetDisabledBitmap), meth_wxToolBarToolBase_GetDisabledBitmap, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetDisabledBitmap)},
    {SIP_MLNAME_CAST(sipName_GetDropdownMenu), meth_wxToolBarToolBase_GetDropdownMenu, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetDropdownMenu)},
    {SIP_MLNAME_CAST(sipName_GetId), meth_wxToolBarToolBase_GetId, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetId)},
    {SIP_MLNAME_CAST(sipName_GetKind), meth_wxToolBarToolBase_GetKind, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetKind)},
    {SIP_MLNAME_CAST(sipName_GetLabel), meth_wxToolBarToolBase_GetLabel, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetLabel)},
    {SIP_MLNAME_CAST(sipName_GetLongHelp), meth_wxToolBarToolBase_GetLongHelp, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetLongHelp)},
    {SIP_MLNAME_CAST(sipName_GetNormalBitmap), meth_wxToolBarToolBase_GetNormalBitmap, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetNormalBitmap)},
    {SIP_MLNAME_CAST(sipName_GetShortHelp), meth_wxToolBarToolBase_GetShortHelp, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetShortHelp)},
    {SIP_MLNAME_CAST(sipName_GetStyle), meth_wxToolBarToolBase_GetStyle, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetStyle)},
    {SIP_MLNAME_CAST(sipName_GetToolBar), meth_wxToolBarToolBase_GetToolBar, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_GetToolBar)},
    {SIP_MLNAME_CAST(sipName_IsButton), meth_wxToolBarToolBase_IsButton, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsButton)},
    {SIP_MLNAME_CAST(sipName_IsControl), meth_wxToolBarToolBase_IsControl, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsControl)},
    {SIP_MLNAME_CAST(sipName_IsEnabled), meth_wxToolBarToolBase_IsEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsEnabled)},
    {SIP_MLNAME_CAST(sipName_IsSeparator), meth_wxToolBarToolBase_IsSeparator, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsSeparator)},
    {SIP_MLNAME_CAST(sipName_IsStretchable), meth_wxToolBarToolBase_IsStretchable, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsStretchable)},
    {SIP_MLNAME_CAST(sipName_IsStretchableSpace), meth_wxToolBarToolBase_IsStretchableSpace, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsStretchableSpace)},
    {SIP_MLNAME_CAST(sipName_IsToggled), meth_wxToolBarToolBase_IsToggled, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_IsToggled)},
    {SIP_MLNAME_CAST(sipName_MakeStretchable), meth_wxToolBarToolBase_MakeStretchable, METH_VARARGS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_MakeStretchable)},
    {SIP_MLNAME_CAST(sipName_SetClientData), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetClientData), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetClientData)},
    {SIP_MLNAME_CAST(sipName_SetDisabledBitmap), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetDisabledBitmap), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetDisabledBitmap)},
    {SIP_MLNAME_CAST(sipName_SetDropdownMenu), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetDropdownMenu), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetDropdownMenu)},
    {SIP_MLNAME_CAST(sipName_SetLabel), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetLabel), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetLabel)},
    {SIP_MLNAME_CAST(sipName_SetLongHelp), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetLongHelp), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetLongHelp)},
    {SIP_MLNAME_CAST(sipName_SetNormalBitmap), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetNormalBitmap), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetNormalBitmap)},
    {SIP_MLNAME_CAST(sipName_SetShortHelp), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetShortHelp), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetShortHelp)},
    {SIP_MLNAME_CAST(sipName_SetToggle), SIP_MLMETH_CAST(meth_wxToolBarToolBase_SetToggle), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_SetToggle)},
    {SIP_MLNAME_CAST(sipName_Toggle), SIP_MLMETH_CAST(meth_wxToolBarToolBase_Toggle), METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_wxToolBarToolBase_Toggle)}
};

sipVariableDef variables_wxToolBarToolBase[] = {
    {PropertyVariable, sipName_ToolBar, &methods_wxToolBarToolBase[16], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Style, &methods_wxToolBarToolBase[15], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_ShortHelp, &methods_wxToolBarToolBase[14], &methods_wxToolBarToolBase[31], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_NormalBitmap, &methods_wxToolBarToolBase[13], &methods_wxToolBarToolBase[30], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_LongHelp, &methods_wxToolBarToolBase[12], &methods_wxToolBarToolBase[29], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Label, &methods_wxToolBarToolBase[11], &methods_wxToolBarToolBase[28], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Kind, &methods_wxToolBarToolBase[10], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Id, &methods_wxToolBarToolBase[9], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_DropdownMenu, &methods_wxToolBarToolBase[8], &methods_wxToolBarToolBase[27], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_DisabledBitmap, &methods_wxToolBarToolBase[7], &methods_wxToolBarToolBase[26], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Control, &methods_wxToolBarToolBase[6], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_ClientData, &methods_wxToolBarToolBase[5], &methods_wxToolBarToolBase[25], SIP_NULLPTR, SIP_NULLPTR},
    {PropertyVariable, sipName_Bitmap, &methods_wxToolBarToolBase[4], SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxToolBarToolBase, "ToolBarToolBase(tbar=None, toolid=ID_SEPARATOR, label=EmptyString, bmpNormal=NullBitmap, bmpDisabled=NullBitmap, kind=ITEM_NORMAL, clientData=None, shortHelpString=EmptyString, longHelpString=EmptyString)\n"
"ToolBarToolBase(tbar, control, label)\n"
"\n"
"A toolbar tool represents one item on the toolbar.");


sipClassTypeDef sipTypeDef__core_wxToolBarToolBase = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_wxToolBarToolBase,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_ToolBarToolBase,
        {0, 0, 1},
        34, methods_wxToolBarToolBase,
        0, SIP_NULLPTR,
        13, variables_wxToolBarToolBase,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxToolBarToolBase,
    -1,
    -1,
    supers_wxToolBarToolBase,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxToolBarToolBase,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_wxToolBarToolBase,
    cast_wxToolBarToolBase,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
