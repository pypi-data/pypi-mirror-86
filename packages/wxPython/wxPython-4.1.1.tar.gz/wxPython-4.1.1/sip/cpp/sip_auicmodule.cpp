/*
 * Module code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_aui.h"

        #include <wx/object.h>
        #include <wx/event.h>
        #include <wx/aui/framemanager.h>
        #include <wx/aui/floatpane.h>
        #include <wx/window.h>
        #include <wx/gdicmn.h>
        #include <wx/toolbar.h>
        #include <wx/statusbr.h>
        #include <wx/gdicmn.h>
        #include <wx/validate.h>
        #include <wx/gdicmn.h>
        #include <wx/aui/dockart.h>
        #include <wx/dc.h>
        #include <wx/colour.h>
        #include <wx/font.h>
        #include <wx/aui/auibar.h>
        #include <wx/aui/auibar.h>
        #include <wx/imaglist.h>
        #include <wx/aui/auibook.h>
        #include <wx/aui/auibook.h>
        #include <wx/bitmap.h>
        #include <wx/aui/framemanager.h>
        #include <wx/aui/framemanager.h>
        #include <wx/aui/framemanager.h>
        #include <wx/aui/dockart.h>
        #include <wx/aui/auibar.h>
        #include <wx/aui/auibar.h>
        #include <wx/aui/auibook.h>
        #include <wx/aui/auibook.h>
        #include <wx/aui/auibook.h>
        #include <wx/aui/auibook.h>
        #include <wx/aui/tabmdi.h>
        #include <wx/aui/tabmdi.h>

/* Define the strings used by this module. */
const char sipStrings__aui[] = {
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'T', 'A', 'B', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'D', 'O', 'W', 'N', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'T', 'A', 'B', '_', 'R', 'I', 'G', 'H', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'T', 'A', 'B', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'T', 'O', 'O', 'L', 'B', 'A', 'R', '_', 'O', 'V', 'E', 'R', 'F', 'L', 'O', 'W', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'T', 'o', 'o', 'l', 'T', 'e', 'x', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'N', 'O', '_', 'V', 'E', 'N', 'E', 'T', 'I', 'A', 'N', '_', 'B', 'L', 'I', 'N', 'D', 'S', '_', 'F', 'A', 'D', 'E', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 'O', 'f', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'T', 'A', 'B', '_', 'R', 'I', 'G', 'H', 'T', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'T', 'O', 'O', 'L', 'B', 'A', 'R', '_', 'T', 'O', 'O', 'L', '_', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'D', 'R', 'A', 'G', '_', 'M', 'O', 'T', 'I', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'L', 'O', 'S', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'T', 'O', 'O', 'L', 'B', 'A', 'R', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'a', 'b', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'B', 'E', 'G', 'I', 'N', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'T', 'O', 'O', 'L', 'B', 'A', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'P', 'A', 'N', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'I', 'Z', 'E', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'P', 'A', 'N', 'E', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'I', 'Z', 'E', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'V', 'E', 'N', 'E', 'T', 'I', 'A', 'N', '_', 'B', 'L', 'I', 'N', 'D', 'S', '_', 'H', 'I', 'N', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'B', 'G', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'D', 'R', 'A', 'G', '_', 'D', 'O', 'N', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'A', 'L', 'L', 'O', 'W', '_', 'D', 'N', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'T', 'O', 'O', 'L', 'B', 'A', 'R', '_', 'B', 'E', 'G', 'I', 'N', '_', 'D', 'R', 'A', 'G', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'E', 'N', 'D', '_', 'D', 'R', 'A', 'G', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'C', 'L', 'O', 'S', 'E', '_', 'O', 'N', '_', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'T', 'A', 'B', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'G', 'R', 'I', 'P', 'P', 'E', 'R', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'o', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'D', 'I', 'S', 'A', 'B', 'L', 'E', 'D', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'D', 'o', 'c', 'k', 'A', 'r', 't', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 's', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'T', 'Y', 'P', 'E', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'A', 'L', 'L', 'O', 'W', '_', 'A', 'C', 'T', 'I', 'V', 'E', '_', 'P', 'A', 'N', 'E', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'C', 'L', 'O', 'S', 'E', '_', 'O', 'N', '_', 'A', 'L', 'L', '_', 'T', 'A', 'B', 'S', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'L', 'I', 'S', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'T', 'A', 'B', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'A', 'L', '_', 'M', 'O', 'V', 'E', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'A', 'R', 'T', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', '_', 'S', 'I', 'Z', 'E', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'P', 'R', 'E', 'S', 'S', 'E', 'D', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'F', 'O', 'N', 'T', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'G', 'R', 'I', 'P', 'P', 'E', 'R', '_', 'S', 'I', 'Z', 'E', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'P', 'A', 'N', 'E', '_', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 'D', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', '_', 'H', 'I', 'N', 'T', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', '_', 'D', 'R', 'A', 'G', 0,
    'H', 'a', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'a', 'b', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'A', 'R', 'T', '_', 'O', 'V', 'E', 'R', 'F', 'L', 'O', 'W', '_', 'S', 'I', 'Z', 'E', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'P', 'L', 'A', 'I', 'N', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'A', 'U', 'I', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'S', 'A', 'S', 'H', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'D', 'o', 'c', 'k', 'A', 'r', 't', 'S', 'e', 't', 't', 'i', 'n', 'g', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'P', 'A', 'N', 'E', '_', 'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'l', 'y', 0,
    'w', 'x', 'A', 'u', 'i', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 'P', 'a', 'g', 'e', 'A', 'r', 'r', 'a', 'y', 0,
    'G', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'P', 'a', 'g', 'e', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'T', 'A', 'B', '_', 'F', 'I', 'X', 'E', 'D', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'S', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'O', 'v', 'e', 'r', 'f', 'l', 'o', 'w', 'I', 't', 'e', 'm', 's', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'e', 'x', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'e', 'x', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'A', 'r', 't', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'T', 'O', 'O', 'L', '_', 'T', 'E', 'X', 'T', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'A', 'R', 'T', '_', 'G', 'R', 'I', 'P', 'P', 'E', 'R', '_', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'A', 'r', 't', 'S', 'e', 't', 't', 'i', 'n', 'g', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'E', '_', 'H', 'O', 'V', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'F', 'I', 'N', 'D', '_', 'M', 'A', 'N', 'A', 'G', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'P', 'A', 'N', 'E', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'R', 'E', 'C', 'T', 'A', 'N', 'G', 'L', 'E', '_', 'H', 'I', 'N', 'T', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'A', 'L', 'L', 'O', 'W', '_', 'F', 'L', 'O', 'A', 'T', 'I', 'N', 'G', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'I', 't', 'e', 'm', 'A', 'r', 'r', 'a', 'y', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'T', 'O', 'O', 'L', '_', 'T', 'E', 'X', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'L', 'I', 'S', 'T', 0,
    'A', 'U', 'I', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', 'A', 'R', 'T', '_', 'S', 'A', 'S', 'H', '_', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'I', 'n', 'f', 'o', 'P', 't', 'r', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 'P', 't', 'r', 'A', 'r', 'r', 'a', 'y', 0,
    'S', 'e', 't', 'D', 'o', 'c', 'k', 'S', 'i', 'z', 'e', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'G', 'e', 't', 'D', 'o', 'c', 'k', 'S', 'i', 'z', 'e', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'P', 'A', 'N', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'D', 'I', 'C', 'l', 'i', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'U', 'n', 'i', 'f', 'o', 'r', 'm', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'o', 'r', 'd', 'e', 'r', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'o', 'r', 'd', 'e', 'r', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'T', 'O', 'O', 'L', '_', 'T', 'E', 'X', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'A', 'U', 'I', '_', 'O', 'R', 'I', 'E', 'N', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'N', 'O', '_', 'A', 'U', 'T', 'O', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'B', 'u', 't', 't', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'U', 'I', 'P', 'a', 'r', 't', 'A', 'r', 'r', 'a', 'y', 0,
    'A', 'l', 'w', 'a', 'y', 's', 'U', 's', 'e', 's', 'L', 'i', 'v', 'e', 'R', 'e', 's', 'i', 'z', 'e', 0,
    'R', 'e', 's', 't', 'o', 'r', 'e', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'd', 'P', 'a', 'n', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'P', 'A', 'N', 'E', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'P', 'r', 'e', 'v', 'e', 'n', 't', 'A', 'p', 'p', 'E', 'x', 'i', 't', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'I', 'n', 'h', 'e', 'r', 'i', 't', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'I', 'n', 'f', 'o', 'r', 'm', 'F', 'i', 'r', 's', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'D', 'I', 'P', 'a', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'T', 'a', 'b', 'C', 't', 'r', 'l', 'F', 'r', 'o', 'm', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'C', 'L', 'O', 'S', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'A', 'u', 'i', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'P', 'l', 'a', 'i', 'n', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'A', 'U', 'I', '_', 'T', 'B', 'T', 'O', 'O', 'L', '_', 'T', 'E', 'X', 'T', '_', 'T', 'O', 'P', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'D', 'o', 'c', 'k', 'A', 'r', 't', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'M', 'I', 'N', 'I', 'M', 'I', 'Z', 'E', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'F', 'r', 'a', 'm', 'e', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'L', 'I', 'V', 'E', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'A', 'r', 'e', 'a', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'D', 'I', 'C', 'h', 'i', 'l', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'A', 'u', 'i', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'a', 'b', 'A', 'r', 't', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'T', 'a', 'b', 'C', 't', 'r', 'l', 'S', 'i', 'z', 'e', 0,
    'c', 'l', 'o', 's', 'e', '_', 'b', 'u', 't', 't', 'o', 'n', '_', 's', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'S', 'e', 't', 'O', 'v', 'e', 'r', 'f', 'l', 'o', 'w', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'O', 'v', 'e', 'r', 'f', 'l', 'o', 'w', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'F', 'i', 't', 's', 'B', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'T', 'o', 'o', 'l', 'B', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'F', 'i', 'n', 'd', 'T', 'o', 'o', 'l', 'B', 'y', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'O', 'v', 'e', 'r', 'f', 'l', 'o', 'w', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 'B', 'u', 't', 't', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'H', 'O', 'R', 'Z', '_', 'L', 'A', 'Y', 'O', 'U', 'T', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'N', 'O', '_', 'T', 'O', 'O', 'L', 'T', 'I', 'P', 'S', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'C', 'U', 'S', 'T', 'O', 'M', '3', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'C', 'U', 'S', 'T', 'O', 'M', '2', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'C', 'U', 'S', 'T', 'O', 'M', '1', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'O', 'P', 'T', 'I', 'O', 'N', 'S', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'I', 'n', 'f', 'o', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'A', 'u', 'i', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'D', 'o', 'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 'F', 'l', 'a', 'g', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 'F', 'l', 'a', 'g', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'G', 'e', 't', 'M', 'D', 'I', 'P', 'a', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'M', 'D', 'I', 'P', 'a', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'A', 'u', 'i', 'S', 'i', 'm', 'p', 'l', 'e', 'T', 'a', 'b', 'A', 'r', 't', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'a', 'b', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'A', 'u', 'i', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 'P', 'a', 'g', 'e', 0,
    'I', 's', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    's', 'h', 'o', 'r', 't', '_', 'h', 'e', 'l', 'p', '_', 's', 't', 'r', 'i', 'n', 'g', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'A', 'U', 'I', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'H', 'a', 's', 'M', 'i', 'n', 'i', 'm', 'i', 'z', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'H', 'a', 's', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'D', 'o', 'c', 'k', 'R', 'e', 's', 'u', 'l', 't', 0,
    'C', 'a', 'l', 'c', 'u', 'l', 'a', 't', 'e', 'H', 'i', 'n', 't', 'R', 'e', 'c', 't', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'H', 'I', 'N', 'T', '_', 'F', 'A', 'D', 'E', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'O', 't', 'h', 'e', 'r', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'I', 'd', 'x', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'F', 'r', 'o', 'm', 'I', 'd', 'x', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'T', 'a', 'b', 'C', 't', 'r', 'l', 0,
    'S', 'e', 't', 'T', 'a', 'b', 'C', 't', 'r', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'M', 'e', 'a', 's', 'u', 'r', 'i', 'n', 'g', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'T', 'a', 'b', 'C', 't', 'r', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'T', 'A', 'B', '_', 'S', 'P', 'L', 'I', 'T', 0,
    'l', 'o', 'n', 'g', '_', 'h', 'e', 'l', 'p', '_', 's', 't', 'r', 'i', 'n', 'g', 0,
    'D', 'r', 'a', 'w', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'L', 'a', 'b', 'e', 'l', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'I', 't', 'e', 'm', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'H', 'O', 'R', 'Z', '_', 'T', 'E', 'X', 'T', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'I', 's', 'B', 'o', 't', 't', 'o', 'm', 'D', 'o', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'M', 'a', 'n', 'a', 'g', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'M', 'a', 'n', 'a', 'g', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'I', '_', 'R', 'E', 'N', 'D', 'E', 'R', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'D', 'o', 'c', 'k', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'A', 'd', 'v', 'a', 'n', 'c', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 'n', 'd', 'D', 'e', 's', 't', 'r', 'o', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'A', 'd', 'd', 'S', 't', 'r', 'e', 't', 'c', 'h', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'S', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'o', 'u', 't', '_', 'b', 'u', 't', 't', 'o', 'n', '_', 'r', 'e', 'c', 't', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'T', 'A', 'B', '_', 'M', 'O', 'V', 'E', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 0,
    'F', 'i', 'n', 'd', 'T', 'o', 'o', 'l', 'B', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'd', 'i', 's', 'a', 'b', 'l', 'e', 'd', '_', 'b', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'A', 'r', 't', 0,
    'G', 'e', 't', 'S', 'p', 'a', 'c', 'e', 'r', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'S', 'e', 't', 'S', 'p', 'a', 'c', 'e', 'r', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'O', 'V', 'E', 'R', 'F', 'L', 'O', 'W', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'D', 'O', 'W', 'N', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'G', 'e', 't', 'O', 'w', 'n', 'e', 'r', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'U', 'I', 'P', 'a', 'r', 't', 0,
    'I', 's', 'R', 'i', 'g', 'h', 't', 'D', 'o', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'd', 'o', 'c', 'k', '_', 'p', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'a', 'v', 'e', 'P', 'e', 'r', 's', 'p', 'e', 'c', 't', 'i', 'v', 'e', 0,
    'L', 'o', 'a', 'd', 'P', 'e', 'r', 's', 'p', 'e', 'c', 't', 'i', 'v', 'e', 0,
    'i', 'n', 's', 'e', 'r', 't', '_', 'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'A', 'U', 'I', '_', 'M', 'G', 'R', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'W', 'i', 'd', 't', 'h', 's', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'M', 'a', 'k', 'e', 'T', 'a', 'b', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'd', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'h', 'o', 'w', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'o', 'g', 'g', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'F', 'i', 't', 's', 0,
    'S', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'H', 'a', 's', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 0,
    'G', 'e', 't', 'H', 'o', 'v', 'e', 'r', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'H', 'o', 'v', 'e', 'r', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'G', 'R', 'I', 'P', 'P', 'E', 'R', 0,
    'D', 'r', 'a', 'w', 'P', 'a', 'n', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'P', 'I', 'N', 0,
    't', 'y', 'p', 'e', 'P', 'a', 'n', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    't', 'y', 'p', 'e', 'P', 'a', 'n', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    't', 'y', 'p', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'I', 's', 'L', 'e', 'f', 't', 'D', 'o', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'H', 'a', 's', 'C', 'l', 'o', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'O', 'n', 'C', 'l', 'o', 's', 'e', 0,
    'C', 'a', 'p', 't', 'i', 'o', 'n', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'd', 'o', 'c', 'k', '_', 'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'A', 'r', 't', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'r', 't', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'C', 'l', 'i', 'e', 'n', 't', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'S', 'h', 'o', 'w', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'A', 'l', 'l', 'P', 'a', 'g', 'e', 's', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 's', 0,
    'O', 'n', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'I', 'd', 'l', 'e', 0,
    'S', 'e', 't', 'S', 'i', 'z', 'i', 'n', 'g', 'I', 'n', 'f', 'o', 0,
    't', 'a', 'b', '_', 'c', 't', 'r', 'l', '_', 's', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'm', 'e', 'a', 's', 'u', 'r', 'i', 'n', 'g', 'F', 'o', 'n', 't', 0,
    'B', 'u', 't', 't', 'o', 'n', 'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'N', 'o', 'n', 'e', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'A', 'u', 'i', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'S', 'e', 't', 'C', 'l', 'i', 'c', 'k', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'c', 'k', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 't', 'i', 'c', 'k', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'S', 't', 'i', 'c', 'k', 'y', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'B', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'D', 'r', 'a', 'w', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'A', 'U', 'I', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'U', 'P', 0,
    'w', 'x', 'A', 'u', 'i', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 0,
    'G', 'e', 't', 'A', 'u', 'i', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'S', 'e', 't', 'P', 'a', 'n', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    't', 'y', 'p', 'e', 'P', 'a', 'n', 'e', 'S', 'i', 'z', 'e', 'r', 0,
    't', 'y', 'p', 'e', 'D', 'o', 'c', 'k', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'I', 'n', 'f', 'o', 0,
    'I', 's', 'T', 'o', 'p', 'D', 'o', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'H', 'a', 's', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 'T', 'o', 'p', 0,
    'f', 'l', 'o', 'a', 't', 'i', 'n', 'g', '_', 's', 'i', 'z', 'e', 0,
    'w', 'x', 'A', 'u', 'i', 'P', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 0,
    'S', 't', 'a', 'r', 't', 'P', 'a', 'n', 'e', 'D', 'r', 'a', 'g', 0,
    'H', 'a', 's', 'L', 'i', 'v', 'e', 'R', 'e', 's', 'i', 'z', 'e', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'L', 'E', 'F', 'T', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'N', 'O', 'N', 'E', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'a', 'b', 'C', 't', 'r', 'l', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', '_', 't', 'y', 'p', 'e', 0,
    'o', 'u', 't', '_', 't', 'a', 'b', '_', 'r', 'e', 'c', 't', 0,
    'I', 's', 'T', 'a', 'b', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'a', 'b', 'O', 'f', 'f', 's', 'e', 't', 0,
    'G', 'e', 't', 'T', 'a', 'b', 'O', 'f', 'f', 's', 'e', 't', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    's', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'n', 'd', 'e', 'x', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'C', 'o', 'u', 'n', 't', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'S', 'h', 'o', 'w', 'D', 'r', 'o', 'p', 'D', 'o', 'w', 'n', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'A', 'u', 'i', 'D', 'o', 'c', 'k', 'A', 'r', 't', 0,
    'I', 's', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 0,
    'o', 'p', 't', 'i', 'o', 'n', '_', 's', 't', 'a', 't', 'e', 0,
    'H', 'a', 's', 'P', 'i', 'n', 'B', 'u', 't', 't', 'o', 'n', 0,
    'f', 'l', 'o', 'a', 't', 'i', 'n', 'g', '_', 'p', 'o', 's', 0,
    'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'S', 'i', 'z', 'e', 0,
    'a', 'r', 't', '_', 'p', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'S', 'a', 'v', 'e', 'P', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 0,
    'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'P', 'a', 'n', 'e', 0,
    'L', 'o', 'a', 'd', 'P', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 0,
    'i', 'n', 's', 'e', 'r', 't', '_', 'l', 'e', 'v', 'e', 'l', 0,
    'D', 'r', 'a', 'w', 'H', 'i', 'n', 't', 'R', 'e', 'c', 't', 0,
    'C', 'a', 'n', 'D', 'o', 'c', 'k', 'P', 'a', 'n', 'e', 'l', 0,
    'w', 'x', 'A', 'u', 'i', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'A', 'U', 'I', '_', 'D', 'O', 'C', 'K', '_', 'T', 'O', 'P', 0,
    'A', 'r', 'r', 'a', 'n', 'g', 'e', 'I', 'c', 'o', 'n', 's', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'N', 'e', 'x', 't', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'I', 's', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'A', 'd', 'd', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'C', 'a', 'n', 'B', 'e', 'T', 'o', 'g', 'g', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'D', 'o', 'M', 'o', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    '_', '_', 'c', 'o', 'n', 't', 'a', 'i', 'n', 's', '_', '_', 0,
    'p', 'C', 'h', 'i', 'l', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'A', 'u', 'i', 'T', 'a', 'b', 'A', 'r', 't', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'L', 'E', 'F', 'T', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'R', 'e', 'c', 't', 0,
    'I', 's', 'P', 'a', 'n', 'e', 'V', 'a', 'l', 'i', 'd', 0,
    'G', 'e', 't', 'H', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'F', 'i', 't', 's', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'T', 'o', 'o', 'l', 0,
    'c', 'l', 'i', 'e', 'n', 't', '_', 'd', 'a', 't', 'a', 0,
    'A', 'U', 'I', '_', 'T', 'B', '_', 'T', 'E', 'X', 'T', 0,
    'D', 'r', 'a', 'w', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 0,
    'D', 'r', 'a', 'w', 'C', 'a', 'p', 't', 'i', 'o', 'n', 0,
    't', 'y', 'p', 'e', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 0,
    't', 'y', 'p', 'e', 'C', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'T', 'o', 'o', 'l', 'b', 'a', 'r', 'P', 'a', 'n', 'e', 0,
    'I', 's', 'R', 'e', 's', 'i', 'z', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'F', 'l', 'o', 'a', 't', 'a', 'b', 'l', 'e', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'a', 'n', 'e', 0,
    'R', 'e', 's', 't', 'o', 'r', 'e', 'P', 'a', 'n', 'e', 0,
    'p', 'e', 'r', 's', 'p', 'e', 'c', 't', 'i', 'v', 'e', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'P', 'a', 'n', 'e', 's', 0,
    'm', 'a', 'n', 'a', 'g', 'e', 'd', '_', 'w', 'n', 'd', 0,
    'I', 's', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'd', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'i', 'z', 'e', 0,
    'F', 'i', 'n', 'd', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'S', 'e', 't', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'S', 'e', 't', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'T', 'y', 'p', 'e', 0,
    'o', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    'I', 's', 'D', 'r', 'a', 'g', 'g', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'T', 'a', 'b', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'h', 'o', 'w', 'H', 'i', 'd', 'e', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'T', 'a', 'b', 'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'p', 'a', 'g', 'e', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'A', 'U', 'I', '_', 'N', 'B', '_', 'T', 'O', 'P', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', '_', 'i', 'd', 0,
    'D', 'r', 'a', 'w', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    's', 'i', 'z', 'e', 'r', '_', 'i', 't', 'e', 'm', 0,
    'c', 'o', 'n', 't', '_', 's', 'i', 'z', 'e', 'r', 0,
    'S', 'e', 't', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'I', 's', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 0,
    'I', 's', 'D', 'o', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'H', 'a', 's', 'G', 'r', 'i', 'p', 'p', 'e', 'r', 0,
    'H', 'a', 's', 'C', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'd', 'o', 'c', 'k', '_', 'l', 'a', 'y', 'e', 'r', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'P', 'a', 'n', 'e', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'P', 'a', 'n', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'I', 'n', 's', 'e', 'r', 't', 'P', 'a', 'n', 'e', 0,
    'D', 'e', 't', 'a', 'c', 'h', 'P', 'a', 'n', 'e', 0,
    'p', 'a', 'n', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'D', 'o', 'G', 'i', 'v', 'e', 'H', 'e', 'l', 'p', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'T', 'o', 'o', 'l', 0,
    's', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'o', 's', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'T', 'o', 'o', 'l', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'T', 'o', 'o', 'l', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'o', 'o', 'l', 's', 0,
    'A', 'd', 'd', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'w', 'i', 'd', 't', 'h', 'T', 'i', 't', 'l', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'I', 's', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'P', 'a', 'g', 'e', 0,
    'I', 'n', 's', 'e', 'r', 't', 'P', 'a', 'g', 'e', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'P', 'a', 'g', 'e', 0,
    'I', 's', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 0,
    'I', 'n', 'i', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'I', 's', 'I', 'c', 'o', 'n', 'i', 'z', 'e', 'd', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'V', 'e', 't', 'o', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'I', 'd', 'x', 0,
    't', 'a', 'b', '_', 'c', 'o', 'u', 'n', 't', 0,
    'b', 'i', 't', 'm', 'a', 'p', '_', 'i', 'd', 0,
    't', 'a', 'b', 'O', 'f', 'f', 's', 'e', 't', 0,
    'd', 'i', 's', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'I', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'I', 'd', 0,
    'w', 'i', 'n', 'd', 'o', 'w', '_', 'i', 'd', 0,
    'S', 'e', 't', 'S', 't', 'i', 'c', 'k', 'y', 0,
    'n', 'e', 'w', '_', 's', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'M', 'e', 't', 'r', 'i', 'c', 0,
    'r', 'e', 's', 'e', 'r', 'v', 'e', 'd', '1', 0,
    'S', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 0,
    'I', 's', 'T', 'o', 'o', 'l', 'b', 'a', 'r', 0,
    'I', 's', 'M', 'o', 'v', 'a', 'b', 'l', 'e', 0,
    'H', 'a', 's', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'D', 'o', 'c', 'k', 'F', 'i', 'x', 'e', 'd', 0,
    'b', 'e', 's', 't', '_', 's', 'i', 'z', 'e', 0,
    'p', 'a', 'n', 'e', '_', 'p', 'a', 'r', 't', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'p', 'c', 't', 0,
    'C', 'l', 'o', 's', 'e', 'P', 'a', 'n', 'e', 0,
    'p', 'a', 'n', 'e', '_', 'i', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'M', 'e', 't', 'r', 'i', 'c', 0,
    'r', 'e', 's', 'i', 'z', 'a', 'b', 'l', 'e', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'a', 'x', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'i', 'n', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'v', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    's', 'i', 'z', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'A', 'd', 'd', 'B', 'u', 't', 't', 'o', 'n', 0,
    'A', 'd', 'd', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 0,
    'T', 'r', 'y', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'D', 'r', 'a', 'w', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'x', '_', 'e', 'x', 't', 'e', 'n', 't', 0,
    'o', 'u', 't', '_', 'r', 'e', 'c', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 's', 0,
    'M', 'o', 'v', 'e', 'P', 'a', 'g', 'e', 0,
    'c', 'u', 'r', 'S', 't', 'a', 't', 'e', 0,
    'n', 'e', 'w', '_', 'p', 'a', 'g', 'e', 0,
    'p', 'a', 'g', 'e', '_', 'w', 'n', 'd', 0,
    'p', 'a', 'g', 'e', '_', 'i', 'd', 'x', 0,
    'd', 'r', 'o', 'p', 'd', 'o', 'w', 'n', 0,
    'F', 'i', 'n', 'd', 'T', 'o', 'o', 'l', 0,
    'A', 'd', 'd', 'L', 'a', 'b', 'e', 'l', 0,
    'I', 's', 'S', 't', 'i', 'c', 'k', 'y', 0,
    'n', 'e', 'w', '_', 'k', 'i', 'n', 'd', 0,
    'D', 'r', 'a', 'w', 'S', 'a', 's', 'h', 0,
    'o', 'w', 'n', 'e', 'r', 'M', 'g', 'r', 0,
    't', 'y', 'p', 'e', 'P', 'a', 'n', 'e', 0,
    't', 'y', 'p', 'e', 'D', 'o', 'c', 'k', 0,
    'c', 'a', 'n', '_', 'v', 'e', 't', 'o', 0,
    'I', 's', 'D', 'o', 'c', 'k', 'e', 'd', 0,
    'm', 'a', 'x', '_', 's', 'i', 'z', 'e', 0,
    'm', 'i', 'n', '_', 's', 'i', 'z', 'e', 0,
    'd', 'o', 'c', 'k', '_', 'p', 'o', 's', 0,
    'd', 'o', 'c', 'k', '_', 'r', 'o', 'w', 0,
    'S', 'h', 'o', 'w', 'H', 'i', 'n', 't', 0,
    'H', 'i', 'd', 'e', 'H', 'i', 'n', 't', 0,
    'w', 'i', 'd', 't', 'h', 'p', 'c', 't', 0,
    'p', 'a', 'n', 'e', 'I', 'n', 'f', 'o', 0,
    'd', 'r', 'o', 'p', '_', 'p', 'o', 's', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 0,
    'S', 'e', 't', 'I', 'c', 'o', 'n', 's', 0,
    'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 0,
    'm', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 's', 0,
    'S', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'G', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'D', 'o', 'F', 'r', 'e', 'e', 'z', 'e', 0,
    'D', 'o', 'E', 'n', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'V', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    'c', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'A', 'd', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'I', 's', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'S', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'T', 'r', 'y', 'A', 'f', 't', 'e', 'r', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'I', 'c', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'T', 'a', 'b', 0,
    'i', 'n', '_', 'r', 'e', 'c', 't', 0,
    't', 'a', 'b', 'P', 'a', 'g', 'e', 0,
    'F', 'i', 'n', 'd', 'T', 'a', 'b', 0,
    'p', 'a', 'g', 'e', 'I', 'd', 'x', 0,
    'p', 'r', 'e', 'p', 'e', 'n', 'd', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'S', 'e', 't', 'K', 'i', 'n', 'd', 0,
    'n', 'e', 'w', '_', 'v', 'a', 'l', 0,
    't', 'o', 'o', 'l', 'b', 'a', 'r', 0,
    'S', 'e', 't', 'P', 'a', 'n', 'e', 0,
    'm', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'S', 'a', 'f', 'e', 'S', 'e', 't', 0,
    'I', 's', 'F', 'i', 'x', 'e', 'd', 0,
    'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'n', 'e', 'w', '_', 'p', 'o', 's', 0,
    'A', 'd', 'd', 'P', 'a', 'n', 'e', 0,
    'C', 'a', 's', 'c', 'a', 'd', 'e', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'm', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'R', 'e', 's', 't', 'o', 'r', 'e', 0,
    'I', 'c', 'o', 'n', 'i', 'z', 'e', 0,
    'i', 'c', 'o', 'n', 'i', 'z', 'e', 0,
    't', 'o', 'o', 'l', 't', 'i', 'p', 0,
    'p', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'A', 'd', 'd', 'T', 'o', 'o', 'l', 0,
    'c', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'P', 'a', 'n', 'e', 0,
    'p', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 0,
    'A', 'd', 'd', 'P', 'a', 'g', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 'I', 'd', 0,
    'f', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'u', 'n', 'i', 't', 'M', 'a', 'x', 0,
    'u', 'n', 'i', 't', 'M', 'i', 'n', 0,
    'G', 'e', 't', 'K', 'i', 'n', 'd', 0,
    'M', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'v', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'H', 'a', 's', 'F', 'l', 'a', 'g', 0,
    'R', 'e', 'a', 'l', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'F', 'l', 'a', 'g', 0,
    'I', 's', 'S', 'h', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'V', 'e', 't', 'o', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'I', 'c', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    'I', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 0,
    'w', 'x', '.', '_', 'a', 'u', 'i', 0,
    'p', 'C', 'h', 'i', 'l', 'd', 0,
    'w', 'i', 'n', '_', 'i', 'd', 0,
    'n', 'e', 'w', 'I', 'd', 'x', 0,
    's', 't', 'i', 'c', 'k', 'y', 0,
    'p', 'i', 'x', 'e', 'l', 's', 0,
    'n', 'e', 'w', '_', 'i', 'd', 0,
    'A', 's', 's', 'i', 'g', 'n', 0,
    'U', 'n', 'I', 'n', 'i', 't', 0,
    'u', 'p', 'd', 'a', 't', 'e', 0,
    'c', 'l', 'i', 'e', 'n', 't', 0,
    'd', 'i', 'a', 'l', 'o', 'g', 0,
    't', 'o', 'o', 'l', 'I', 'd', 0,
    't', 'o', 'g', 'g', 'l', 'e', 0,
    's', 'e', 'l', 'e', 'c', 't', 0,
    'w', 'i', 'd', 't', 'h', 's', 0,
    'n', 'u', 'm', 'b', 'e', 'r', 0,
    'r', 'o', 'w', 'M', 'a', 'x', 0,
    'r', 'o', 'w', 'M', 'i', 'n', 0,
    'D', 'o', 'T', 'h', 'a', 'w', 0,
    't', 'a', 'r', 'g', 'e', 't', 0,
    'U', 'p', 'd', 'a', 't', 'e', 0,
    'a', 'c', 't', 'i', 'v', 'e', 0,
    'C', 'e', 'n', 't', 'e', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', 0,
    'o', 'r', 'i', 'e', 'n', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 0,
    's', 'o', 'u', 'r', 'c', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 0,
    's', 't', 'r', 'e', 'a', 'm', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'C', 'e', 'n', 't', 'r', 'e', 0,
    'c', 'o', 'l', 'o', 'u', 'r', 0,
    'B', 'o', 't', 't', 'o', 'm', 0,
    'b', 'o', 't', 't', 'o', 'm', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'h', 'e', 'i', 'g', 'h', 't', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'p', 'M', 'e', 'n', 'u', 0,
    'S', 'p', 'l', 'i', 't', 0,
    'w', 'i', 'n', 'I', 'd', 0,
    'f', 'i', 'x', 'e', 'd', 0,
    'p', 'a', 'n', 'e', 's', 0,
    'S', 'e', 't', 'D', 'C', 0,
    'L', 'a', 'y', 'e', 'r', 0,
    'a', 't', 't', 'o', 'p', 0,
    'F', 'l', 'o', 'a', 't', 0,
    'i', 'c', 'o', 'n', 's', 0,
    'p', 'o', 'p', 'u', 'p', 0,
    'n', 'P', 'a', 'g', 'e', 0,
    'i', 't', 'e', 'm', 's', 0,
    'l', 'a', 'b', 'e', 'l', 0,
    'w', 'i', 'n', 'i', 'd', 0,
    'G', 'e', 't', 'D', 'C', 0,
    'C', 'l', 'o', 'n', 'e', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'I', 'd', 0,
    'f', 'r', 'a', 'm', 'e', 0,
    'c', 'h', 'i', 'l', 'd', 0,
    't', 'i', 't', 'l', 'e', 0,
    's', 't', 'y', 'l', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 0,
    'R', 'i', 'g', 'h', 't', 0,
    'r', 'i', 'g', 'h', 't', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'w', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'I', 'd', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'c', 't', 'r', 'l', 0,
    'd', 'o', 'c', 'k', 0,
    'p', 'a', 'n', 'e', 0,
    'T', 'i', 'l', 'e', 0,
    'u', 'n', 'i', 't', 0,
    'i', 'n', 'c', 'H', 0,
    'i', 'n', 'c', 'W', 0,
    'm', 'a', 'x', 'H', 0,
    'm', 'a', 'x', 'W', 0,
    'm', 'i', 'n', 'H', 0,
    'm', 'i', 'n', 'W', 0,
    'S', 'h', 'o', 'w', 0,
    's', 'h', 'o', 'w', 0,
    't', 'e', 'x', 't', 0,
    'f', 'o', 'n', 't', 0,
    'i', 'c', 'o', 'n', 0,
    'L', 'e', 'f', 't', 0,
    'l', 'e', 'f', 't', 0,
    'f', 'l', 'a', 'g', 0,
    'n', 'a', 'm', 'e', 0,
    'N', 'a', 'm', 'e', 0,
    'I', 's', 'O', 'k', 0,
    't', 'i', 'm', 'e', 0,
    'h', 'i', 't', 0,
    'p', 'd', 'c', 0,
    'm', 's', 'g', 0,
    'b', 'm', 'p', 0,
    'R', 'o', 'w', 0,
    'w', 'i', 'n', 0,
    'o', 'b', 'j', 0,
    'p', 't', 0,
};

bool sipVH__aui_67(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool show)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "b", show);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__aui_66(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& tab_ctrl_size,size_t tab_count)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N=", new  ::wxSize(tab_ctrl_size), sipType_wxSize, SIP_NULLPTR, tab_count);
}

void sipVH__aui_65(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxColour& colour)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxColour(colour), sipType_wxColour, SIP_NULLPTR);
}

 ::wxSize sipVH__aui_64(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxString& caption,const  ::wxBitmap& bitmap,bool active,int close_button_state,int*x_extent)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNNbi", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(caption), sipType_wxString, SIP_NULLPTR, new  ::wxBitmap(bitmap), sipType_wxBitmap, SIP_NULLPTR, active, close_button_state);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H5i)", sipType_wxSize, &sipRes, x_extent);

    return sipRes;
}

int sipVH__aui_63(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*a0,const  ::wxAuiNotebookPageArray& a1,const  ::wxSize& a2)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNN", a0, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiNotebookPageArray(a1), sipType_wxAuiNotebookPageArray, SIP_NULLPTR, new  ::wxSize(a2), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__aui_62(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiNotebookPage& page,const  ::wxRect& rect,int close_button_state, ::wxRect*out_tab_rect, ::wxRect*out_button_rect,int*x_extent)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNNiDD", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiNotebookPage(page), sipType_wxAuiNotebookPage, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, close_button_state, out_tab_rect, sipType_wxRect, SIP_NULLPTR, out_button_rect, sipType_wxRect, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", x_extent);
}

void sipVH__aui_61(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& in_rect,int bitmap_id,int button_state,int orientation, ::wxRect*out_rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNiiiD", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxRect(in_rect), sipType_wxRect, SIP_NULLPTR, bitmap_id, button_state, orientation, out_rect, sipType_wxRect, SIP_NULLPTR);
}

 ::wxAuiTabArt* sipVH__aui_60(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxAuiTabArt* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxAuiTabArt, &sipRes);

    return sipRes;
}

void sipVH__aui_59(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImageList*imageList)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", imageList, sipType_wxImageList, SIP_NULLPTR);
}

bool sipVH__aui_58(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n,int imageId)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=i", n, imageId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__aui_57(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", page);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__aui_56(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page,const  ::wxString& text)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=N", page, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__aui_55(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__aui_54(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*page,const  ::wxString& text,bool select,int imageId)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNbi", page, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, select, imageId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__aui_53(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t index, ::wxWindow*page,const  ::wxString& text,bool select,int imageId)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=DNbi", index, page, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, select, imageId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__aui_52(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", page);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

size_t sipVH__aui_51(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

void sipVH__aui_50(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& size)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR);
}

int sipVH__aui_49(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pt,long*flags)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxPoint(pt), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(il)", &sipRes, flags);

    return sipRes;
}

int sipVH__aui_48(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*wnd,const  ::wxAuiToolBarItemArray& items)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiToolBarItemArray(items), sipType_wxAuiToolBarItemArray, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxSize sipVH__aui_47(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDN", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiToolBarItem(item), sipType_wxAuiToolBarItem, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

void sipVH__aui_46(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect,int state)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNi", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, state);
}

void sipVH__aui_45(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxAuiToolBarItem& item,const  ::wxRect& rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNN", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiToolBarItem(item), sipType_wxAuiToolBarItem, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);
}

void sipVH__aui_44(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*wnd,const  ::wxRect& rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDN", &dc, sipType_wxDC, SIP_NULLPTR, wnd, sipType_wxWindow, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);
}

int sipVH__aui_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__aui_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int orientation)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "i", orientation);
}

 ::wxFont sipVH__aui_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxFont sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxFont, &sipRes);

    return sipRes;
}

void sipVH__aui_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFont& font)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxFont(font), sipType_wxFont, SIP_NULLPTR);
}

uint sipVH__aui_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    uint sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "u", &sipRes);

    return sipRes;
}

void sipVH__aui_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "u", flags);
}

 ::wxAuiToolBarArt* sipVH__aui_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxAuiToolBarArt* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxAuiToolBarArt, &sipRes);

    return sipRes;
}

void sipVH__aui_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int id,const  ::wxFont& font)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iN", id, new  ::wxFont(font), sipType_wxFont, SIP_NULLPTR);
}

void sipVH__aui_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int id,const  ::wxColour& colour)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iN", id, new  ::wxColour(colour), sipType_wxColour, SIP_NULLPTR);
}

int sipVH__aui_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int id)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", id);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxFont sipVH__aui_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int id)
{
     ::wxFont sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", id);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxFont, &sipRes);

    return sipRes;
}

 ::wxColour sipVH__aui_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int id)
{
     ::wxColour sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", id);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxColour, &sipRes);

    return sipRes;
}

void sipVH__aui_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*window,int button,int button_state,const  ::wxRect& rect, ::wxAuiPaneInfo& pane)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDiiND", &dc, sipType_wxDC, SIP_NULLPTR, window, sipType_wxWindow, SIP_NULLPTR, button, button_state, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, &pane, sipType_wxAuiPaneInfo, SIP_NULLPTR);
}

void sipVH__aui_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*window,const  ::wxString& text,const  ::wxRect& rect, ::wxAuiPaneInfo& pane)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNND", &dc, sipType_wxDC, SIP_NULLPTR, window, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, &pane, sipType_wxAuiPaneInfo, SIP_NULLPTR);
}

void sipVH__aui_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*window,const  ::wxRect& rect, ::wxAuiPaneInfo& pane)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDND", &dc, sipType_wxDC, SIP_NULLPTR, window, sipType_wxWindow, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, &pane, sipType_wxAuiPaneInfo, SIP_NULLPTR);
}

void sipVH__aui_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxWindow*window,int orientation,const  ::wxRect& rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDiN", &dc, sipType_wxDC, SIP_NULLPTR, window, sipType_wxWindow, SIP_NULLPTR, orientation, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);
}

 ::wxAuiDockArt* sipVH__aui_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxAuiDockArt* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxAuiDockArt, &sipRes);

    return sipRes;
}

 ::wxBorder sipVH__aui_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBorder sipRes = ::wxBORDER_DEFAULT;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxBorder, &sipRes);

    return sipRes;
}

void sipVH__aui_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowVariant variant)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "F", variant, sipType_wxWindowVariant);
}

void sipVH__aui_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiii", x, y, width, height);
}

 ::wxSize sipVH__aui_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

void sipVH__aui_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiiii", minW, minH, maxW, maxH, incW, incH);
}

void sipVH__aui_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", width, height);
}

void sipVH__aui_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height,int sizeFlags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiii", x, y, width, height, sizeFlags);
}

void sipVH__aui_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*x,int*y)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(ii)", x, y);
}

 ::wxWindow* sipVH__aui_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxWindow, &sipRes);

    return sipRes;
}

void sipVH__aui_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxValidator& validator)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxValidator *>(&validator), sipType_wxValidator, SIP_NULLPTR);
}

 ::wxValidator* sipVH__aui_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxValidator* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxValidator, &sipRes);

    return sipRes;
}

 ::wxPoint sipVH__aui_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPoint sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPoint, &sipRes);

    return sipRes;
}

bool sipVH__aui_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int direction,int size,int availableOtherDir)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iii", direction, size, availableOtherDir);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__aui_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool canFocus)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", canFocus);
}

bool sipVH__aui_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__aui_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*child)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", child, sipType_wxWindowBase, SIP_NULLPTR);
}

void sipVH__aui_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text,bool show)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Nb", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, show);
}

 ::wxStatusBar* sipVH__aui_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int number,long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxStatusBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iliN", number, style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxStatusBar, &sipRes);

    return sipRes;
}

 ::wxToolBar* sipVH__aui_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxToolBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "liN", style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxToolBar, &sipRes);

    return sipRes;
}

 ::wxEvent* sipVH__aui_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEvent* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxEvent, &sipRes);

    return sipRes;
}

 ::wxEventCategory sipVH__aui_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEventCategory sipRes = ::wxEVT_CATEGORY_UI;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxEventCategory, &sipRes);

    return sipRes;
}

bool sipVH__aui_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxAuiPaneInfo& target,const  ::wxAuiPaneInfo& new_pos)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", &target, sipType_wxAuiPaneInfo, SIP_NULLPTR, new  ::wxAuiPaneInfo(new_pos), sipType_wxAuiPaneInfo, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__aui_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);
}

void sipVH__aui_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

 ::wxAuiFloatingFrame* sipVH__aui_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent,const  ::wxAuiPaneInfo& p)
{
     ::wxAuiFloatingFrame* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", parent, sipType_wxWindow, SIP_NULLPTR, new  ::wxAuiPaneInfo(p), sipType_wxAuiPaneInfo, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxAuiFloatingFrame, &sipRes);

    return sipRes;
}

bool sipVH__aui_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxAuiPaneInfo& p)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxAuiPaneInfo(p), sipType_wxAuiPaneInfo, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__aui_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiNotebookOption, {0}, 0}, sipNameNr_AuiNotebookOption, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiToolBarToolTextOrientation, {0}, 0}, sipNameNr_AuiToolBarToolTextOrientation, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiToolBarArtSetting, {0}, 0}, sipNameNr_AuiToolBarArtSetting, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiToolBarStyle, {0}, 0}, sipNameNr_AuiToolBarStyle, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiButtonId, {0}, 0}, sipNameNr_AuiButtonId, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiPaneButtonState, {0}, 0}, sipNameNr_AuiPaneButtonState, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiPaneDockArtGradients, {0}, 0}, sipNameNr_AuiPaneDockArtGradients, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiPaneDockArtSetting, {0}, 0}, sipNameNr_AuiPaneDockArtSetting, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiManagerOption, {0}, 0}, sipNameNr_AuiManagerOption, -1, SIP_NULLPTR},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_wxAuiManagerDock, {0}, 0}, sipNameNr_AuiManagerDock, -1, SIP_NULLPTR},
};

/* These are the enum members of all global enums. */
static sipEnumMemberDef enummembers[] = {
    {sipName_AUI_BUTTON_CLOSE, static_cast<int>(::wxAUI_BUTTON_CLOSE), 0},
    {sipName_AUI_BUTTON_CUSTOM1, static_cast<int>(::wxAUI_BUTTON_CUSTOM1), 0},
    {sipName_AUI_BUTTON_CUSTOM2, static_cast<int>(::wxAUI_BUTTON_CUSTOM2), 0},
    {sipName_AUI_BUTTON_CUSTOM3, static_cast<int>(::wxAUI_BUTTON_CUSTOM3), 0},
    {sipName_AUI_BUTTON_DOWN, static_cast<int>(::wxAUI_BUTTON_DOWN), 0},
    {sipName_AUI_BUTTON_LEFT, static_cast<int>(::wxAUI_BUTTON_LEFT), 0},
    {sipName_AUI_BUTTON_MAXIMIZE_RESTORE, static_cast<int>(::wxAUI_BUTTON_MAXIMIZE_RESTORE), 0},
    {sipName_AUI_BUTTON_MINIMIZE, static_cast<int>(::wxAUI_BUTTON_MINIMIZE), 0},
    {sipName_AUI_BUTTON_OPTIONS, static_cast<int>(::wxAUI_BUTTON_OPTIONS), 0},
    {sipName_AUI_BUTTON_PIN, static_cast<int>(::wxAUI_BUTTON_PIN), 0},
    {sipName_AUI_BUTTON_RIGHT, static_cast<int>(::wxAUI_BUTTON_RIGHT), 0},
    {sipName_AUI_BUTTON_STATE_CHECKED, static_cast<int>(::wxAUI_BUTTON_STATE_CHECKED), 23},
    {sipName_AUI_BUTTON_STATE_DISABLED, static_cast<int>(::wxAUI_BUTTON_STATE_DISABLED), 23},
    {sipName_AUI_BUTTON_STATE_HIDDEN, static_cast<int>(::wxAUI_BUTTON_STATE_HIDDEN), 23},
    {sipName_AUI_BUTTON_STATE_HOVER, static_cast<int>(::wxAUI_BUTTON_STATE_HOVER), 23},
    {sipName_AUI_BUTTON_STATE_NORMAL, static_cast<int>(::wxAUI_BUTTON_STATE_NORMAL), 23},
    {sipName_AUI_BUTTON_STATE_PRESSED, static_cast<int>(::wxAUI_BUTTON_STATE_PRESSED), 23},
    {sipName_AUI_BUTTON_UP, static_cast<int>(::wxAUI_BUTTON_UP), 0},
    {sipName_AUI_BUTTON_WINDOWLIST, static_cast<int>(::wxAUI_BUTTON_WINDOWLIST), 0},
    {sipName_AUI_DOCKART_ACTIVE_CAPTION_COLOUR, static_cast<int>(::wxAUI_DOCKART_ACTIVE_CAPTION_COLOUR), 25},
    {sipName_AUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR, static_cast<int>(::wxAUI_DOCKART_ACTIVE_CAPTION_GRADIENT_COLOUR), 25},
    {sipName_AUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR, static_cast<int>(::wxAUI_DOCKART_ACTIVE_CAPTION_TEXT_COLOUR), 25},
    {sipName_AUI_DOCKART_BACKGROUND_COLOUR, static_cast<int>(::wxAUI_DOCKART_BACKGROUND_COLOUR), 25},
    {sipName_AUI_DOCKART_BORDER_COLOUR, static_cast<int>(::wxAUI_DOCKART_BORDER_COLOUR), 25},
    {sipName_AUI_DOCKART_CAPTION_FONT, static_cast<int>(::wxAUI_DOCKART_CAPTION_FONT), 25},
    {sipName_AUI_DOCKART_CAPTION_SIZE, static_cast<int>(::wxAUI_DOCKART_CAPTION_SIZE), 25},
    {sipName_AUI_DOCKART_GRADIENT_TYPE, static_cast<int>(::wxAUI_DOCKART_GRADIENT_TYPE), 25},
    {sipName_AUI_DOCKART_GRIPPER_COLOUR, static_cast<int>(::wxAUI_DOCKART_GRIPPER_COLOUR), 25},
    {sipName_AUI_DOCKART_GRIPPER_SIZE, static_cast<int>(::wxAUI_DOCKART_GRIPPER_SIZE), 25},
    {sipName_AUI_DOCKART_INACTIVE_CAPTION_COLOUR, static_cast<int>(::wxAUI_DOCKART_INACTIVE_CAPTION_COLOUR), 25},
    {sipName_AUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR, static_cast<int>(::wxAUI_DOCKART_INACTIVE_CAPTION_GRADIENT_COLOUR), 25},
    {sipName_AUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR, static_cast<int>(::wxAUI_DOCKART_INACTIVE_CAPTION_TEXT_COLOUR), 25},
    {sipName_AUI_DOCKART_PANE_BORDER_SIZE, static_cast<int>(::wxAUI_DOCKART_PANE_BORDER_SIZE), 25},
    {sipName_AUI_DOCKART_PANE_BUTTON_SIZE, static_cast<int>(::wxAUI_DOCKART_PANE_BUTTON_SIZE), 25},
    {sipName_AUI_DOCKART_SASH_COLOUR, static_cast<int>(::wxAUI_DOCKART_SASH_COLOUR), 25},
    {sipName_AUI_DOCKART_SASH_SIZE, static_cast<int>(::wxAUI_DOCKART_SASH_SIZE), 25},
    {sipName_AUI_DOCK_BOTTOM, static_cast<int>(::wxAUI_DOCK_BOTTOM), 15},
    {sipName_AUI_DOCK_CENTER, static_cast<int>(::wxAUI_DOCK_CENTER), 15},
    {sipName_AUI_DOCK_CENTRE, static_cast<int>(::wxAUI_DOCK_CENTRE), 15},
    {sipName_AUI_DOCK_LEFT, static_cast<int>(::wxAUI_DOCK_LEFT), 15},
    {sipName_AUI_DOCK_NONE, static_cast<int>(::wxAUI_DOCK_NONE), 15},
    {sipName_AUI_DOCK_RIGHT, static_cast<int>(::wxAUI_DOCK_RIGHT), 15},
    {sipName_AUI_DOCK_TOP, static_cast<int>(::wxAUI_DOCK_TOP), 15},
    {sipName_AUI_GRADIENT_HORIZONTAL, static_cast<int>(::wxAUI_GRADIENT_HORIZONTAL), 24},
    {sipName_AUI_GRADIENT_NONE, static_cast<int>(::wxAUI_GRADIENT_NONE), 24},
    {sipName_AUI_GRADIENT_VERTICAL, static_cast<int>(::wxAUI_GRADIENT_VERTICAL), 24},
    {sipName_AUI_MGR_ALLOW_ACTIVE_PANE, static_cast<int>(::wxAUI_MGR_ALLOW_ACTIVE_PANE), 17},
    {sipName_AUI_MGR_ALLOW_FLOATING, static_cast<int>(::wxAUI_MGR_ALLOW_FLOATING), 17},
    {sipName_AUI_MGR_DEFAULT, static_cast<int>(::wxAUI_MGR_DEFAULT), 17},
    {sipName_AUI_MGR_HINT_FADE, static_cast<int>(::wxAUI_MGR_HINT_FADE), 17},
    {sipName_AUI_MGR_LIVE_RESIZE, static_cast<int>(::wxAUI_MGR_LIVE_RESIZE), 17},
    {sipName_AUI_MGR_NO_VENETIAN_BLINDS_FADE, static_cast<int>(::wxAUI_MGR_NO_VENETIAN_BLINDS_FADE), 17},
    {sipName_AUI_MGR_RECTANGLE_HINT, static_cast<int>(::wxAUI_MGR_RECTANGLE_HINT), 17},
    {sipName_AUI_MGR_TRANSPARENT_DRAG, static_cast<int>(::wxAUI_MGR_TRANSPARENT_DRAG), 17},
    {sipName_AUI_MGR_TRANSPARENT_HINT, static_cast<int>(::wxAUI_MGR_TRANSPARENT_HINT), 17},
    {sipName_AUI_MGR_VENETIAN_BLINDS_HINT, static_cast<int>(::wxAUI_MGR_VENETIAN_BLINDS_HINT), 17},
    {sipName_AUI_NB_BOTTOM, static_cast<int>(::wxAUI_NB_BOTTOM), 20},
    {sipName_AUI_NB_CLOSE_BUTTON, static_cast<int>(::wxAUI_NB_CLOSE_BUTTON), 20},
    {sipName_AUI_NB_CLOSE_ON_ACTIVE_TAB, static_cast<int>(::wxAUI_NB_CLOSE_ON_ACTIVE_TAB), 20},
    {sipName_AUI_NB_CLOSE_ON_ALL_TABS, static_cast<int>(::wxAUI_NB_CLOSE_ON_ALL_TABS), 20},
    {sipName_AUI_NB_DEFAULT_STYLE, static_cast<int>(::wxAUI_NB_DEFAULT_STYLE), 20},
    {sipName_AUI_NB_LEFT, static_cast<int>(::wxAUI_NB_LEFT), 20},
    {sipName_AUI_NB_MIDDLE_CLICK_CLOSE, static_cast<int>(::wxAUI_NB_MIDDLE_CLICK_CLOSE), 20},
    {sipName_AUI_NB_RIGHT, static_cast<int>(::wxAUI_NB_RIGHT), 20},
    {sipName_AUI_NB_SCROLL_BUTTONS, static_cast<int>(::wxAUI_NB_SCROLL_BUTTONS), 20},
    {sipName_AUI_NB_TAB_EXTERNAL_MOVE, static_cast<int>(::wxAUI_NB_TAB_EXTERNAL_MOVE), 20},
    {sipName_AUI_NB_TAB_FIXED_WIDTH, static_cast<int>(::wxAUI_NB_TAB_FIXED_WIDTH), 20},
    {sipName_AUI_NB_TAB_MOVE, static_cast<int>(::wxAUI_NB_TAB_MOVE), 20},
    {sipName_AUI_NB_TAB_SPLIT, static_cast<int>(::wxAUI_NB_TAB_SPLIT), 20},
    {sipName_AUI_NB_TOP, static_cast<int>(::wxAUI_NB_TOP), 20},
    {sipName_AUI_NB_WINDOWLIST_BUTTON, static_cast<int>(::wxAUI_NB_WINDOWLIST_BUTTON), 20},
    {sipName_AUI_ORIENTATION_MASK, static_cast<int>(::wxAUI_ORIENTATION_MASK), 41},
    {sipName_AUI_TBART_GRIPPER_SIZE, static_cast<int>(::wxAUI_TBART_GRIPPER_SIZE), 37},
    {sipName_AUI_TBART_OVERFLOW_SIZE, static_cast<int>(::wxAUI_TBART_OVERFLOW_SIZE), 37},
    {sipName_AUI_TBART_SEPARATOR_SIZE, static_cast<int>(::wxAUI_TBART_SEPARATOR_SIZE), 37},
    {sipName_AUI_TBTOOL_TEXT_BOTTOM, static_cast<int>(::wxAUI_TBTOOL_TEXT_BOTTOM), 42},
    {sipName_AUI_TBTOOL_TEXT_LEFT, static_cast<int>(::wxAUI_TBTOOL_TEXT_LEFT), 42},
    {sipName_AUI_TBTOOL_TEXT_RIGHT, static_cast<int>(::wxAUI_TBTOOL_TEXT_RIGHT), 42},
    {sipName_AUI_TBTOOL_TEXT_TOP, static_cast<int>(::wxAUI_TBTOOL_TEXT_TOP), 42},
    {sipName_AUI_TB_DEFAULT_STYLE, static_cast<int>(::wxAUI_TB_DEFAULT_STYLE), 41},
    {sipName_AUI_TB_GRIPPER, static_cast<int>(::wxAUI_TB_GRIPPER), 41},
    {sipName_AUI_TB_HORIZONTAL, static_cast<int>(::wxAUI_TB_HORIZONTAL), 41},
    {sipName_AUI_TB_HORZ_LAYOUT, static_cast<int>(::wxAUI_TB_HORZ_LAYOUT), 41},
    {sipName_AUI_TB_HORZ_TEXT, static_cast<int>(::wxAUI_TB_HORZ_TEXT), 41},
    {sipName_AUI_TB_NO_AUTORESIZE, static_cast<int>(::wxAUI_TB_NO_AUTORESIZE), 41},
    {sipName_AUI_TB_NO_TOOLTIPS, static_cast<int>(::wxAUI_TB_NO_TOOLTIPS), 41},
    {sipName_AUI_TB_OVERFLOW, static_cast<int>(::wxAUI_TB_OVERFLOW), 41},
    {sipName_AUI_TB_PLAIN_BACKGROUND, static_cast<int>(::wxAUI_TB_PLAIN_BACKGROUND), 41},
    {sipName_AUI_TB_TEXT, static_cast<int>(::wxAUI_TB_TEXT), 41},
    {sipName_AUI_TB_VERTICAL, static_cast<int>(::wxAUI_TB_VERTICAL), 41},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes__aui[] = {
    &enumTypes[4].etd_base,
    &sipTypeDef__aui_wxAuiDefaultDockArt.ctd_base,
    &sipTypeDef__aui_wxAuiDefaultTabArt.ctd_base,
    &sipTypeDef__aui_wxAuiDefaultToolBarArt.ctd_base,
    &sipTypeDef__aui_wxAuiDockArt.ctd_base,
    &sipTypeDef__aui_wxAuiDockInfo.ctd_base,
    &sipTypeDef__aui_wxAuiDockInfoArray.ctd_base,
    &sipTypeDef__aui_wxAuiDockInfoPtrArray.ctd_base,
    &sipTypeDef__aui_wxAuiDockUIPart.ctd_base,
    &sipTypeDef__aui_wxAuiDockUIPartArray.ctd_base,
    &sipTypeDef__aui_wxAuiFloatingFrame.ctd_base,
    &sipTypeDef__aui_wxAuiMDIChildFrame.ctd_base,
    &sipTypeDef__aui_wxAuiMDIClientWindow.ctd_base,
    &sipTypeDef__aui_wxAuiMDIParentFrame.ctd_base,
    &sipTypeDef__aui_wxAuiManager.ctd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef__aui_wxAuiManagerEvent.ctd_base,
    &enumTypes[8].etd_base,
    &sipTypeDef__aui_wxAuiNotebook.ctd_base,
    &sipTypeDef__aui_wxAuiNotebookEvent.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef__aui_wxAuiNotebookPage.ctd_base,
    &sipTypeDef__aui_wxAuiNotebookPageArray.ctd_base,
    &enumTypes[5].etd_base,
    &enumTypes[6].etd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef__aui_wxAuiPaneInfo.ctd_base,
    &sipTypeDef__aui_wxAuiPaneInfoArray.ctd_base,
    &sipTypeDef__aui_wxAuiPaneInfoPtrArray.ctd_base,
    &sipTypeDef__aui_wxAuiSimpleTabArt.ctd_base,
    &sipTypeDef__aui_wxAuiTabArt.ctd_base,
    &sipTypeDef__aui_wxAuiTabContainer.ctd_base,
    &sipTypeDef__aui_wxAuiTabContainerButton.ctd_base,
    &sipTypeDef__aui_wxAuiTabContainerButtonArray.ctd_base,
    &sipTypeDef__aui_wxAuiTabCtrl.ctd_base,
    &sipTypeDef__aui_wxAuiToolBar.ctd_base,
    &sipTypeDef__aui_wxAuiToolBarArt.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef__aui_wxAuiToolBarEvent.ctd_base,
    &sipTypeDef__aui_wxAuiToolBarItem.ctd_base,
    &sipTypeDef__aui_wxAuiToolBarItemArray.ctd_base,
    &enumTypes[3].etd_base,
    &enumTypes[1].etd_base,
};


/* This defines the types that this module needs to import from _core. */
sipImportedTypeDef sipImportedTypes__aui__core[] = {
    {"wxArrayInt"},
    {"wxBitmap"},
    {"wxBookCtrlBase"},
    {"wxBookCtrlEvent"},
    {"wxBorder"},
    {"wxColour"},
    {"wxCommandEvent"},
    {"wxControl"},
    {"wxDC"},
    {"wxEvent"},
    {"wxEventCategory"},
    {"wxEvtHandler"},
    {"wxFont"},
    {"wxFrame"},
    {"wxIcon"},
    {"wxIconBundle"},
    {"wxImageList"},
    {"wxItemKind"},
    {"wxMDIChildFrameBase"},
    {"wxMenu"},
    {"wxMenuBar"},
    {"wxNonOwnedWindow"},
    {"wxNotifyEvent"},
    {"wxObject"},
    {"wxOrientation"},
    {"wxPoint"},
    {"wxRect"},
    {"wxSize"},
    {"wxSizer"},
    {"wxSizerItem"},
    {"wxStatusBar"},
    {"wxString"},
    {"wxTDIChildFrame"},
    {"wxToolBar"},
    {"wxTopLevelWindow"},
    {"wxTrackable"},
    {"wxValidator"},
    {"wxVisualAttributes"},
    {"wxWindow"},
    {"wxWindowBase"},
    {"wxWindowVariant"},
    {"wxWithImages"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"wx._core", sipImportedTypes__aui__core, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* Define the ints to be added to this module dictionary. */
static sipIntInstanceDef intInstances[] = {
    {sipName_wxEVT_AUINOTEBOOK_ALLOW_DND, wxEVT_AUINOTEBOOK_ALLOW_DND},
    {sipName_wxEVT_AUINOTEBOOK_BEGIN_DRAG, wxEVT_AUINOTEBOOK_BEGIN_DRAG},
    {sipName_wxEVT_AUINOTEBOOK_BG_DCLICK, wxEVT_AUINOTEBOOK_BG_DCLICK},
    {sipName_wxEVT_AUINOTEBOOK_BUTTON, wxEVT_AUINOTEBOOK_BUTTON},
    {sipName_wxEVT_AUINOTEBOOK_DRAG_DONE, wxEVT_AUINOTEBOOK_DRAG_DONE},
    {sipName_wxEVT_AUINOTEBOOK_DRAG_MOTION, wxEVT_AUINOTEBOOK_DRAG_MOTION},
    {sipName_wxEVT_AUINOTEBOOK_END_DRAG, wxEVT_AUINOTEBOOK_END_DRAG},
    {sipName_wxEVT_AUINOTEBOOK_PAGE_CHANGED, wxEVT_AUINOTEBOOK_PAGE_CHANGED},
    {sipName_wxEVT_AUINOTEBOOK_PAGE_CHANGING, wxEVT_AUINOTEBOOK_PAGE_CHANGING},
    {sipName_wxEVT_AUINOTEBOOK_PAGE_CLOSE, wxEVT_AUINOTEBOOK_PAGE_CLOSE},
    {sipName_wxEVT_AUINOTEBOOK_PAGE_CLOSED, wxEVT_AUINOTEBOOK_PAGE_CLOSED},
    {sipName_wxEVT_AUINOTEBOOK_TAB_MIDDLE_DOWN, wxEVT_AUINOTEBOOK_TAB_MIDDLE_DOWN},
    {sipName_wxEVT_AUINOTEBOOK_TAB_MIDDLE_UP, wxEVT_AUINOTEBOOK_TAB_MIDDLE_UP},
    {sipName_wxEVT_AUINOTEBOOK_TAB_RIGHT_DOWN, wxEVT_AUINOTEBOOK_TAB_RIGHT_DOWN},
    {sipName_wxEVT_AUINOTEBOOK_TAB_RIGHT_UP, wxEVT_AUINOTEBOOK_TAB_RIGHT_UP},
    {sipName_wxEVT_AUITOOLBAR_BEGIN_DRAG, wxEVT_AUITOOLBAR_BEGIN_DRAG},
    {sipName_wxEVT_AUITOOLBAR_MIDDLE_CLICK, wxEVT_AUITOOLBAR_MIDDLE_CLICK},
    {sipName_wxEVT_AUITOOLBAR_OVERFLOW_CLICK, wxEVT_AUITOOLBAR_OVERFLOW_CLICK},
    {sipName_wxEVT_AUITOOLBAR_RIGHT_CLICK, wxEVT_AUITOOLBAR_RIGHT_CLICK},
    {sipName_wxEVT_AUITOOLBAR_TOOL_DROPDOWN, wxEVT_AUITOOLBAR_TOOL_DROPDOWN},
    {sipName_wxEVT_AUI_FIND_MANAGER, wxEVT_AUI_FIND_MANAGER},
    {sipName_wxEVT_AUI_PANE_ACTIVATED, wxEVT_AUI_PANE_ACTIVATED},
    {sipName_wxEVT_AUI_PANE_BUTTON, wxEVT_AUI_PANE_BUTTON},
    {sipName_wxEVT_AUI_PANE_CLOSE, wxEVT_AUI_PANE_CLOSE},
    {sipName_wxEVT_AUI_PANE_MAXIMIZE, wxEVT_AUI_PANE_MAXIMIZE},
    {sipName_wxEVT_AUI_PANE_RESTORE, wxEVT_AUI_PANE_RESTORE},
    {sipName_wxEVT_AUI_RENDER, wxEVT_AUI_RENDER},
    {0, 0}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI__aui = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_wx__aui,
    0,
    sipStrings__aui,
    importsTable,
    SIP_NULLPTR,
    43,
    sipExportedTypes__aui,
    SIP_NULLPTR,
    90,
    enummembers,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, intInstances, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI__aui;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit__aui
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        init_aui
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "wx._aui",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_wx__aui, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_wx__aui), sip_methods);
#endif

    if (sipModule == SIP_NULLPTR)
        SIP_MODULE_RETURN(SIP_NULLPTR);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("wx.siplib");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("wx.siplib"));
#endif

    if (sip_sipmod == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == SIP_NULLPTR || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI__aui = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "wx.siplib._C_API"));
#else
    sipAPI__aui = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI__aui == SIP_NULLPTR)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI__aui,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }
    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI__aui,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(SIP_NULLPTR);
    }

    SIP_MODULE_RETURN(sipModule);
}
