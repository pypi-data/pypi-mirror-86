/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.24
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_aui.h"

        #include <wx/aui/framemanager.h>

        #include <wx/sizer.h>
        #include <wx/aui/framemanager.h>
        #include <wx/aui/framemanager.h>
        #include <wx/gdicmn.h>
        #include <wx/sizer.h>


/* Call the instance's destructor. */
extern "C" {static void release_wxAuiDockUIPart(void *, int);}
static void release_wxAuiDockUIPart(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::wxAuiDockUIPart *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void *array_wxAuiDockUIPart(Py_ssize_t);}
static void *array_wxAuiDockUIPart(Py_ssize_t sipNrElem)
{
    return new  ::wxAuiDockUIPart[sipNrElem];
}


extern "C" {static void assign_wxAuiDockUIPart(void *, SIP_SSIZE_T, void *);}
static void assign_wxAuiDockUIPart(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::wxAuiDockUIPart *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::wxAuiDockUIPart *>(sipSrc);
}


extern "C" {static void *copy_wxAuiDockUIPart(const void *, SIP_SSIZE_T);}
static void *copy_wxAuiDockUIPart(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::wxAuiDockUIPart(reinterpret_cast<const  ::wxAuiDockUIPart *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_wxAuiDockUIPart(sipSimpleWrapper *);}
static void dealloc_wxAuiDockUIPart(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_wxAuiDockUIPart(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_wxAuiDockUIPart(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_wxAuiDockUIPart(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::wxAuiDockUIPart *sipCpp = SIP_NULLPTR;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxAuiDockUIPart();
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    {
        const  ::wxAuiDockUIPart* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_wxAuiDockUIPart, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new  ::wxAuiDockUIPart(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}

static sipEnumMemberDef enummembers_wxAuiDockUIPart[] = {
    {sipName_typeBackground, static_cast<int>( ::wxAuiDockUIPart::typeBackground), -1},
    {sipName_typeCaption, static_cast<int>( ::wxAuiDockUIPart::typeCaption), -1},
    {sipName_typeDock, static_cast<int>( ::wxAuiDockUIPart::typeDock), -1},
    {sipName_typeDockSizer, static_cast<int>( ::wxAuiDockUIPart::typeDockSizer), -1},
    {sipName_typeGripper, static_cast<int>( ::wxAuiDockUIPart::typeGripper), -1},
    {sipName_typePane, static_cast<int>( ::wxAuiDockUIPart::typePane), -1},
    {sipName_typePaneBorder, static_cast<int>( ::wxAuiDockUIPart::typePaneBorder), -1},
    {sipName_typePaneButton, static_cast<int>( ::wxAuiDockUIPart::typePaneButton), -1},
    {sipName_typePaneSizer, static_cast<int>( ::wxAuiDockUIPart::typePaneSizer), -1},
};


extern "C" {static PyObject *varget_wxAuiDockUIPart_button(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_button(void *sipSelf, PyObject *, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->button;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_wxAuiDockUIPart_button(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_button(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipLong_AsInt(sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

    sipCpp->button = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_cont_sizer(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_cont_sizer(void *sipSelf, PyObject *, PyObject *)
{
     ::wxSizer*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->cont_sizer;

    return sipConvertFromType(sipVal, sipType_wxSizer, SIP_NULLPTR);
}


extern "C" {static int varset_wxAuiDockUIPart_cont_sizer(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_cont_sizer(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::wxSizer*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::wxSizer *>(sipForceConvertToType(sipPy, sipType_wxSizer, SIP_NULLPTR, 0, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->cont_sizer = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_dock(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_dock(void *sipSelf, PyObject *, PyObject *)
{
     ::wxAuiDockInfo*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->dock;

    return sipConvertFromType(sipVal, sipType_wxAuiDockInfo, SIP_NULLPTR);
}


extern "C" {static int varset_wxAuiDockUIPart_dock(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_dock(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::wxAuiDockInfo*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::wxAuiDockInfo *>(sipForceConvertToType(sipPy, sipType_wxAuiDockInfo, SIP_NULLPTR, 0, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->dock = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_orientation(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_orientation(void *sipSelf, PyObject *, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->orientation;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_wxAuiDockUIPart_orientation(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_orientation(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipLong_AsInt(sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

    sipCpp->orientation = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_pane(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_pane(void *sipSelf, PyObject *, PyObject *)
{
     ::wxAuiPaneInfo*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->pane;

    return sipConvertFromType(sipVal, sipType_wxAuiPaneInfo, SIP_NULLPTR);
}


extern "C" {static int varset_wxAuiDockUIPart_pane(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_pane(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::wxAuiPaneInfo*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::wxAuiPaneInfo *>(sipForceConvertToType(sipPy, sipType_wxAuiPaneInfo, SIP_NULLPTR, 0, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->pane = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_rect(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_rect(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::wxRect*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -6);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->rect;

    sipPy = sipConvertFromType(sipVal, sipType_wxRect, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -26, sipPySelf);
        sipKeepReference(sipPySelf, -6, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_wxAuiDockUIPart_rect(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_rect(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::wxRect*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    int sipValState;
    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::wxRect *>(sipForceConvertToType(sipPy, sipType_wxRect, SIP_NULLPTR, SIP_NOT_NONE, &sipValState, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->rect = *sipVal;

    sipReleaseType(sipVal, sipType_wxRect, sipValState);

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_sizer_item(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_sizer_item(void *sipSelf, PyObject *, PyObject *)
{
     ::wxSizerItem*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->sizer_item;

    return sipConvertFromType(sipVal, sipType_wxSizerItem, SIP_NULLPTR);
}


extern "C" {static int varset_wxAuiDockUIPart_sizer_item(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_sizer_item(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::wxSizerItem*sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::wxSizerItem *>(sipForceConvertToType(sipPy, sipType_wxSizerItem, SIP_NULLPTR, 0, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->sizer_item = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_wxAuiDockUIPart_type(void *, PyObject *, PyObject *);}
static PyObject *varget_wxAuiDockUIPart_type(void *sipSelf, PyObject *, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipCpp->type;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_wxAuiDockUIPart_type(void *, PyObject *, PyObject *);}
static int varset_wxAuiDockUIPart_type(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
     ::wxAuiDockUIPart *sipCpp = reinterpret_cast< ::wxAuiDockUIPart *>(sipSelf);

    sipVal = sipLong_AsInt(sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

    sipCpp->type = sipVal;

    return 0;
}

sipVariableDef variables_wxAuiDockUIPart[] = {
    {InstanceVariable, sipName_button, (PyMethodDef *)varget_wxAuiDockUIPart_button, (PyMethodDef *)varset_wxAuiDockUIPart_button, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_cont_sizer, (PyMethodDef *)varget_wxAuiDockUIPart_cont_sizer, (PyMethodDef *)varset_wxAuiDockUIPart_cont_sizer, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_dock, (PyMethodDef *)varget_wxAuiDockUIPart_dock, (PyMethodDef *)varset_wxAuiDockUIPart_dock, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_orientation, (PyMethodDef *)varget_wxAuiDockUIPart_orientation, (PyMethodDef *)varset_wxAuiDockUIPart_orientation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_pane, (PyMethodDef *)varget_wxAuiDockUIPart_pane, (PyMethodDef *)varset_wxAuiDockUIPart_pane, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_rect, (PyMethodDef *)varget_wxAuiDockUIPart_rect, (PyMethodDef *)varset_wxAuiDockUIPart_rect, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_sizer_item, (PyMethodDef *)varget_wxAuiDockUIPart_sizer_item, (PyMethodDef *)varset_wxAuiDockUIPart_sizer_item, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_type, (PyMethodDef *)varget_wxAuiDockUIPart_type, (PyMethodDef *)varset_wxAuiDockUIPart_type, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_wxAuiDockUIPart, "");


sipClassTypeDef sipTypeDef__aui_wxAuiDockUIPart = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_CLASS,
        sipNameNr_wxAuiDockUIPart,
        {SIP_NULLPTR},
        SIP_NULLPTR
    },
    {
        sipNameNr_AuiDockUIPart,
        {0, 0, 1},
        0, SIP_NULLPTR,
        9, enummembers_wxAuiDockUIPart,
        8, variables_wxAuiDockUIPart,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_wxAuiDockUIPart,
    -1,
    -1,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_wxAuiDockUIPart,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_wxAuiDockUIPart,
    assign_wxAuiDockUIPart,
    array_wxAuiDockUIPart,
    copy_wxAuiDockUIPart,
    release_wxAuiDockUIPart,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
