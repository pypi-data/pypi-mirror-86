.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.html.HtmlWindowInterface:

==========================================================================================================================================
|phoenix_title|  **wx.html.HtmlWindowInterface**
==========================================================================================================================================

Abstract interface to a HTML rendering window (such as :ref:`wx.html.HtmlWindow`  or :ref:`wx.html.HtmlListBox`) that is passed to :ref:`wx.html.HtmlWinParser`.          

It encapsulates all communication from the parser to the window.           




|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>HtmlWindowInterface</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.html.HtmlWindowInterface_inheritance.png" alt="Inheritance diagram of HtmlWindowInterface" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.html.HtmlWindowInterface.html" title="wx.html.HtmlWindowInterface" alt="" coords="5,5,227,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.html.HtmlWindow`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.html.HtmlWindowInterface.__init__`                                    Ctor.
:meth:`~wx.html.HtmlWindowInterface.GetHTMLBackgroundColour`                     Returns background colour to use by default.
:meth:`~wx.html.HtmlWindowInterface.GetHTMLCursor`                               Returns mouse cursor of given `type`.
:meth:`~wx.html.HtmlWindowInterface.GetHTMLWindow`                               Returns the window used for rendering (may be ``None``).
:meth:`~wx.html.HtmlWindowInterface.HTMLCoordsToWindow`                          Converts coordinates `pos`  relative to given `cell`  to physical coordinates in the window.
:meth:`~wx.html.HtmlWindowInterface.OnHTMLLinkClicked`                           Called when a link is clicked.
:meth:`~wx.html.HtmlWindowInterface.OnHTMLOpeningURL`                            Called when the parser needs to open another URL (e.g.
:meth:`~wx.html.HtmlWindowInterface.SetHTMLBackgroundColour`                     Sets window's background to colour `clr`.
:meth:`~wx.html.HtmlWindowInterface.SetHTMLBackgroundImage`                      Sets window's background to given bitmap.
:meth:`~wx.html.HtmlWindowInterface.SetHTMLStatusText`                           Sets status bar text.
:meth:`~wx.html.HtmlWindowInterface.SetHTMLWindowTitle`                          Called by the parser to set window's title to given text.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.html.HtmlWindowInterface.HTMLBackgroundColour`                        See :meth:`~wx.html.HtmlWindowInterface.GetHTMLBackgroundColour` and :meth:`~wx.html.HtmlWindowInterface.SetHTMLBackgroundColour`
:attr:`~wx.html.HtmlWindowInterface.HTMLWindow`                                  See :meth:`~wx.html.HtmlWindowInterface.GetHTMLWindow`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.html.HtmlWindowInterface(object)

   **Possible constructors**::

       HtmlWindowInterface()
       
   
   Abstract interface to a HTML rendering window (such as HtmlWindow or
   HtmlListBox) that is passed to HtmlWinParser.



   .. method:: __init__(self)

      Ctor.                   





   .. method:: GetHTMLBackgroundColour(self)

      Returns background colour to use by default.                  

      :rtype: :ref:`Colour`








   .. method:: GetHTMLCursor(self, type)

      Returns mouse cursor of given `type`.                  


      :param `type`: 
      :type `type`: HtmlWindowInterface.HTMLCursor




      :rtype: :ref:`Cursor`








   .. method:: GetHTMLWindow(self)

      Returns the window used for rendering (may be ``None``).                  

      :rtype: :ref:`Window`








   .. method:: HTMLCoordsToWindow(self, cell, pos)

      Converts coordinates `pos`  relative to given `cell`  to physical coordinates in the window.                  


      :param `cell`: 
      :type `cell`: wx.html.HtmlCell
      :param `pos`: 
      :type `pos`: wx.Point




      :rtype: :ref:`Point`








   .. method:: OnHTMLLinkClicked(self, link)

      Called when a link is clicked.                  




      :param `link`: information about the clicked link   
      :type `link`: wx.html.HtmlLinkInfo




                  





   .. method:: OnHTMLOpeningURL(self, type, url)

      Called when the parser needs to open another URL (e.g.                  

      an image). 




      :param `type`: Type of the URL request (e.g. image)   
      :type `type`: wx.html.HtmlURLType
      :param `url`: URL the parser wants to open   
      :type `url`: string








      If the return value is ``wx.html.HTML_REDIRECT``, then the URL to redirect to will be stored in this variable (the pointer must never be ``None``) 



      :rtype: `tuple`



                  



      :returns: 

         ( :ref:`wx.html.HtmlOpeningStatus`, `redirectTo` ) 








   .. method:: SetHTMLBackgroundColour(self, clr)

      Sets window's background to colour `clr`.                  


      :param `clr`: 
      :type `clr`: wx.Colour







   .. method:: SetHTMLBackgroundImage(self, bmpBg)

      Sets window's background to given bitmap.                  


      :param `bmpBg`: 
      :type `bmpBg`: wx.Bitmap







   .. method:: SetHTMLStatusText(self, text)

      Sets status bar text.                  


      :param `text`: 
      :type `text`: string







   .. method:: SetHTMLWindowTitle(self, title)

      Called by the parser to set window's title to given text.                  


      :param `title`: 
      :type `title`: string







   .. attribute:: HTMLBackgroundColour

      See :meth:`~wx.html.HtmlWindowInterface.GetHTMLBackgroundColour` and :meth:`~wx.html.HtmlWindowInterface.SetHTMLBackgroundColour`


   .. attribute:: HTMLWindow

      See :meth:`~wx.html.HtmlWindowInterface.GetHTMLWindow`


.. toctree::
   :maxdepth: 1
   :hidden:

   wx.html.HtmlWindowInterface.HTMLCursor.enumeration
