.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.floatcanvas.FCObjects

.. highlight:: python



.. _wx.lib.floatcanvas.FCObjects.Group:

==========================================================================================================================================
|phoenix_title|  **wx.lib.floatcanvas.FCObjects.Group**
==========================================================================================================================================

A group of other FloatCanvas Objects

Not all DrawObject methods may apply here.

Note that if an object is in more than one group, it will get drawn more than once.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Group</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.floatcanvas.FCObjects.Group_inheritance.png" alt="Inheritance diagram of Group" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.floatcanvas.FCObjects.Group.html" title="wx.lib.floatcanvas.FCObjects.Group" alt="" coords="24,83,276,112"/> <area shape="rect" id="node2" href="wx.lib.floatcanvas.FCObjects.DrawObject.html" title="wx.lib.floatcanvas.FCObjects.DrawObject" alt="" coords="5,5,295,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.floatcanvas.FCObjects.DrawObject`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.floatcanvas.FCObjects.Group.__init__`                             Default class constructor.
:meth:`~wx.lib.floatcanvas.FCObjects.Group.AddObject`                            Add an object to the group.
:meth:`~wx.lib.floatcanvas.FCObjects.Group.AddObjects`                           Add objects to the group.
:meth:`~wx.lib.floatcanvas.FCObjects.Group.Bind`                                 Bind an event to the Group object
:meth:`~wx.lib.floatcanvas.FCObjects.Group.CalcBoundingBox`                      Calculate the bounding box.
:meth:`~wx.lib.floatcanvas.FCObjects.Group.Move`                                 Moves the object by delta, where delta is a (dx, dy) pair.
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetColor`                             Set the Color
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetFillColor`                         Set the FillColor
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetFillStyle`                         Set the FillStyle
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetLineColor`                         Set the LineColor
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetLineStyle`                         Set the LineStyle
:meth:`~wx.lib.floatcanvas.FCObjects.Group.SetLineWidth`                         Set the LineWidth
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Group(DrawObject)

   A group of other FloatCanvas Objects
   
   Not all DrawObject methods may apply here.
   
   Note that if an object is in more than one group, it will get drawn more than once.

   .. method:: __init__(self, ObjectList=[], InForeground=False, IsVisible=True)

      Default class constructor.
      
      :param list `ObjectList`: a list of :class:`DrawObject` to be grouped
      :param boolean `InForeground`: keep in foreground
      :param boolean `IsVisible`: keep it visible


   .. method:: AddObject(self, obj)

      Add an object to the group.
      
      :param DrawObject `obj`: object to add


   .. method:: AddObjects(self, Objects)

      Add objects to the group.
      
      :param list `Objects`: a list of :class:`DrawObject` to be grouped


   .. method:: Bind(self, Event, CallBackFun)

      Bind an event to the Group object
      
      :param `Event`: see below for supported event types
      
       - EVT_FC_LEFT_DOWN
       - EVT_FC_LEFT_UP
       - EVT_FC_LEFT_DCLICK
       - EVT_FC_MIDDLE_DOWN
       - EVT_FC_MIDDLE_UP
       - EVT_FC_MIDDLE_DCLICK
       - EVT_FC_RIGHT_DOWN
       - EVT_FC_RIGHT_UP
       - EVT_FC_RIGHT_DCLICK
       - EVT_FC_ENTER_OBJECT
       - EVT_FC_LEAVE_OBJECT
      
      :param `CallBackFun`: the call back function for the event


   .. method:: CalcBoundingBox(self)

      Calculate the bounding box.


   .. method:: Move(self, Delta)

      Moves the object by delta, where delta is a (dx, dy) pair.
      
      :param `Delta`: is a (dx, dy) pair ideally a `NumPy <http://www.numpy.org/>`_
       array of shape (2, )


   .. method:: SetColor(self, Color)

      Set the Color
      
      :param `Color`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
       for valid values


   .. method:: SetFillColor(self, Color)

      Set the FillColor
      
      :param `FillColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
       for valid values


   .. method:: SetFillStyle(self, FillStyle)

      Set the FillStyle
      
      :param `FillStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetFillStyle`
       for valid values


   .. method:: SetLineColor(self, Color)

      Set the LineColor
      
      :param `LineColor`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetColor`
       for valid values


   .. method:: SetLineStyle(self, LineStyle)

      Set the LineStyle
      
      :param `LineStyle`: see :meth:`~lib.floatcanvas.FloatCanvas.DrawObject.SetLineStyle`
       for valid values


   .. method:: SetLineWidth(self, LineWidth)

      Set the LineWidth
      
      :param integer `LineWidth`: line width in pixels


