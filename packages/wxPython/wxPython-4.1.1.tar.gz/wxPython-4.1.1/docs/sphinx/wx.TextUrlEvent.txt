.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.TextUrlEvent:

==========================================================================================================================================
|phoenix_title|  **wx.TextUrlEvent**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TextUrlEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.TextUrlEvent_inheritance.png" alt="Inheritance diagram of TextUrlEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.TextUrlEvent.html" title="wx.TextUrlEvent" alt="" coords="16,237,144,267"/> <area shape="rect" id="node2" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="5,160,155,189"/> <area shape="rect" id="node3" href="wx.Event.html" title="wx.Event" alt="" coords="39,83,121,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="37,5,123,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.TextUrlEvent.__init__`                                                
:meth:`~wx.TextUrlEvent.Clone`                                                   Returns a copy of the event.
:meth:`~wx.TextUrlEvent.GetMouseEvent`                                           
:meth:`~wx.TextUrlEvent.GetURLEnd`                                               
:meth:`~wx.TextUrlEvent.GetURLStart`                                             
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.TextUrlEvent.MouseEvent`                                              See :meth:`~wx.TextUrlEvent.GetMouseEvent`
:attr:`~wx.TextUrlEvent.URLEnd`                                                  See :meth:`~wx.TextUrlEvent.GetURLEnd`
:attr:`~wx.TextUrlEvent.URLStart`                                                See :meth:`~wx.TextUrlEvent.GetURLStart`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.TextUrlEvent(CommandEvent)

   **Possible constructors**::

       TextUrlEvent(winid, evtMouse, start, end)
       
       TextUrlEvent(event)
       



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, winid, evtMouse, start, end)`
      
      
      
      
      :param `winid`: 
      :type `winid`: int
      :param `evtMouse`: 
      :type `evtMouse`: wx.MouseEvent
      :param `start`: 
      :type `start`: long
      :param `end`: 
      :type `end`: long
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, event)`
      
      
      
      
      :param `event`: 
      :type `event`: wx.TextUrlEvent
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Clone(self)

      Returns a copy of the event.                  

      Any event that is posted to the wxWidgets event system for later action (via :meth:`wx.EvtHandler.AddPendingEvent` , :meth:`wx.EvtHandler.QueueEvent`   or :ref:`wx.PostEvent`) must implement this method. 

      All wxWidgets events fully implement this method, but any derived events implemented by the user should also implement this method just in case they (or some event derived from them) are ever posted. 

      All wxWidgets events implement a copy constructor, so the easiest way of implementing the Clone function is to implement a copy constructor for a new event (call it MyEvent) and then define the Clone function like this: 

      ::

          def Clone(self):

              return MyEvent()

                 

      :rtype: :ref:`wx.Event`








   .. method:: GetMouseEvent(self)



      :rtype: :ref:`wx.MouseEvent`








   .. method:: GetURLEnd(self)



      :rtype: `long`








   .. method:: GetURLStart(self)



      :rtype: `long`








   .. attribute:: MouseEvent

      See :meth:`~wx.TextUrlEvent.GetMouseEvent`


   .. attribute:: URLEnd

      See :meth:`~wx.TextUrlEvent.GetURLEnd`


   .. attribute:: URLStart

      See :meth:`~wx.TextUrlEvent.GetURLStart`

