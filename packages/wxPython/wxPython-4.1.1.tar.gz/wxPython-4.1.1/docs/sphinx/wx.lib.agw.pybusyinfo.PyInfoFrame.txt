.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.pybusyinfo

.. highlight:: python



.. _wx.lib.agw.pybusyinfo.PyInfoFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.pybusyinfo.PyInfoFrame**
==========================================================================================================================================

Base class for :class:`PyBusyInfo`. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PyInfoFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.pybusyinfo.PyInfoFrame_inheritance.png" alt="Inheritance diagram of PyInfoFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.pybusyinfo.PyInfoFrame.html" title="wx.lib.agw.pybusyinfo.PyInfoFrame" alt="" coords="5,547,257,576"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="89,469,174,499"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="54,392,209,421"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="47,315,215,344"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="83,237,180,267"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="67,160,196,189"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="73,83,190,112"/> <area shape="rect" id="node8" href="wx.Object.html" title="wx.Object" alt="" coords="28,5,115,35"/> <area shape="rect" id="node9" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="139,5,246,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Frame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.pybusyinfo.PyInfoFrame.__init__`                              Default class constructor.
:meth:`~wx.lib.agw.pybusyinfo.PyInfoFrame.OnErase`                               Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`PyInfoFrame`.
:meth:`~wx.lib.agw.pybusyinfo.PyInfoFrame.OnPaint`                               Handles the ``wx.EVT_PAINT`` event for :class:`PyInfoFrame`.
:meth:`~wx.lib.agw.pybusyinfo.PyInfoFrame.SetBusyShape`                          Sets :class:`PyInfoFrame` shape using the region created from the bitmap.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PyInfoFrame(wx.Frame)

   Base class for :class:`PyBusyInfo`. 

   .. method:: __init__(self, parent, message, title, icon)

      Default class constructor.
      
      :param `parent`: the frame parent;
      :param `message`: the message to display in the :class:`PyBusyInfo`;
      :param `title`: the main :class:`PyBusyInfo` title;
      :param `icon`: an icon to draw as the frame icon, an instance of :class:`wx.Bitmap`.


   .. method:: OnErase(self, event)

      Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`PyInfoFrame`.
      
      :param `event`: a :class:`EraseEvent` event to be processed.
      
      :note: This method is intentionally empty to reduce flicker.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` event for :class:`PyInfoFrame`.
      
      :param `event`: a :class:`PaintEvent` to be processed.


   .. method:: SetBusyShape(self, event=None)

      Sets :class:`PyInfoFrame` shape using the region created from the bitmap.
      
      :param `event`: a :class:`wx.WindowCreateEvent` event (GTK only, as GTK supports setting
       the window shape only during window creation).


