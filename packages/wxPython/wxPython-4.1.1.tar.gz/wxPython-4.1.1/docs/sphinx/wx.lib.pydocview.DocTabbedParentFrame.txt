.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pydocview

.. highlight:: python



.. _wx.lib.pydocview.DocTabbedParentFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pydocview.DocTabbedParentFrame**
==========================================================================================================================================

The DocTabbedParentFrame class provides a default top-level frame for
applications using the document/view framework. This class can only be
used for MDI parent frames that use a tabbed interface.

It cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
classes.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocTabbedParentFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pydocview.DocTabbedParentFrame_inheritance.png" alt="Inheritance diagram of DocTabbedParentFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pydocview.DocTabbedParentFrame.html" title="wx.lib.pydocview.DocTabbedParentFrame" alt="" coords="150,547,441,576"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="66,469,151,499"/> <area shape="rect" id="node3" href="wx.lib.pydocview.DocFrameMixIn.html" title="wx.lib.pydocview.DocFrameMixIn" alt="" coords="176,469,415,499"/> <area shape="rect" id="node4" href="wx.lib.pydocview.DocMDIParentFrameMixIn.html" title="wx.lib.pydocview.DocMDIParentFrameMixIn" alt="" coords="439,469,743,499"/> <area shape="rect" id="node5" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="31,392,186,421"/> <area shape="rect" id="node6" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,315,193,344"/> <area shape="rect" id="node7" href="wx.Window.html" title="wx.Window" alt="" coords="60,237,157,267"/> <area shape="rect" id="node8" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="44,160,173,189"/> <area shape="rect" id="node9" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node10" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node11" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Frame`, :class:`wx.lib.pydocview.DocFrameMixIn`, :class:`wx.lib.pydocview.DocMDIParentFrameMixIn`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.__init__`                          Constructor.  Note that the event table must be rebuilt for the
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.ActivateNotebookPage`              Sets the notebook to the specified panel.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.AddNotebookPage`                   Adds a document page to the notebook.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.CreateNotebook`                    Creates the notebook to use for the tabbed document interface.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.GetActiveChild`                    Returns the active notebook page, which to the framework is treated as
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.GetNotebook`                       Returns the notebook used by the tabbed document interface.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.GetNotebookPageIndex`              Returns the index of particular notebook panel.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.GetNotebookPageTitle`              
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnCloseWindow`                     Called when the frame is closed.  Remembers the frame size.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnExit`                            Called when File/Exit is chosen and closes the window.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnMRUFile`                         Opens the appropriate file when it is selected from the file history
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnNotebookMiddleClick`             Handles middle clicks for the notebook, closing the document whose tab was
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnNotebookMouseOver`               
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnNotebookPageChanged`             Activates a notebook page's view when it is selected.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnNotebookRightClick`              Handles right clicks for the notebook, enabling users to either close
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.OnSize`                            Called when the frame is resized and lays out the client window.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.ProcessEvent`                      Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.ProcessUpdateUIEvent`              Processes a UI event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.RemoveNotebookPage`                Removes a document page from the notebook.
:meth:`~wx.lib.pydocview.DocTabbedParentFrame.SetNotebookPageTitle`              
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocTabbedParentFrame(wx.Frame, DocFrameMixIn, DocMDIParentFrameMixIn)

   The DocTabbedParentFrame class provides a default top-level frame for
   applications using the document/view framework. This class can only be
   used for MDI parent frames that use a tabbed interface.
   
   It cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
   classes.

   .. method:: __init__(self, docManager, frame, id, title, pos = wx.DefaultPosition, size = wx.DefaultSize, style = wx.DEFAULT_FRAME_STYLE, name = "DocTabbedParentFrame", embeddedWindows = 0, minSize=20)

      Constructor.  Note that the event table must be rebuilt for the
      frame since the EvtHandler is not virtual.


   .. method:: ActivateNotebookPage(self, panel)

      Sets the notebook to the specified panel.


   .. method:: AddNotebookPage(self, panel, title)

      Adds a document page to the notebook.


   .. method:: CreateNotebook(self)

      Creates the notebook to use for the tabbed document interface.


   .. method:: GetActiveChild(self)

      Returns the active notebook page, which to the framework is treated as
      a document frame.


   .. method:: GetNotebook(self)

      Returns the notebook used by the tabbed document interface.


   .. method:: GetNotebookPageIndex(self, panel)

      Returns the index of particular notebook panel.


   .. method:: GetNotebookPageTitle(self, panel)


   .. method:: OnCloseWindow(self, event)

      Called when the frame is closed.  Remembers the frame size.


   .. method:: OnExit(self, event)

      Called when File/Exit is chosen and closes the window.


   .. method:: OnMRUFile(self, event)

      Opens the appropriate file when it is selected from the file history
      menu.


   .. method:: OnNotebookMiddleClick(self, event)

      Handles middle clicks for the notebook, closing the document whose tab was
      clicked on.


   .. method:: OnNotebookMouseOver(self, event)


   .. method:: OnNotebookPageChanged(self, event)

      Activates a notebook page's view when it is selected.


   .. method:: OnNotebookRightClick(self, event)

      Handles right clicks for the notebook, enabling users to either close
      a tab or select from the available documents if the user clicks on the
      notebook's white space.


   .. method:: OnSize(self, event)

      Called when the frame is resized and lays out the client window.


   .. method:: ProcessEvent(self, event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: ProcessUpdateUIEvent(self, event)

      Processes a UI event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: RemoveNotebookPage(self, panel)

      Removes a document page from the notebook.


   .. method:: SetNotebookPageTitle(self, panel, title)


