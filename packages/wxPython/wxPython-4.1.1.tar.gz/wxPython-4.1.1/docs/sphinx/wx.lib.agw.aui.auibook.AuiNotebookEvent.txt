.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.auibook

.. highlight:: python



.. _wx.lib.agw.aui.auibook.AuiNotebookEvent:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.auibook.AuiNotebookEvent**
==========================================================================================================================================

A specialized command event class for events sent by :class:`AuiNotebook`. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiNotebookEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.auibook.AuiNotebookEvent_inheritance.png" alt="Inheritance diagram of AuiNotebookEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.auibook.AuiNotebookEvent.html" title="wx.lib.agw.aui.auibook.AuiNotebookEvent" alt="" coords="29,392,325,421"/> <area shape="rect" id="node2" href="wx.lib.agw.aui.auibook.CommandNotebookEvent.html" title="wx.lib.agw.aui.auibook.CommandNotebookEvent" alt="" coords="5,315,348,344"/> <area shape="rect" id="node3" href="wx.PyCommandEvent.html" title="wx.PyCommandEvent" alt="" coords="94,237,259,267"/> <area shape="rect" id="node4" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="102,160,251,189"/> <area shape="rect" id="node5" href="wx.Event.html" title="wx.Event" alt="" coords="135,83,218,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="133,5,220,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.aui.auibook.CommandNotebookEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.__init__`                        Default class constructor.
:meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.Allow`                           This is the opposite of :meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.Veto` it explicitly allows the event to be
:meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.GetNotifyEvent`                  Returns the actual :class:`NotifyEvent`.
:meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.IsAllowed`                       Returns whether the event is allowed or not.
:meth:`~wx.lib.agw.aui.auibook.AuiNotebookEvent.Veto`                            Prevents the change announced by this event from happening.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiNotebookEvent(CommandNotebookEvent)

   A specialized command event class for events sent by :class:`AuiNotebook`. 

   .. method:: __init__(self, command_type=None, win_id=0)

      Default class constructor.
      
      :param `command_type`: the event kind or an instance of :class:`PyCommandEvent`.
      :param integer `win_id`: the window identification number.


   .. method:: Allow(self)

      This is the opposite of :meth:`Veto`: it explicitly allows the event to be
      processed. For most events it is not necessary to call this method as the
      events are allowed anyhow but some are forbidden by default (this will
      be mentioned in the corresponding event description).


   .. method:: GetNotifyEvent(self)

      Returns the actual :class:`NotifyEvent`. 


   .. method:: IsAllowed(self)

      Returns whether the event is allowed or not. 


   .. method:: Veto(self)

      Prevents the change announced by this event from happening.
      
      It is in general a good idea to notify the user about the reasons for
      vetoing the change because otherwise the applications behaviour (which
      just refuses to do what the user wants) might be quite surprising.


