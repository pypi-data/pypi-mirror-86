.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pydocview

.. highlight:: python



.. _wx.lib.pydocview.DocService:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pydocview.DocService**
==========================================================================================================================================

An abstract class used to add reusable services to a docview application.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocService</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pydocview.DocService_inheritance.png" alt="Inheritance diagram of DocService" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pydocview.DocService.html" title="wx.lib.pydocview.DocService" alt="" coords="5,160,216,189"/> <area shape="rect" id="node2" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="52,83,169,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="7,5,94,35"/> <area shape="rect" id="node4" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="119,5,225,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.pydocview.AboutService`, :class:`wx.lib.pydocview.DocOptionsService`, :class:`wx.lib.pydocview.FilePropertiesService`, :class:`wx.lib.pydocview.WindowMenuService`

|


|super_classes| Known Superclasses
==================================

:class:`wx.EvtHandler`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pydocview.DocService.__init__`                                    Initializes the DocService.
:meth:`~wx.lib.pydocview.DocService.GetDocumentManager`                          Returns the DocManager for the docview application.
:meth:`~wx.lib.pydocview.DocService.GetMenuItemPos`                              Utility method used to find the position of a menu item so that services can
:meth:`~wx.lib.pydocview.DocService.GetView`                                     Called by WindowMenuService to get views for services that don't
:meth:`~wx.lib.pydocview.DocService.InstallControls`                             Called to install controls into the menubar and toolbar of a SDI or MDI window.  Override this method for a particular service.
:meth:`~wx.lib.pydocview.DocService.OnCloseFrame`                                Called when the a docview frame is being closed.  Override this method
:meth:`~wx.lib.pydocview.DocService.OnExit`                                      Called when the the docview application is being closed.  Override this method
:meth:`~wx.lib.pydocview.DocService.ProcessEvent`                                Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocService.ProcessEventBeforeWindows`                   Processes an event before the main window has a chance to process the window.
:meth:`~wx.lib.pydocview.DocService.ProcessUpdateUIEvent`                        Processes a UI event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocService.ProcessUpdateUIEventBeforeWindows`           Processes a UI event before the main window has a chance to process the window.
:meth:`~wx.lib.pydocview.DocService.SetDocumentManager`                          Sets the DocManager for the docview application.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocService(wx.EvtHandler)

   An abstract class used to add reusable services to a docview application.

   .. method:: __init__(self)

      Initializes the DocService.


   .. method:: GetDocumentManager(self)

      Returns the DocManager for the docview application.


   .. method:: GetMenuItemPos(self, menu, id)

      Utility method used to find the position of a menu item so that services can
      easily find where to insert a menu item in InstallControls.


   .. method:: GetView(self)

      Called by WindowMenuService to get views for services that don't
      have dedicated documents such as the Outline Service.


   .. method:: InstallControls(self, frame, menuBar=None, toolBar=None, statusBar=None, document=None)

      Called to install controls into the menubar and toolbar of a SDI or MDI window.  Override this method for a particular service.


   .. method:: OnCloseFrame(self, event)

      Called when the a docview frame is being closed.  Override this method
      so a service can either do cleanup or veto the frame being closed by
      returning false.


   .. method:: OnExit(self)

      Called when the the docview application is being closed.  Override this method
      so a service can either do cleanup or veto the frame being closed by
      returning false.


   .. method:: ProcessEvent(self, event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: ProcessEventBeforeWindows(self, event)

      Processes an event before the main window has a chance to process the window.
      Override this method for a particular service.


   .. method:: ProcessUpdateUIEvent(self, event)

      Processes a UI event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: ProcessUpdateUIEventBeforeWindows(self, event)

      Processes a UI event before the main window has a chance to process the window.
      Override this method for a particular service.


   .. method:: SetDocumentManager(self, docManager)

      Sets the DocManager for the docview application.


