.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.foldpanelbar

.. highlight:: python



.. _wx.lib.agw.foldpanelbar.FoldPanelItem:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.foldpanelbar.FoldPanelItem**
==========================================================================================================================================

This class is a child sibling of the :class:`FoldPanelBar` class. It will
contain a :class:`CaptionBar` class for receiving of events, and a the
rest of the area can be populated by a :class:`Panel` derived class.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FoldPanelItem</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.foldpanelbar.FoldPanelItem_inheritance.png" alt="Inheritance diagram of FoldPanelItem" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.foldpanelbar.FoldPanelItem.html" title="wx.lib.agw.foldpanelbar.FoldPanelItem" alt="" coords="5,392,277,421"/> <area shape="rect" id="node2" href="wx.Panel.html" title="wx.Panel" alt="" coords="101,315,181,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="93,237,190,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="77,160,206,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="83,83,200,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="38,5,125,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="149,5,256,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.__init__`                          Default class constructor.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.AddSeparator`                      Adds a separator item to the list of items on this panel.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.AddWindow`                         Adds a window item to the list of items on this panel.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.ApplyCaptionStyle`                 Applies the style defined in `cbstyle` to the :class:`CaptionBar`.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.Collapse`                          Internal method.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.Expand`                            Internal method.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.GetCaptionLength`                  Returns height of caption only. This is for folding calculation purposes.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.GetCaptionStyle`                   Returns the current style of the captionbar in a :class:`CaptionBarStyle` class.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.GetItemPos`                        Returns item's position.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.GetPanelLength`                    Returns size of panel.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.IsExpanded`                        Returns expanded or collapsed status.  If the panel is
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.IsVertical`                        Returns whether the :class:`CaptionBar` has default orientation or not.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.OnPaint`                           Handles the ``wx.EVT_PAINT`` event for :class:`FoldPanelItem`.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.OnPressCaption`                    Handles the ``wx.EVT_CAPTIONBAR`` event for :class:`FoldPanelItem`.
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.Reposition`                        Repositions this :class:`FoldPanelItem` and reports the length occupied
:meth:`~wx.lib.agw.foldpanelbar.FoldPanelItem.ResizePanel`                       Resizes the panel.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: FoldPanelItem(wx.Panel)

   This class is a child sibling of the :class:`FoldPanelBar` class. It will
   contain a :class:`CaptionBar` class for receiving of events, and a the
   rest of the area can be populated by a :class:`Panel` derived class.

   .. method:: __init__(self, parent, id=wx.ID_ANY, caption="", foldIcons=None, collapsed=False, cbstyle=None)

      Default class constructor.
      
      :param `parent`: the :class:`FoldPanelItem` parent window;
      :param `id`: an identifier for the control: a value of -1 is taken to mean a default;
      :param `caption`: the string to be displayed in :class:`CaptionBar`;
      :param `foldIcons`: an instance of :class:`wx.ImageList` containing the icons to display
       next to the caption text;
      :param `collapsed`: ``True`` if the :class:`CaptionBar` should start in the collapsed state,
       ``False`` otherwise;
      :param `cbstyle`: the :class:`CaptionBar` window style. Must be an instance of
       :class:`CaptionBarStyle`.


   .. method:: AddSeparator(self, colour=wx.BLACK, spacing=FPB_DEFAULT_SPACING, leftSpacing=FPB_DEFAULT_LEFTSPACING, rightSpacing=FPB_DEFAULT_RIGHTSPACING)

      Adds a separator item to the list of items on this panel.
      
      :param `colour`: the separator colour, an instance of :class:`wx.Colour`;
      :param `spacing`: the separator to be added can be slightly indented from
       left and right so it is more visibly placed in the fold panel. Use `spacing` > 0
       to give the control an y offset from the previous :class:`wx.Window` added;
      :param `leftSpacing`: give the added separator a slight indent from the left;
      :param `rightSpacing`: give the added separator a slight indent from the right.


   .. method:: AddWindow(self, window, flags=FPB_ALIGN_WIDTH, spacing=FPB_DEFAULT_SPACING, leftSpacing=FPB_DEFAULT_LEFTLINESPACING, rightSpacing=FPB_DEFAULT_RIGHTLINESPACING)

      Adds a window item to the list of items on this panel.
      
      :param `window`: an instance of :class:`wx.Window`;
      :param `flags`: can be one of the following bits:
      
       ====================== ======= ====================================
       Align Flag              Value  Description
       ====================== ======= ====================================
       ``FPB_ALIGN_WIDTH``          1 The :class:`wx.Window` to be added will be aligned to fit the width of the FoldPanel when it is resized. Very handy for sizer items, buttons and text boxes.
       ``FPB_ALIGN_LEFT``           0 Aligns left instead of fitting the width of the child window to be added. Use either this one or ``FPB_ALIGN_WIDTH``.
       ====================== ======= ====================================
      
      :param `spacing`: reserves a number of pixels before the window element;
      :param `leftSpacing`: an indent, in pixels;
      :param `rightSpacing`: a right spacing, only relevant when the style
       ``FPB_ALIGN_WIDTH`` is chosen.


   .. method:: ApplyCaptionStyle(self, cbstyle)

      Applies the style defined in `cbstyle` to the :class:`CaptionBar`.


   .. method:: Collapse(self)

      Internal method.
      
      This should not be called by the user, because it doesn't trigger the
      parent  to tell it that we are collapsed or expanded, it only changes
      visual state.


   .. method:: Expand(self)

      Internal method.
      
      This should not be called by the user, because it doesn't trigger the
      parent to tell it that we are collapsed or expanded, it only changes
      visual state.


   .. method:: GetCaptionLength(self)

      Returns height of caption only. This is for folding calculation purposes. 


   .. method:: GetCaptionStyle(self)

      Returns the current style of the captionbar in a :class:`CaptionBarStyle` class.
      
      This can be used to change and set back the changes.


   .. method:: GetItemPos(self)

      Returns item's position. 


   .. method:: GetPanelLength(self)

      Returns size of panel. 


   .. method:: IsExpanded(self)

      Returns expanded or collapsed status.  If the panel is
      expanded, ``True`` is returned.


   .. method:: IsVertical(self)

      Returns whether the :class:`CaptionBar` has default orientation or not.
      Default is vertical.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` event for :class:`FoldPanelItem`.
      
      :param `event`: a :class:`PaintEvent` event to be processed.


   .. method:: OnPressCaption(self, event)

      Handles the ``wx.EVT_CAPTIONBAR`` event for :class:`FoldPanelItem`.
      
      :param `event`: a :class:`CaptionBarEvent` event to be processed.


   .. method:: Reposition(self, pos)

      Repositions this :class:`FoldPanelItem` and reports the length occupied
      for the next :class:`FoldPanelItem` in the list.
      
      :param `pos`: the new item position.


   .. method:: ResizePanel(self)

      Resizes the panel. 


