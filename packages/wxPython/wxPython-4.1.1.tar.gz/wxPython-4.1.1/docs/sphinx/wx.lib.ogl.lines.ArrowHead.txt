.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.ogl.lines

.. highlight:: python



.. _wx.lib.ogl.lines.ArrowHead:

==========================================================================================================================================
|phoenix_title|  **wx.lib.ogl.lines.ArrowHead**
==========================================================================================================================================

The arrow head class.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ArrowHead</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.ogl.lines.ArrowHead_inheritance.png" alt="Inheritance diagram of ArrowHead" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.ogl.lines.ArrowHead.html" title="wx.lib.ogl.lines.ArrowHead" alt="" coords="5,5,201,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.ogl.lines.ArrowHead.__init__`                                     Default class constructor.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetArrowEnd`                                  Get the arrow end position.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetArrowSize`                                 Get the arrow size.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetId`                                        Get the id.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetMetaFile`                                  Get the metafile.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetName`                                      Get the arrow name.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetPosition`                                  Get end position.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetSize`                                      Get the arrow size.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetSpacing`                                   Get the spacing.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetXOffset`                                   Get the X offset.
:meth:`~wx.lib.ogl.lines.ArrowHead.GetYOffset`                                   Get the Y offset.
:meth:`~wx.lib.ogl.lines.ArrowHead.SetPosition`                                  Set end position.
:meth:`~wx.lib.ogl.lines.ArrowHead.SetSize`                                      Set the arrow size.
:meth:`~wx.lib.ogl.lines.ArrowHead.SetSpacing`                                   Set the spacing.
:meth:`~wx.lib.ogl.lines.ArrowHead.SetXOffset`                                   Set the X offset.
:meth:`~wx.lib.ogl.lines.ArrowHead.SetYOffset`                                   Set the Y offset.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ArrowHead(object)

   The arrow head class.

   .. method:: __init__(self, type = 0, end = 0, size = 0.0, dist = 0.0, name = "", mf = None, arrowId = -1)

      Default class constructor.
      
      :param int `type`: the type
      
       ======================================== ==================================
       Arrow head type                          Description
       ======================================== ==================================
       `ARROW_HOLLOW_CIRCLE`                    a hollow circle
       `ARROW_FILLED_CIRCLE`                    a filled circle
       `ARROW_ARROW`                            an arrow
       `ARROW_SINGLE_OBLIQUE`                   a single oblique
       `ARROW_DOUBLE_OBLIQUE`                   a double oblique
       `ARROW_METAFILE`                         custom, define in metafile
       ======================================== ==================================
      
      :param int `end`: end of arrow head ???
      :param float `size`: size of arrow head
      :param float `dist`: dist ???
      :param string `name`: name of arrow head
      :param `mf`: mf ???
      :param `arrowId`: id of arrow head


   .. method:: GetArrowEnd(self)

      Get the arrow end position.


   .. method:: GetArrowSize(self)

      Get the arrow size.


   .. method:: GetId(self)

      Get the id.


   .. method:: GetMetaFile(self)

      Get the metafile.


   .. method:: GetName(self)

      Get the arrow name.


   .. method:: GetPosition(self)

      Get end position.


   .. method:: GetSize(self)

      Get the arrow size.


   .. method:: GetSpacing(self)

      Get the spacing.


   .. method:: GetXOffset(self)

      Get the X offset.


   .. method:: GetYOffset(self)

      Get the Y offset.


   .. method:: SetPosition(self, pos)

      Set end position.
      
      :param `pos`: position to set it to


   .. method:: SetSize(self, size)

      Set the arrow size.
      
      :param `size`: size in points???
      
      :note: if a custom arrow is used size is used to scale the arrow???


   .. method:: SetSpacing(self, sp)

      Set the spacing.
      
      :param `sp`: the new spacing value


   .. method:: SetXOffset(self, x)

      Set the X offset.
      
      :param `x`: value to set the offset to???


   .. method:: SetYOffset(self, y)

      Set the Y offset.
      
      :param `y`: value to set the offset to???


