.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.SplitterEvent:

==========================================================================================================================================
|phoenix_title|  **wx.SplitterEvent**
==========================================================================================================================================

This class represents the events generated by a splitter control.          

Also there is only one event class, the data associated to the different events is not the same and so not all accessor functions may be called for each event. The documentation mentions the kind of event(s) for which the given accessor function makes sense: calling it for other types of events will result in assert failure (in debug mode) and will return meaningless results. 







.. _SplitterEvent-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.SplitterEvent` parameter.

Event macros: 

- EVT_SPLITTER_SASH_POS_CHANGING: The sash position is in the process of being changed. May be used to modify the position of the tracking bar to properly reflect the position that would be set if the drag were to be completed at this point. Processes a  ``wxEVT_SPLITTER_SASH_POS_CHANGING``   event.   
- EVT_SPLITTER_SASH_POS_CHANGED: The sash position was changed. May be used to modify the sash position before it is set, or to prevent the change from taking place. Processes a  ``wxEVT_SPLITTER_SASH_POS_CHANGED``   event.   
- EVT_SPLITTER_UNSPLIT: The splitter has been just unsplit. Processes a  ``wxEVT_SPLITTER_UNSPLIT``   event.   
- EVT_SPLITTER_DCLICK: The sash was double clicked. The default behaviour is to unsplit the window when this happens (unless the minimum pane size has been set to a value greater than zero). Processes a  ``wxEVT_SPLITTER_DOUBLECLICKED``   event.   








         



.. seealso:: :ref:`wx.SplitterWindow`, :ref:`Events and Event Handling <events and event handling>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SplitterEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.SplitterEvent_inheritance.png" alt="Inheritance diagram of SplitterEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.SplitterEvent.html" title="wx.SplitterEvent" alt="" coords="15,315,145,344"/> <area shape="rect" id="node2" href="wx.NotifyEvent.html" title="wx.NotifyEvent" alt="" coords="19,237,141,267"/> <area shape="rect" id="node3" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="5,160,155,189"/> <area shape="rect" id="node4" href="wx.Event.html" title="wx.Event" alt="" coords="39,83,121,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="37,5,123,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.SplitterEvent.__init__`                                               Constructor.
:meth:`~wx.SplitterEvent.GetSashPosition`                                        Returns the new sash position.
:meth:`~wx.SplitterEvent.GetWindowBeingRemoved`                                  Returns a pointer to the window being removed when a splitter window is unsplit.
:meth:`~wx.SplitterEvent.GetX`                                                   Returns the x coordinate of the double-click point.
:meth:`~wx.SplitterEvent.GetY`                                                   Returns the y coordinate of the double-click point.
:meth:`~wx.SplitterEvent.SetSashPosition`                                        In the case of  ``wxEVT_SPLITTER_SASH_POS_CHANGED``   events, sets the new sash position.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.SplitterEvent.SashPosition`                                           See :meth:`~wx.SplitterEvent.GetSashPosition` and :meth:`~wx.SplitterEvent.SetSashPosition`
:attr:`~wx.SplitterEvent.WindowBeingRemoved`                                     See :meth:`~wx.SplitterEvent.GetWindowBeingRemoved`
:attr:`~wx.SplitterEvent.X`                                                      See :meth:`~wx.SplitterEvent.GetX`
:attr:`~wx.SplitterEvent.Y`                                                      See :meth:`~wx.SplitterEvent.GetY`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.SplitterEvent(NotifyEvent)

   **Possible constructors**::

       SplitterEvent(eventType=wxEVT_NULL, splitter=None)
       
   
   This class represents the events generated by a splitter control.



   .. method:: __init__(self, eventType=wxEVT_NULL, splitter=None)

      Constructor.                  

      Used internally by wxWidgets only.                  


      :param `eventType`: 
      :type `eventType`: wx.EventType
      :param `splitter`: 
      :type `splitter`: wx.SplitterWindow







   .. method:: GetSashPosition(self)

      Returns the new sash position.                  

      May only be called while processing  ``wxEVT_SPLITTER_SASH_POS_CHANGING``   and   ``wxEVT_SPLITTER_SASH_POS_CHANGED``   events.                   

      :rtype: `int`








   .. method:: GetWindowBeingRemoved(self)

      Returns a pointer to the window being removed when a splitter window is unsplit.                  

      May only be called while processing  ``wxEVT_SPLITTER_UNSPLIT``   events.                   

      :rtype: :ref:`wx.Window`








   .. method:: GetX(self)

      Returns the x coordinate of the double-click point.                  

      May only be called while processing  ``wxEVT_SPLITTER_DOUBLECLICKED``   events.                   

      :rtype: `int`








   .. method:: GetY(self)

      Returns the y coordinate of the double-click point.                  

      May only be called while processing  ``wxEVT_SPLITTER_DOUBLECLICKED``   events.                   

      :rtype: `int`








   .. method:: SetSashPosition(self, pos)

      In the case of  ``wxEVT_SPLITTER_SASH_POS_CHANGED``   events, sets the new sash position.                   

      In the case of  ``wxEVT_SPLITTER_SASH_POS_CHANGING``   events, sets the new tracking bar position so visual feedback during dragging will represent that change that will actually take place. Set to -1 from the event handler code to prevent repositioning. 

      May only be called while processing  ``wxEVT_SPLITTER_SASH_POS_CHANGING``   and   ``wxEVT_SPLITTER_SASH_POS_CHANGED``   events. 




      :param `pos`: New sash position.   
      :type `pos`: int




                  





   .. attribute:: SashPosition

      See :meth:`~wx.SplitterEvent.GetSashPosition` and :meth:`~wx.SplitterEvent.SetSashPosition`


   .. attribute:: WindowBeingRemoved

      See :meth:`~wx.SplitterEvent.GetWindowBeingRemoved`


   .. attribute:: X

      See :meth:`~wx.SplitterEvent.GetX`


   .. attribute:: Y

      See :meth:`~wx.SplitterEvent.GetY`

