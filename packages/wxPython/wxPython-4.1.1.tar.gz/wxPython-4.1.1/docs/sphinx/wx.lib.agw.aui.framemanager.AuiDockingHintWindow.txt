.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.framemanager

.. highlight:: python



.. _wx.lib.agw.aui.framemanager.AuiDockingHintWindow:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.framemanager.AuiDockingHintWindow**
==========================================================================================================================================

The original wxAUI docking window hint. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiDockingHintWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.framemanager.AuiDockingHintWindow_inheritance.png" alt="Inheritance diagram of AuiDockingHintWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.framemanager.AuiDockingHintWindow.html" title="wx.lib.agw.aui.framemanager.AuiDockingHintWindow" alt="" coords="5,547,377,576"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="149,469,234,499"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="114,392,269,421"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="107,315,275,344"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="143,237,240,267"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="127,160,256,189"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="133,83,250,112"/> <area shape="rect" id="node8" href="wx.Object.html" title="wx.Object" alt="" coords="88,5,175,35"/> <area shape="rect" id="node9" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="199,5,306,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Frame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.__init__`               Default class constructor. Used internally, do not call it in your code!
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.MakeVenetianBlinds`     Creates the "venetian blind" effect if :class:`AuiManager` has the ``AUI_MGR_VENETIAN_BLINDS_HINT``
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.OnPaint`                Handles the ``wx.EVT_PAINT`` event for :class:`AuiDockingHintWindow`.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.OnSize`                 Handles the ``wx.EVT_SIZE`` event for :class:`AuiDockingHintWindow`.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.SetBlindMode`           Sets whether venetian blinds or transparent hints will be shown as docking hint.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.SetShape`               If the platform supports it, sets the shape of the window to that depicted by `region`.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingHintWindow.Show`                   Show the hint window.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiDockingHintWindow(wx.Frame)

   The original wxAUI docking window hint. 

   .. method:: __init__(self, parent, id=wx.ID_ANY, title="", pos=wx.DefaultPosition, size=wx.Size(1, 1), style=wx.FRAME_TOOL_WINDOW | wx.FRAME_FLOAT_ON_PARENT | wx.FRAME_NO_TASKBAR | wx.NO_BORDER | wx.FRAME_SHAPED, name="auiHintWindow")

      Default class constructor. Used internally, do not call it in your code!
      
      :param `parent`: the :class:`AuiManager` parent;
      :param integer `id`: the window identifier. It may take a value of -1 to indicate a default value.
      :param string `title`: the caption to be displayed on the frame's title bar;
      :param wx.Point `pos`: the window position. A value of (-1, -1) indicates a default position,
       chosen by either the windowing system or wxPython, depending on platform;
      :param wx.Size `size`: the window size. A value of (-1, -1) indicates a default size, chosen by
       either the windowing system or wxPython, depending on platform;
      :param integer `style`: the window style;
      :param string `name`: the name of the window. This parameter is used to associate a name with the
       item, allowing the application user to set Motif resource values for individual windows.


   .. method:: MakeVenetianBlinds(self)

      Creates the "venetian blind" effect if :class:`AuiManager` has the ``AUI_MGR_VENETIAN_BLINDS_HINT``
      flag set.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` event for :class:`AuiDockingHintWindow`.
      
      :param `event`: an instance of :class:`PaintEvent` to be processed.


   .. method:: OnSize(self, event)

      Handles the ``wx.EVT_SIZE`` event for :class:`AuiDockingHintWindow`.
      
      :param `event`: a :class:`wx.SizeEvent` to be processed.


   .. method:: SetBlindMode(self, agwFlags)

      Sets whether venetian blinds or transparent hints will be shown as docking hint.
      This depends on the :class:`AuiManager` flags.
      
      :param integer `agwFlags`: the :class:`AuiManager` flags.


   .. method:: SetShape(self, region)

      If the platform supports it, sets the shape of the window to that depicted by `region`.
      The system will not display or respond to any mouse event for the pixels that lie
      outside of the region. To reset the window to the normal rectangular shape simply call
      :meth:`SetShape` again with an empty region.
      
      :param Region `region`: the shape of the frame.
      
      :note: Overridden for wxMAC.


   .. method:: Show(self, show=True)

      Show the hint window.
      
      :param bool `show`: whether to show or hide the hint docking window.


