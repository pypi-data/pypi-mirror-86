.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.aui_switcherdialog

.. highlight:: python



.. _wx.lib.agw.aui.aui_switcherdialog.SwitcherItems:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.aui_switcherdialog.SwitcherItems**
==========================================================================================================================================

An object containing switcher items. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SwitcherItems</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.aui_switcherdialog.SwitcherItems_inheritance.png" alt="Inheritance diagram of SwitcherItems" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.html" title="wx.lib.agw.aui.aui_switcherdialog.SwitcherItems" alt="" coords="5,5,344,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================== ================================================================================
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.__init__`                  Default class constructor.
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.AddGroup`                  
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.AddItem`                   
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.CalculateItemSize`         
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.Clear`                     
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.Copy`                      Copy operator between 2 :class:`SwitcherItems`.
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.FindItemById`              
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.FindItemByName`            
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetBackgroundColour`       
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetColumnCount`            
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetIndexForFocus`          
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetItem`                   
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetItemCount`              
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetItemFont`               
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetRowCount`               
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetSelection`              
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetSelectionColour`        
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetSelectionOutlineColour` 
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.GetTextColour`             
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.PaintItems`                
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetBackgroundColour`       
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetColumnCount`            
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetItemFont`               
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetRowCount`               
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetSelection`              
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetSelectionByName`        
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetSelectionColour`        
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetSelectionOutlineColour` 
:meth:`~wx.lib.agw.aui.aui_switcherdialog.SwitcherItems.SetTextColour`             
================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: SwitcherItems(object)

   An object containing switcher items. 

   .. method:: __init__(self, items=None)

      Default class constructor. 


   .. method:: AddGroup(self, title, name, id=0, bitmap=wx.NullBitmap)


   .. method:: AddItem(self, titleOrItem, name=None, id=0, bitmap=wx.NullBitmap)


   .. method:: CalculateItemSize(self, dc)


   .. method:: Clear(self)


   .. method:: Copy(self, items)

      Copy operator between 2 :class:`SwitcherItems`.
      
      :param `items`: another instance of :class:`SwitcherItems`.


   .. method:: FindItemById(self, id)


   .. method:: FindItemByName(self, name)


   .. method:: GetBackgroundColour(self)


   .. method:: GetColumnCount(self)


   .. method:: GetIndexForFocus(self)


   .. method:: GetItem(self, i)


   .. method:: GetItemCount(self)


   .. method:: GetItemFont(self)


   .. method:: GetRowCount(self)


   .. method:: GetSelection(self)


   .. method:: GetSelectionColour(self)


   .. method:: GetSelectionOutlineColour(self)


   .. method:: GetTextColour(self)


   .. method:: PaintItems(self, dc, win)


   .. method:: SetBackgroundColour(self, colour)


   .. method:: SetColumnCount(self, cols)


   .. method:: SetItemFont(self, font)


   .. method:: SetRowCount(self, rows)


   .. method:: SetSelection(self, sel)


   .. method:: SetSelectionByName(self, name)


   .. method:: SetSelectionColour(self, colour)


   .. method:: SetSelectionOutlineColour(self, colour)


   .. method:: SetTextColour(self, colour)


