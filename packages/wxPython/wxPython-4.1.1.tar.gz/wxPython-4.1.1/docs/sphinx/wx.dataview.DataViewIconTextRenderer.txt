.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.dataview.DataViewIconTextRenderer:

==========================================================================================================================================
|phoenix_title|  **wx.dataview.DataViewIconTextRenderer**
==========================================================================================================================================

The :ref:`wx.dataview.DataViewIconTextRenderer`  class is used to display text with a small icon next to it as it is typically done in a file manager.          

This classes uses the :ref:`wx.dataview.DataViewIconText`  helper class to store its data. :ref:`wx.dataview.DataViewIconText`  can be converted to and from a :ref:`Variant`  using the left shift operator. 

:ref:`Core` 





.. seealso:: :ref:`wx.dataview.DataViewCheckIconTextRenderer`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DataViewIconTextRenderer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.dataview.DataViewIconTextRenderer_inheritance.png" alt="Inheritance diagram of DataViewIconTextRenderer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.dataview.DataViewIconTextRenderer.html" title="wx.dataview.DataViewIconTextRenderer" alt="" coords="5,160,288,189"/> <area shape="rect" id="node2" href="wx.dataview.DataViewRenderer.html" title="wx.dataview.DataViewRenderer" alt="" coords="32,83,261,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="103,5,190,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.dataview.DataViewIconTextRenderer.__init__`                           The constructor.
:meth:`~wx.dataview.DataViewIconTextRenderer.GetDefaultType`                     Returns the :ref:`Variant`  type used with this renderer.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.dataview.DataViewIconTextRenderer(DataViewRenderer)

   **Possible constructors**::

       DataViewIconTextRenderer(varianttype=DataViewIconTextRenderer.GetDefault
                                Type(), mode=DATAVIEW_CELL_INERT, align=DVR_DEFAULT_ALIGNMENT)
       
   
   The DataViewIconTextRenderer class is used to display text with a
   small icon next to it as it is typically done in a file manager.



   .. method:: __init__(self, varianttype=DataViewIconTextRenderer.GetDefaultType(), mode=DATAVIEW_CELL_INERT, align=DVR_DEFAULT_ALIGNMENT)

      The constructor.                  


      :param `varianttype`: 
      :type `varianttype`: string
      :param `mode`: 
      :type `mode`: wx.dataview.DataViewCellMode
      :param `align`: 
      :type `align`: int







   .. staticmethod:: GetDefaultType()

      Returns the :ref:`Variant`  type used with this renderer.                  

                

      :rtype: `string`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     







