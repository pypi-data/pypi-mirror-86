.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.stattext

.. highlight:: python



.. _wx.lib.stattext.GenStaticText:

==========================================================================================================================================
|phoenix_title|  **wx.lib.stattext.GenStaticText**
==========================================================================================================================================

:class:`GenStaticText` is a generic implementation of :class:`wx.StaticText`.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GenStaticText</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.stattext.GenStaticText_inheritance.png" alt="Inheritance diagram of GenStaticText" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.stattext.GenStaticText.html" title="wx.lib.stattext.GenStaticText" alt="" coords="5,392,216,421"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="65,315,157,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="62,237,159,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="46,160,175,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="52,83,169,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="7,5,94,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="119,5,225,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.agw.hyperlink.HyperLinkCtrl`, :class:`wx.lib.agw.infobar.AutoWrapStaticText`

|


|super_classes| Known Superclasses
==================================

:class:`wx.Control`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.stattext.GenStaticText.__init__`                                  Default class constructor.
:meth:`~wx.lib.stattext.GenStaticText.AcceptsFocus`                              Can this window be given focus by mouse click?
:meth:`~wx.lib.stattext.GenStaticText.Disable`                                   Disables the control.
:meth:`~wx.lib.stattext.GenStaticText.DoGetBestSize`                             Overridden base class virtual.  Determines the best size of
:meth:`~wx.lib.stattext.GenStaticText.Enable`                                    Enable or disable the widget for user input.
:meth:`~wx.lib.stattext.GenStaticText.GetDefaultAttributes`                      Overridden base class virtual.  By default we should use
:meth:`~wx.lib.stattext.GenStaticText.OnEraseBackground`                         Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`GenStaticText`.
:meth:`~wx.lib.stattext.GenStaticText.OnPaint`                                   Handles the ``wx.EVT_PAINT`` for :class:`GenStaticText`.
:meth:`~wx.lib.stattext.GenStaticText.SetFont`                                   Sets the static text font and updates the control's size to exactly
:meth:`~wx.lib.stattext.GenStaticText.SetLabel`                                  Sets the static text label and updates the control's size to exactly
:meth:`~wx.lib.stattext.GenStaticText.ShouldInheritColours`                      Overridden base class virtual.  If the parent has non-default
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: GenStaticText(wx.Control)

   :class:`GenStaticText` is a generic implementation of :class:`wx.StaticText`.

   .. method:: __init__(self, parent, ID=-1, label="", pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name="genstattext")

      Default class constructor.
      
      :param `parent`: parent window, must not be ``None``;
      :param integer `ID`: window identifier. A value of -1 indicates a default value;
      :param string `label`: the static text label (i.e., its text label);
      :param `pos`: the control position. A value of (-1, -1) indicates a default position,
       chosen by either the windowing system or wxPython, depending on platform;
      :param `size`: the control size. A value of (-1, -1) indicates a default size,
       chosen by either the windowing system or wxPython, depending on platform;
      :param integer `style`: the underlying :class:`wx.Control` style;
      :param string `name`: the widget name.
      
      :type parent: :class:`wx.Window`
      :type pos: tuple or :class:`wx.Point`
      :type size: tuple or :class:`wx.Size`


   .. method:: AcceptsFocus(self)

      Can this window be given focus by mouse click?
      
      .. note:: Overridden from :class:`wx.Control`.


   .. method:: Disable(self)

      Disables the control.
      
      :returns: ``True`` if the window has been disabled, ``False`` if it had been
       already disabled before the call to this function.
      
      .. note:: This is functionally equivalent of calling :meth:`~wx.Control.Enable`
         with a ``False`` flag.
      
      .. note:: Overridden from :class:`wx.Control`.


   .. method:: DoGetBestSize(self)

      Overridden base class virtual.  Determines the best size of
      the control based on the label size and the current font.
      
      .. note:: Overridden from :class:`wx.Control`.


   .. method:: Enable(self, enable=True)

      Enable or disable the widget for user input.
      
      :param bool `enable`: If ``True``, enables the window for input. If
        ``False``, disables the window.
      
      :returns: ``True`` if the window has been enabled or disabled,
        ``False`` if nothing was done, i.e. if the window had already been
        in the specified state.
      
      .. note:: Note that when a parent window is disabled, all of its
         children are disabled as well and they are reenabled again when
         the parent is.
      
      .. note:: Overridden from :class:`wx.Control`.


   .. method:: GetDefaultAttributes(self)

      Overridden base class virtual.  By default we should use
      the same font/colour attributes as the native :class:`wx.StaticText`.
      
      .. note:: Overridden from :class:`wx.Control`.


   .. method:: OnEraseBackground(self, event)

      Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`GenStaticText`.
      
      :param `event`: a :class:`wx.EraseEvent` event to be processed.
      
      .. note:: This is intentionally empty to reduce flicker.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` for :class:`GenStaticText`.
      
      :param `event`: a :class:`wx.PaintEvent` event to be processed.


   .. method:: SetFont(self, font)

      Sets the static text font and updates the control's size to exactly
      fit the label unless the control has ``wx.ST_NO_AUTORESIZE`` flag.
      
      :param wx.Font `font`: a valid font instance, which will be the new font used
       to display the text.


   .. method:: SetLabel(self, label)

      Sets the static text label and updates the control's size to exactly
      fit the label unless the control has ``wx.ST_NO_AUTORESIZE`` flag.
      
      :param string `label`: the static text label (i.e., its text label).


   .. method:: ShouldInheritColours(self)

      Overridden base class virtual.  If the parent has non-default
      colours then we want this control to inherit them.
      
      .. note:: Overridden from :class:`wx.Control`.


