.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.aui.AuiManagerEvent:

==========================================================================================================================================
|phoenix_title|  **wx.aui.AuiManagerEvent**
==========================================================================================================================================

Event used to indicate various actions taken with :ref:`wx.aui.AuiManager`.          

See :ref:`wx.aui.AuiManager`  for available event types. 







.. _AuiManagerEvent-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.aui.AuiManagerEvent` parameter.

Event macros: 

- EVT_AUI_PANE_BUTTON: Triggered when any button is pressed for any docked panes.  
- EVT_AUI_PANE_CLOSE: Triggered when a docked or floating pane is closed.  
- EVT_AUI_PANE_MAXIMIZE: Triggered when a pane is maximized.  
- EVT_AUI_PANE_RESTORE: Triggered when a pane is restored.  
- EVT_AUI_PANE_ACTIVATED: Triggered when a pane is made 'active'. This event is new since wxWidgets 2.9.4.  
- EVT_AUI_RENDER: This event can be caught to override the default renderer in order to custom draw your :ref:`wx.aui.AuiManager`  window (not recommended).  








         



.. seealso:: :ref:`wx.aui.AuiManager`, :ref:`wx.aui.AuiPaneInfo`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiManagerEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.aui.AuiManagerEvent_inheritance.png" alt="Inheritance diagram of AuiManagerEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.aui.AuiManagerEvent.html" title="wx.aui.AuiManagerEvent" alt="" coords="5,160,188,189"/> <area shape="rect" id="node2" href="wx.Event.html" title="wx.Event" alt="" coords="55,83,138,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="53,5,140,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.aui.AuiManagerEvent.__init__`                                         Constructor.
:meth:`~wx.aui.AuiManagerEvent.CanVeto`                                          
:meth:`~wx.aui.AuiManagerEvent.GetButton`                                        
:meth:`~wx.aui.AuiManagerEvent.GetDC`                                            
:meth:`~wx.aui.AuiManagerEvent.GetManager`                                       
:meth:`~wx.aui.AuiManagerEvent.GetPane`                                          
:meth:`~wx.aui.AuiManagerEvent.GetVeto`                                          
:meth:`~wx.aui.AuiManagerEvent.SetButton`                                        Sets the ``ID`` of the button clicked that triggered this event.
:meth:`~wx.aui.AuiManagerEvent.SetCanVeto`                                       Sets whether or not this event can be vetoed.
:meth:`~wx.aui.AuiManagerEvent.SetDC`                                            
:meth:`~wx.aui.AuiManagerEvent.SetManager`                                       Sets the :ref:`wx.aui.AuiManager`  this event is associated with.
:meth:`~wx.aui.AuiManagerEvent.SetPane`                                          Sets the pane this event is associated with.
:meth:`~wx.aui.AuiManagerEvent.Veto`                                             Cancels the action indicated by this event if :meth:`~AuiManagerEvent.CanVeto`   is ``True``.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.aui.AuiManagerEvent.Button`                                           See :meth:`~wx.aui.AuiManagerEvent.GetButton` and :meth:`~wx.aui.AuiManagerEvent.SetButton`
:attr:`~wx.aui.AuiManagerEvent.DC`                                               See :meth:`~wx.aui.AuiManagerEvent.GetDC` and :meth:`~wx.aui.AuiManagerEvent.SetDC`
:attr:`~wx.aui.AuiManagerEvent.Manager`                                          See :meth:`~wx.aui.AuiManagerEvent.GetManager` and :meth:`~wx.aui.AuiManagerEvent.SetManager`
:attr:`~wx.aui.AuiManagerEvent.Pane`                                             See :meth:`~wx.aui.AuiManagerEvent.GetPane` and :meth:`~wx.aui.AuiManagerEvent.SetPane`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.aui.AuiManagerEvent(Event)

   **Possible constructors**::

       AuiManagerEvent(type=wxEVT_NULL)
       
   
   Event used to indicate various actions taken with AuiManager.



   .. method:: __init__(self, type=wxEVT_NULL)

      Constructor.                  


      :param `type`: 
      :type `type`: wx.EventType







   .. method:: CanVeto(self)



                

      :rtype: `bool`







      :returns: 

         ``True`` if this event can be vetoed.  







      .. seealso:: :meth:`Veto`     








   .. method:: GetButton(self)



                

      :rtype: `int`







      :returns: 

         The ``ID`` of the button that was clicked.   








   .. method:: GetDC(self)



                

      :rtype: :ref:`DC`







      .. todo:: What is this?    








   .. method:: GetManager(self)



                

      :rtype: :ref:`wx.aui.AuiManager`







      :returns: 

         The :ref:`wx.aui.AuiManager`  this event is associated with.   








   .. method:: GetPane(self)



                

      :rtype: :ref:`wx.aui.AuiPaneInfo`







      :returns: 

         The pane this event is associated with.   








   .. method:: GetVeto(self)



                

      :rtype: `bool`







      :returns: 

         ``True`` if this event was vetoed.  







      .. seealso:: :meth:`Veto`     








   .. method:: SetButton(self, button)

      Sets the ``ID`` of the button clicked that triggered this event.                  


      :param `button`: 
      :type `button`: int







   .. method:: SetCanVeto(self, can_veto)

      Sets whether or not this event can be vetoed.                  


      :param `can_veto`: 
      :type `can_veto`: bool







   .. method:: SetDC(self, pdc)



                


      :param `pdc`: 
      :type `pdc`: wx.DC






      .. todo:: What is this?    








   .. method:: SetManager(self, manager)

      Sets the :ref:`wx.aui.AuiManager`  this event is associated with.                  


      :param `manager`: 
      :type `manager`: wx.aui.AuiManager







   .. method:: SetPane(self, pane)

      Sets the pane this event is associated with.                  


      :param `pane`: 
      :type `pane`: wx.aui.AuiPaneInfo







   .. method:: Veto(self, veto=True)

      Cancels the action indicated by this event if :meth:`CanVeto`   is ``True``.                  


      :param `veto`: 
      :type `veto`: bool







   .. attribute:: Button

      See :meth:`~wx.aui.AuiManagerEvent.GetButton` and :meth:`~wx.aui.AuiManagerEvent.SetButton`


   .. attribute:: DC

      See :meth:`~wx.aui.AuiManagerEvent.GetDC` and :meth:`~wx.aui.AuiManagerEvent.SetDC`


   .. attribute:: Manager

      See :meth:`~wx.aui.AuiManagerEvent.GetManager` and :meth:`~wx.aui.AuiManagerEvent.SetManager`


   .. attribute:: Pane

      See :meth:`~wx.aui.AuiManagerEvent.GetPane` and :meth:`~wx.aui.AuiManagerEvent.SetPane`

