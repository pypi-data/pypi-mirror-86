.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pubsub.utils.misc

.. highlight:: python



.. _wx.lib.pubsub.utils.misc.StructMsg:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pubsub.utils.misc.StructMsg**
==========================================================================================================================================

This *can* be used to package message data. Each of the keyword
args given at construction will be stored as a member of the 'data'
member of instance. E.g. "m=Message2(a=1, b='b')" would succeed
"assert m.data.a==1" and "assert m.data.b=='b'". However, use of
Message2 makes your messaging code less documented and harder to
debug.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>StructMsg</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pubsub.utils.misc.StructMsg_inheritance.png" alt="Inheritance diagram of StructMsg" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pubsub.utils.misc.StructMsg.html" title="wx.lib.pubsub.utils.misc.StructMsg" alt="" coords="5,5,252,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pubsub.utils.misc.StructMsg.__init__`                             Initialize self.  See help(type(self)) for accurate signature.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: StructMsg

   This *can* be used to package message data. Each of the keyword
   args given at construction will be stored as a member of the 'data'
   member of instance. E.g. "m=Message2(a=1, b='b')" would succeed
   "assert m.data.a==1" and "assert m.data.b=='b'". However, use of
   Message2 makes your messaging code less documented and harder to
   debug.

   .. method:: __init__(self, \*\*kwargs)

      Initialize self.  See help(type(self)) for accurate signature.


