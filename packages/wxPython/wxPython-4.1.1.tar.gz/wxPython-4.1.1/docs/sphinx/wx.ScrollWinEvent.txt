.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ScrollWinEvent:

==========================================================================================================================================
|phoenix_title|  **wx.ScrollWinEvent**
==========================================================================================================================================

A scroll event holds information about events sent from scrolling windows.          

Note that you can use the ``EVT_SCROLLWIN`` macros for intercepting scroll window events from the receiving window. 







.. _ScrollWinEvent-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.ScrollWinEvent` parameter.

Event macros: 

- EVT_SCROLLWIN: Process all scroll events.  
- EVT_SCROLLWIN_TOP: Process  ``wxEVT_SCROLLWIN_TOP``   scroll-to-top events.   
- EVT_SCROLLWIN_BOTTOM: Process  ``wxEVT_SCROLLWIN_BOTTOM``   scroll-to-bottom events.   
- EVT_SCROLLWIN_LINEUP: Process  ``wxEVT_SCROLLWIN_LINEUP``   line up events.   
- EVT_SCROLLWIN_LINEDOWN: Process  ``wxEVT_SCROLLWIN_LINEDOWN``   line down events.   
- EVT_SCROLLWIN_PAGEUP: Process  ``wxEVT_SCROLLWIN_PAGEUP``   page up events.   
- EVT_SCROLLWIN_PAGEDOWN: Process  ``wxEVT_SCROLLWIN_PAGEDOWN``   page down events.   
- EVT_SCROLLWIN_THUMBTRACK: Process  ``wxEVT_SCROLLWIN_THUMBTRACK``   thumbtrack events (frequent events sent as the user drags the thumbtrack).   
- EVT_SCROLLWIN_THUMBRELEASE: Process  ``wxEVT_SCROLLWIN_THUMBRELEASE``   thumb release events.   








         



.. seealso:: :ref:`wx.ScrollEvent`, :ref:`Events and Event Handling <events and event handling>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ScrollWinEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ScrollWinEvent_inheritance.png" alt="Inheritance diagram of ScrollWinEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ScrollWinEvent.html" title="wx.ScrollWinEvent" alt="" coords="5,160,148,189"/> <area shape="rect" id="node2" href="wx.Event.html" title="wx.Event" alt="" coords="35,83,118,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="33,5,120,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ScrollWinEvent.__init__`                                              Constructor.
:meth:`~wx.ScrollWinEvent.GetOrientation`                                        Returns ``wx.HORIZONTAL`` or ``wx.VERTICAL``, depending on the orientation of the scrollbar.
:meth:`~wx.ScrollWinEvent.GetPosition`                                           Returns the position of the scrollbar for the thumb track and release events.
:meth:`~wx.ScrollWinEvent.SetOrientation`                                        
:meth:`~wx.ScrollWinEvent.SetPosition`                                           
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.ScrollWinEvent.Orientation`                                           See :meth:`~wx.ScrollWinEvent.GetOrientation` and :meth:`~wx.ScrollWinEvent.SetOrientation`
:attr:`~wx.ScrollWinEvent.Position`                                              See :meth:`~wx.ScrollWinEvent.GetPosition` and :meth:`~wx.ScrollWinEvent.SetPosition`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ScrollWinEvent(Event)

   **Possible constructors**::

       ScrollWinEvent(commandType=wxEVT_NULL, pos=0, orientation=0)
       
   
   A scroll event holds information about events sent from scrolling
   windows.



   .. method:: __init__(self, commandType=wxEVT_NULL, pos=0, orientation=0)

      Constructor.                  


      :param `commandType`: 
      :type `commandType`: wx.EventType
      :param `pos`: 
      :type `pos`: int
      :param `orientation`: 
      :type `orientation`: int







   .. method:: GetOrientation(self)

      Returns ``wx.HORIZONTAL`` or ``wx.VERTICAL``, depending on the orientation of the scrollbar.                  

                

      :rtype: `int`







      .. todo:: ``wx.HORIZONTAL`` and ``wx.VERTICAL`` should go in their own enum    








   .. method:: GetPosition(self)

      Returns the position of the scrollbar for the thumb track and release events.                  

      Note that this field can't be used for the other events, you need to query the window itself for the current position in that case.                  

      :rtype: `int`








   .. method:: SetOrientation(self, orient)




      :param `orient`: 
      :type `orient`: int







   .. method:: SetPosition(self, pos)




      :param `pos`: 
      :type `pos`: int







   .. attribute:: Orientation

      See :meth:`~wx.ScrollWinEvent.GetOrientation` and :meth:`~wx.ScrollWinEvent.SetOrientation`


   .. attribute:: Position

      See :meth:`~wx.ScrollWinEvent.GetPosition` and :meth:`~wx.ScrollWinEvent.SetPosition`

