.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.checkbox

.. highlight:: python



.. _wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin:

==========================================================================================================================================
|phoenix_title|  **wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin**
==========================================================================================================================================

Inherit this mixin in your :class:`wx.Window` based subclass to easily
define the native CheckBox Bitmaps as attributes which can then be used
to customize a widgets appearance/functionality with.

Sample example usage::

    class MyCheckListBoxSTC(wx.stc.StyledTextCtrl, DefineNativeCheckBoxBitmapsMixin):
        '''Customized StyledTextCtrl Setup like a CheckListBox.'''
        def __init__(self, parent, id=wx.ID_ANY,
                     pos=wx.DefaultPosition, size=wx.DefaultSize,
                     style=0, name='styledtextctrl'):
            wx.stc.StyledTextCtrl.__init__(self, parent, id, pos, size, style, name)

            # Define the checkbox bitmaps as attributes.
            self.DefineNativeCheckBoxBitmaps()
            # After the bitmaps have become attributes you can easily snag
            # them all later on from inside a method with this inherited method.
            ## self.checkbox_bitmaps = self.GetNativeCheckBoxBitmaps()

            # Setup a margin to hold bookmarks.
            self.SetMarginType(1, wx.stc.STC_MARGIN_SYMBOL)
            self.SetMarginSensitive(1, True)
            self.SetMarginWidth(1, 16)
            # Define the bookmark images.
            self.MarkerDefineBitmap(0, self.native_checkbox_unchecked_bmp)
            self.MarkerDefineBitmap(1, self.native_checkbox_checked_bmp)

            # ... do something with the bitmaps when you click the margin event.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DefineNativeCheckBoxBitmapsMixin</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin_inheritance.png" alt="Inheritance diagram of DefineNativeCheckBoxBitmapsMixin" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin.html" title="wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin" alt="" coords="5,5,376,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

===================================================================================== ================================================================================
:meth:`~wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin.DefineNativeCheckBoxBitmaps` Define native checkbox bitmaps as attributes. Returns ``True`` if all bitmaps was defined Ok.
:meth:`~wx.lib.checkbox.DefineNativeCheckBoxBitmapsMixin.GetNativeCheckBoxBitmaps`    Get a tuple of the defined checkbox bitmaps.
===================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: DefineNativeCheckBoxBitmapsMixin()

   Inherit this mixin in your :class:`wx.Window` based subclass to easily
   define the native CheckBox Bitmaps as attributes which can then be used
   to customize a widgets appearance/functionality with.
   
   Sample example usage::
   
       class MyCheckListBoxSTC(wx.stc.StyledTextCtrl, DefineNativeCheckBoxBitmapsMixin):
           '''Customized StyledTextCtrl Setup like a CheckListBox.'''
           def __init__(self, parent, id=wx.ID_ANY,
                        pos=wx.DefaultPosition, size=wx.DefaultSize,
                        style=0, name='styledtextctrl'):
               wx.stc.StyledTextCtrl.__init__(self, parent, id, pos, size, style, name)
   
               # Define the checkbox bitmaps as attributes.
               self.DefineNativeCheckBoxBitmaps()
               # After the bitmaps have become attributes you can easily snag
               # them all later on from inside a method with this inherited method.
               ## self.checkbox_bitmaps = self.GetNativeCheckBoxBitmaps()
   
               # Setup a margin to hold bookmarks.
               self.SetMarginType(1, wx.stc.STC_MARGIN_SYMBOL)
               self.SetMarginSensitive(1, True)
               self.SetMarginWidth(1, 16)
               # Define the bookmark images.
               self.MarkerDefineBitmap(0, self.native_checkbox_unchecked_bmp)
               self.MarkerDefineBitmap(1, self.native_checkbox_checked_bmp)
   
               # ... do something with the bitmaps when you click the margin event.

   .. method:: DefineNativeCheckBoxBitmaps(self)

      Define native checkbox bitmaps as attributes. Returns ``True`` if all bitmaps was defined Ok.
      
      bitmaps defined::
      
          self.native_checkbox_unchecked_bmp
          self.native_checkbox_unchecked_disabled_bmp
          self.native_checkbox_checked_bmp
          self.native_checkbox_checked_disabled_bmp
          self.native_checkbox_3state_bmp
          self.native_checkbox_3state_disabled_bmp
          self.native_checkbox_current_bmp
          self.native_checkbox_pressed_bmp
      
      :rtype: bool


   .. method:: GetNativeCheckBoxBitmaps(self)

      Get a tuple of the defined checkbox bitmaps.
      
      :rtype: tuple


