.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.grid.GridCellActivatableEditor:

==========================================================================================================================================
|phoenix_title|  **wx.grid.GridCellActivatableEditor**
==========================================================================================================================================

Base class for activatable editors.          

Inheriting from this class makes it simpler to implement editors that support only activation, but not in-place editing, as they only need to implement :meth:`~wx.grid.GridCellActivatableEditor.TryActivate`, :meth:`~wx.grid.GridCellActivatableEditor.DoActivate`  and :meth:`~wx.grid.GridCellActivatableEditor.Clone`  methods, but not all the other pure virtual methods of :ref:`wx.grid.GridCellEditor`. 

         



.. versionadded:: 4.1/wxWidgets-3.1.4  
     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridCellActivatableEditor</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.grid.GridCellActivatableEditor_inheritance.png" alt="Inheritance diagram of GridCellActivatableEditor" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.grid.GridCellActivatableEditor.html" title="wx.grid.GridCellActivatableEditor" alt="" coords="60,160,299,189"/> <area shape="rect" id="node2" href="wx.grid.GridCellEditor.html" title="wx.grid.GridCellEditor" alt="" coords="97,83,261,112"/> <area shape="rect" id="node3" href="wx.ClientDataContainer.html" title="wx.ClientDataContainer" alt="" coords="5,5,183,35"/> <area shape="rect" id="node4" href="wx.RefCounter.html" title="wx.RefCounter" alt="" coords="207,5,325,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.grid.GridCellActivatableEditor.DoActivate`                            Same method as in :ref:`wx.grid.GridCellEditor`, but pure virtual.
:meth:`~wx.grid.GridCellActivatableEditor.TryActivate`                           Same method as in :ref:`wx.grid.GridCellEditor`, but pure virtual.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.grid.GridCellActivatableEditor(GridCellEditor)

   Base class for activatable editors.



   .. method:: DoActivate(self, row, col, grid)

      Same method as in :ref:`wx.grid.GridCellEditor`, but pure virtual.                  


      :param `row`: 
      :type `row`: int
      :param `col`: 
      :type `col`: int
      :param `grid`: 
      :type `grid`: wx.grid.Grid







   .. method:: TryActivate(self, row, col, grid, actSource)

      Same method as in :ref:`wx.grid.GridCellEditor`, but pure virtual.                  

      Note that the implementation of this method must never return :meth:`wx.grid.GridActivationResult.DoEdit`   for the editors inheriting from this class, as it doesn't support normal editing.                  


      :param `row`: 
      :type `row`: int
      :param `col`: 
      :type `col`: int
      :param `grid`: 
      :type `grid`: wx.grid.Grid
      :param `actSource`: 
      :type `actSource`: wx.grid.GridActivationSource




      :rtype: :ref:`wx.grid.GridActivationResult`







