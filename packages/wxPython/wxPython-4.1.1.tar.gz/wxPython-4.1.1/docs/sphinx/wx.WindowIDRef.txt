.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.WindowIDRef:

==========================================================================================================================================
|phoenix_title|  **wx.WindowIDRef**
==========================================================================================================================================

                        A WindowIDRef object wraps an ``ID`` value and marks it as being in-use until all references to that ``ID`` are gone.
                          




|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>WindowIDRef</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.WindowIDRef_inheritance.png" alt="Inheritance diagram of WindowIDRef" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.WindowIDRef.html" title="wx.WindowIDRef" alt="" coords="5,5,137,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.WindowIDRef.__init__`                                                 Default constructor
:meth:`~wx.WindowIDRef.GetId`                                                    Alias for GetValue allowing the IDRef to be passed as the source parameter to :meth:`wx.EvtHandler.Bind`.
:meth:`~wx.WindowIDRef.GetValue`                                                 Get the ``ID`` value
:meth:`~wx.WindowIDRef.__eq__`                                                   
:meth:`~wx.WindowIDRef.__ge__`                                                   
:meth:`~wx.WindowIDRef.__gt__`                                                   
:meth:`~wx.WindowIDRef.__hash__`                                                 
:meth:`~wx.WindowIDRef.__index__`                                                See :meth:`~WindowIDRef.__int__`
:meth:`~wx.WindowIDRef.__int__`                                                  Alias for GetValue allowing the IDRef to be passed as the WindowID parameter when creating widgets or other places an integer type is needed.
:meth:`~wx.WindowIDRef.__le__`                                                   
:meth:`~wx.WindowIDRef.__lt__`                                                   
:meth:`~wx.WindowIDRef.__ne__`                                                   
:meth:`~wx.WindowIDRef.__repr__`                                                 
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.WindowIDRef.Id`                                                       See :meth:`~wx.WindowIDRef.GetId`
:attr:`~wx.WindowIDRef.Value`                                                    See :meth:`~wx.WindowIDRef.GetValue`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.WindowIDRef(object)

   **Possible constructors**::

       WindowIDRef()
       
       WindowIDRef(id)
       
       WindowIDRef(idref)
       
   
   A WindowIDRef object wraps an ``ID`` value and marks it as being in-use
   until all references to that ``ID`` are gone.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor  
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, id)`
      
      Create reference from an ``ID`` 
      
      
      :param `id`: 
      :type `id`: int
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, idref)`
      
      Copy an ``ID`` reference 
      
      
      :param `idref`: 
      :type `idref`: :class:`WindowIDRef`
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetId(self)

      Alias for GetValue allowing the IDRef to be passed as the source parameter to :meth:`wx.EvtHandler.Bind`. 

      :rtype: `int`








   .. method:: GetValue(self)

      Get the ``ID`` value 

      :rtype: `int`








   .. method:: __eq__(self, id)



      :rtype: `bool`








   .. method:: __ge__(self, id)



      :rtype: `bool`








   .. method:: __gt__(self, id)



      :rtype: `bool`








   .. method:: __hash__(self)




   .. method:: __index__(self)

      See :meth:`__int__` 

      :rtype: `int`








   .. method:: __int__(self)

      Alias for GetValue allowing the IDRef to be passed as the WindowID parameter when creating widgets or other places an integer type is needed. 

      :rtype: `int`








   .. method:: __le__(self, id)



      :rtype: `bool`








   .. method:: __lt__(self, id)



      :rtype: `bool`








   .. method:: __ne__(self, id)



      :rtype: `bool`








   .. method:: __repr__(self)




   .. attribute:: Id

      See :meth:`~wx.WindowIDRef.GetId`


   .. attribute:: Value

      See :meth:`~wx.WindowIDRef.GetValue`

