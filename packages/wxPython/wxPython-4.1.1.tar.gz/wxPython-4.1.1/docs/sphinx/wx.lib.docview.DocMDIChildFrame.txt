.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.docview

.. highlight:: python



.. _wx.lib.docview.DocMDIChildFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.docview.DocMDIChildFrame**
==========================================================================================================================================

The :class:`DocMDIChildFrame` class provides a default frame for displaying
documents on separate windows. This class can only be used for MDI child
frames.

The class is part of the document/view framework and cooperates with the
:class:`View`, :class:`Document`, :class:`DocManager` and :class:`DocTemplate`
classes.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocMDIChildFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.docview.DocMDIChildFrame_inheritance.png" alt="Inheritance diagram of DocMDIChildFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.docview.DocMDIChildFrame.html" title="wx.lib.docview.DocMDIChildFrame" alt="" coords="5,701,251,731"/> <area shape="rect" id="node2" href="wx.MDIChildFrame.html" title="wx.MDIChildFrame" alt="" coords="57,624,199,653"/> <area shape="rect" id="node4" href="wx.Frame.html" title="wx.Frame" alt="" coords="85,469,171,499"/> <area shape="rect" id="node5" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="51,392,205,421"/> <area shape="rect" id="node6" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="44,315,212,344"/> <area shape="rect" id="node7" href="wx.Window.html" title="wx.Window" alt="" coords="79,237,177,267"/> <area shape="rect" id="node8" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="63,160,193,189"/> <area shape="rect" id="node9" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="69,83,187,112"/> <area shape="rect" id="node10" href="wx.Object.html" title="wx.Object" alt="" coords="25,5,111,35"/> <area shape="rect" id="node11" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="136,5,243,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.MDIChildFrame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.docview.DocMDIChildFrame.__init__`                                Constructor.  Note that the event table must be rebuilt for the
:meth:`~wx.lib.docview.DocMDIChildFrame.Activate`                                Activates the current view.
:meth:`~wx.lib.docview.DocMDIChildFrame.GetDocument`                             Returns the document associated with this frame.
:meth:`~wx.lib.docview.DocMDIChildFrame.GetView`                                 Returns the view associated with this frame.
:meth:`~wx.lib.docview.DocMDIChildFrame.OnActivate`                              Sets the currently active view to be the frame's view. You may need to
:meth:`~wx.lib.docview.DocMDIChildFrame.OnCloseWindow`                           Closes and deletes the current view and document.
:meth:`~wx.lib.docview.DocMDIChildFrame.OnTitleIsModified`                       Add/remove to the frame's title an indication that the document is dirty.
:meth:`~wx.lib.docview.DocMDIChildFrame.ProcessEvent`                            Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.docview.DocMDIChildFrame.SetDocument`                             Sets the document for this frame.
:meth:`~wx.lib.docview.DocMDIChildFrame.SetView`                                 Sets the view for this frame.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocMDIChildFrame(wx.MDIChildFrame)

   The :class:`DocMDIChildFrame` class provides a default frame for displaying
   documents on separate windows. This class can only be used for MDI child
   frames.
   
   The class is part of the document/view framework and cooperates with the
   :class:`View`, :class:`Document`, :class:`DocManager` and :class:`DocTemplate`
   classes.

   .. method:: __init__(self, doc, view, frame, id, title, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_FRAME_STYLE, name="frame")

      Constructor.  Note that the event table must be rebuilt for the
      frame since the EvtHandler is not virtual.


   .. method:: Activate(self)

      Activates the current view.


   .. method:: GetDocument(self)

      Returns the document associated with this frame.


   .. method:: GetView(self)

      Returns the view associated with this frame.


   .. method:: OnActivate(self, event)

      Sets the currently active view to be the frame's view. You may need to
      override (but still call) this function in order to set the keyboard
      focus for your subwindow.


   .. method:: OnCloseWindow(self, event)

      Closes and deletes the current view and document.


   .. method:: OnTitleIsModified(self)

      Add/remove to the frame's title an indication that the document is dirty.
      If the document is dirty, an '*' is appended to the title


   .. method:: ProcessEvent(event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).


   .. method:: SetDocument(self, document)

      Sets the document for this frame.


   .. method:: SetView(self, view)

      Sets the view for this frame.


