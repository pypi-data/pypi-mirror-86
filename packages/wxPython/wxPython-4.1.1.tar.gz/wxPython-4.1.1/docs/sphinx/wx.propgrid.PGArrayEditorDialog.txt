.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.propgrid.PGArrayEditorDialog:

==========================================================================================================================================
|phoenix_title|  **wx.propgrid.PGArrayEditorDialog**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PGArrayEditorDialog</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.propgrid.PGArrayEditorDialog_inheritance.png" alt="Inheritance diagram of PGArrayEditorDialog" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.propgrid.PGArrayEditorDialog.html" title="wx.propgrid.PGArrayEditorDialog" alt="" coords="5,469,241,499"/> <area shape="rect" id="node2" href="wx.Dialog.html" title="wx.Dialog" alt="" coords="80,392,167,421"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="46,315,201,344"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="39,237,207,267"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="75,160,172,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="65,83,182,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="20,5,107,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="131,5,238,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.propgrid.PGArrayStringEditorDialog`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.propgrid.PGArrayEditorDialog.__init__`                                
:meth:`~wx.propgrid.PGArrayEditorDialog.ArrayGet`                                
:meth:`~wx.propgrid.PGArrayEditorDialog.ArrayGetCount`                           
:meth:`~wx.propgrid.PGArrayEditorDialog.ArrayInsert`                             
:meth:`~wx.propgrid.PGArrayEditorDialog.ArrayRemoveAt`                           
:meth:`~wx.propgrid.PGArrayEditorDialog.ArraySet`                                
:meth:`~wx.propgrid.PGArrayEditorDialog.ArraySwap`                               
:meth:`~wx.propgrid.PGArrayEditorDialog.Create`                                  
:meth:`~wx.propgrid.PGArrayEditorDialog.EnableCustomNewAction`                   
:meth:`~wx.propgrid.PGArrayEditorDialog.GetClassDefaultAttributes`               
:meth:`~wx.propgrid.PGArrayEditorDialog.GetDialogValue`                          Return value modified by dialog.
:meth:`~wx.propgrid.PGArrayEditorDialog.GetSelection`                            
:meth:`~wx.propgrid.PGArrayEditorDialog.GetTextCtrlValidator`                    Override to return :ref:`wx.Validator`  to be used with the :ref:`wx.TextCtrl`  in dialog.
:meth:`~wx.propgrid.PGArrayEditorDialog.Init`                                    
:meth:`~wx.propgrid.PGArrayEditorDialog.IsModified`                              Returns ``True`` if array was actually modified.
:meth:`~wx.propgrid.PGArrayEditorDialog.OnCustomNewAction`                       
:meth:`~wx.propgrid.PGArrayEditorDialog.SetDialogValue`                          Set value modified by dialog.
:meth:`~wx.propgrid.PGArrayEditorDialog.SetNewButtonText`                        Sets tooltip text for button allowing the user to enter new string.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.propgrid.PGArrayEditorDialog.DialogValue`                             See :meth:`~wx.propgrid.PGArrayEditorDialog.GetDialogValue` and :meth:`~wx.propgrid.PGArrayEditorDialog.SetDialogValue`
:attr:`~wx.propgrid.PGArrayEditorDialog.Selection`                               See :meth:`~wx.propgrid.PGArrayEditorDialog.GetSelection`
:attr:`~wx.propgrid.PGArrayEditorDialog.TextCtrlValidator`                       See :meth:`~wx.propgrid.PGArrayEditorDialog.GetTextCtrlValidator`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.propgrid.PGArrayEditorDialog(Dialog)

   **Possible constructors**::

       PGArrayEditorDialog()
       



   .. method:: __init__(self)






   .. method:: ArrayGet(self, index)




      :param `index`: 
      :type `index`: int




      :rtype: `string`








   .. method:: ArrayGetCount(self)



      :rtype: `int`








   .. method:: ArrayInsert(self, str, index)




      :param `str`: 
      :type `str`: string
      :param `index`: 
      :type `index`: int




      :rtype: `bool`








   .. method:: ArrayRemoveAt(self, index)




      :param `index`: 
      :type `index`: int







   .. method:: ArraySet(self, index, str)




      :param `index`: 
      :type `index`: int
      :param `str`: 
      :type `str`: string




      :rtype: `bool`








   .. method:: ArraySwap(self, first, second)




      :param `first`: 
      :type `first`: int
      :param `second`: 
      :type `second`: int







   .. method:: Create(self, parent, message, caption, style=AEDIALOG_STYLE, pos=DefaultPosition, sz=DefaultSize)




      :param `parent`: 
      :type `parent`: wx.Window
      :param `message`: 
      :type `message`: string
      :param `caption`: 
      :type `caption`: string
      :param `style`: 
      :type `style`: long
      :param `pos`: 
      :type `pos`: wx.Point
      :param `sz`: 
      :type `sz`: wx.Size




      :rtype: `bool`








   .. method:: EnableCustomNewAction(self)






   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`VisualAttributes`








   .. method:: GetDialogValue(self)

      Return value modified by dialog.                  

      :rtype: :ref:`PGVariant`








   .. method:: GetSelection(self)



      :rtype: `int`








   .. method:: GetTextCtrlValidator(self)

      Override to return :ref:`wx.Validator`  to be used with the :ref:`wx.TextCtrl`  in dialog.                  

      Note that the validator is used in the standard  way, ie. it immediately prevents user from entering invalid input. 

                

      :rtype: :ref:`Validator`







      .. note:: 

         Dialog frees the validator.   








   .. method:: Init(self)






   .. method:: IsModified(self)

      Returns ``True`` if array was actually modified.                  

      :rtype: `bool`








   .. method:: OnCustomNewAction(self, resString)




      :param `resString`: 
      :type `resString`: string




      :rtype: `bool`








   .. method:: SetDialogValue(self, value)

      Set value modified by dialog.                  


      :param `value`: 
      :type `value`: PGVariant







   .. method:: SetNewButtonText(self, text)

      Sets tooltip text for button allowing the user to enter new string.                  

                


      :param `text`: 
      :type `text`: string






      .. versionadded:: 4.1/wxWidgets-3.1.3  
     








   .. attribute:: DialogValue

      See :meth:`~wx.propgrid.PGArrayEditorDialog.GetDialogValue` and :meth:`~wx.propgrid.PGArrayEditorDialog.SetDialogValue`


   .. attribute:: Selection

      See :meth:`~wx.propgrid.PGArrayEditorDialog.GetSelection`


   .. attribute:: TextCtrlValidator

      See :meth:`~wx.propgrid.PGArrayEditorDialog.GetTextCtrlValidator`

