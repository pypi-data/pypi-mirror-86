.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.analogclock.lib_setup.buttontreectrlpanel

.. highlight:: python



.. _wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel:

==========================================================================================================================================
|phoenix_title|  **wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel**
==========================================================================================================================================

Panel()
Panel(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=TAB_TRAVERSAL, name=PanelNameStr)

A panel is a window on which controls are placed.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ButtonTreeCtrlPanel</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel_inheritance.png" alt="Inheritance diagram of ButtonTreeCtrlPanel" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.html" title="wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel" alt="" coords="5,392,472,421"/> <area shape="rect" id="node2" href="wx.Panel.html" title="wx.Panel" alt="" coords="199,315,279,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="190,237,287,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="174,160,303,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="180,83,297,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="135,5,222,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="247,5,353,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.analogclock.setup.StylesPanel`

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

===================================================================================================== ================================================================================
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.__init__`                Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.AddItem`                 
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.CollapseItem`            
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.EnsureFirstVisible`      
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.ExpandItem`              
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetAllItems`             
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetItemByLabel`          
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetItemsChecked`         
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetItemsTri`             
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetItemsUnchecked`       
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetItemValue`            
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetRootItems`            
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetStringItemsChecked`   
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetStringItemsTri`       
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetStringItemsUnchecked` 
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.GetStringRootItems`      
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.OnLeftClicks`            
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.OnRightClick`            
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.OnSize`                  
:meth:`~wx.lib.analogclock.lib_setup.buttontreectrlpanel.ButtonTreeCtrlPanel.SetItemValue`            
===================================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: ButtonTreeCtrlPanel(wx.Panel)

   Panel()
   Panel(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=TAB_TRAVERSAL, name=PanelNameStr)
   
   A panel is a window on which controls are placed.

   .. method:: __init__(self, parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.WANTS_CHARS)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: AddItem(self, label, bmp=None, parent=None, style=None, value=False)


   .. method:: CollapseItem(self, item)


   .. method:: EnsureFirstVisible(self)


   .. method:: ExpandItem(self, item)


   .. method:: GetAllItems(self)


   .. method:: GetItemByLabel(self, label, parent=None)


   .. method:: GetItemsChecked(self, parent=None)


   .. method:: GetItemsTri(self, parent=None)


   .. method:: GetItemsUnchecked(self, parent=None)


   .. method:: GetItemValue(self, item)


   .. method:: GetRootItems(self)


   .. method:: GetStringItemsChecked(self, parent=None)


   .. method:: GetStringItemsTri(self, parent=None)


   .. method:: GetStringItemsUnchecked(self, parent=None)


   .. method:: GetStringRootItems(self)


   .. method:: OnLeftClicks(self, evt)


   .. method:: OnRightClick(self, evt)


   .. method:: OnSize(self, evt=None)


   .. method:: SetItemValue(self, item, value)


