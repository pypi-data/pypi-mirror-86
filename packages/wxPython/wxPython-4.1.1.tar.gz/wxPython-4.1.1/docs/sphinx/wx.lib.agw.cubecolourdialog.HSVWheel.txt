.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.cubecolourdialog

.. highlight:: python



.. _wx.lib.agw.cubecolourdialog.HSVWheel:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.cubecolourdialog.HSVWheel**
==========================================================================================================================================

Implements the drawing, mouse handling and sizing routines for the HSV
colour wheel.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>HSVWheel</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.cubecolourdialog.HSVWheel_inheritance.png" alt="Inheritance diagram of HSVWheel" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.cubecolourdialog.HSVWheel.html" title="wx.lib.agw.cubecolourdialog.HSVWheel" alt="" coords="19,469,297,499"/> <area shape="rect" id="node2" href="wx.lib.agw.cubecolourdialog.BasePyControl.html" title="wx.lib.agw.cubecolourdialog.BasePyControl" alt="" coords="5,392,311,421"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="112,315,204,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="109,237,207,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="93,160,223,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="99,83,217,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="55,5,141,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="166,5,273,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.cubecolourdialog.BasePyControl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.__init__`                           Default class constructor.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.DrawMarkers`                        Draws the markers on top of the background bitmap.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.InCircle`                           Returns whether a point is inside the HSV wheel or not.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.OnLeftDown`                         Handles the ``wx.EVT_LEFT_DOWN`` for :class:`HSVWheel`.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.OnLeftUp`                           Handles the ``wx.EVT_LEFT_UP`` for :class:`HSVWheel`.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.OnMotion`                           Handles the ``wx.EVT_MOTION`` for :class:`HSVWheel`.
:meth:`~wx.lib.agw.cubecolourdialog.HSVWheel.TrackPoint`                         Track a mouse event inside the HSV colour wheel.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: HSVWheel(BasePyControl)

   Implements the drawing, mouse handling and sizing routines for the HSV
   colour wheel.

   .. method:: __init__(self, parent)

      Default class constructor.
      Used internally. Do not call it in your code!
      
      :param `parent`: the control parent window.


   .. method:: DrawMarkers(self, dc=None)

      Draws the markers on top of the background bitmap.
      
      :param `dc`: an instance of :class:`wx.DC`.


   .. method:: InCircle(self, pt)

      Returns whether a point is inside the HSV wheel or not.
      
      :param `pt`: an instance of :class:`wx.Point`.


   .. method:: OnLeftDown(self, event)

      Handles the ``wx.EVT_LEFT_DOWN`` for :class:`HSVWheel`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnLeftUp(self, event)

      Handles the ``wx.EVT_LEFT_UP`` for :class:`HSVWheel`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnMotion(self, event)

      Handles the ``wx.EVT_MOTION`` for :class:`HSVWheel`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: TrackPoint(self, pt)

      Track a mouse event inside the HSV colour wheel.
      
      :param `pt`: an instance of :class:`wx.Point`.


