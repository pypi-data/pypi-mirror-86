.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.delayedresult.PreProcessChain

.. highlight:: python



.. _wx.lib.delayedresult.PreProcessChain.Traverser:

==========================================================================================================================================
|phoenix_title|  **wx.lib.delayedresult.PreProcessChain.Traverser**
==========================================================================================================================================

Traverses the chain of pre-processors it is given, transforming
the original delayedResult along the way. The return value of each
callable added via addSub() is given to the previous addSub() callable,
until the handler is reached.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Traverser</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.delayedresult.PreProcessChain.Traverser_inheritance.png" alt="Inheritance diagram of Traverser" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.delayedresult.PreProcessChain.Traverser.__init__`                 Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.delayedresult.PreProcessChain.Traverser.get`                      This makes handler think we are a delayedResult.
:meth:`~wx.lib.delayedresult.PreProcessChain.Traverser.getJobID`                 Return the job id for the delayedResult we transform.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Traverser

   Traverses the chain of pre-processors it is given, transforming
   the original delayedResult along the way. The return value of each
   callable added via addSub() is given to the previous addSub() callable,
   until the handler is reached.

   .. method:: __init__(self, delayedResult, chain)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: get(self)

      This makes handler think we are a delayedResult.


   .. method:: getJobID(self)

      Return the job id for the delayedResult we transform.


