.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.propgrid.PropertyGridPage:

==========================================================================================================================================
|phoenix_title|  **wx.propgrid.PropertyGridPage**
==========================================================================================================================================

Holder of property grid page information.          

You can subclass this and give instance in :meth:`wx.propgrid.PropertyGridManager.AddPage` . It inherits from :ref:`wx.EvtHandler`  and can be used to process events specific to this page (id of events will still be same as manager's). If you don't want to use it to process all events of the page, you need to return ``False`` in the derived :meth:`wx.propgrid.PropertyGridPage.IsHandlingAllEvents` . 

Please note that :ref:`wx.propgrid.PropertyGridPage`  lacks many non-const property manipulation functions found in :ref:`wx.propgrid.PropertyGridManager`. Please use parent manager (m_manager member variable) when needed. 

Please note that most member functions are inherited and as such not documented on this page. This means you will probably also want to read :ref:`wx.propgrid.PropertyGridInterface`  class reference. 



|phoenix_title| Event Handling
==============================

:ref:`wx.propgrid.PropertyGridPage`  receives events emitted by its :ref:`wx.propgrid.PropertyGridManager`, but only those events that are specific to that page. If :ref:`wx.propgrid.PropertyGridPage`:: IsHandlingAllEvents returns ``False``, then unhandled events are sent to the manager's parent, as usual. See :ref:`PropertyGrid Event Handling <wx.propgrid.PropertyGrid>`  for more information.   




|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PropertyGridPage</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.propgrid.PropertyGridPage_inheritance.png" alt="Inheritance diagram of PropertyGridPage" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.propgrid.PropertyGridPage.html" title="wx.propgrid.PropertyGridPage" alt="" coords="205,160,421,189"/> <area shape="rect" id="node2" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node3" href="wx.propgrid.PropertyGridInterface.html" title="wx.propgrid.PropertyGridInterface" alt="" coords="191,83,434,112"/> <area shape="rect" id="node4" href="wx.propgrid.PropertyGridPageState.html" title="wx.propgrid.PropertyGridPageState" alt="" coords="458,83,709,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.propgrid.PropertyGridPage.__init__`                                   
:meth:`~wx.propgrid.PropertyGridPage.Clear`                                      Deletes all properties on page.
:meth:`~wx.propgrid.PropertyGridPage.FitColumns`                                 Reduces column sizes to minimum possible that contents are still visibly (naturally some margin space will be applied as well).
:meth:`~wx.propgrid.PropertyGridPage.GetIndex`                                   Returns page index in manager;.
:meth:`~wx.propgrid.PropertyGridPage.GetRoot`                                    Returns "root property".
:meth:`~wx.propgrid.PropertyGridPage.GetSplitterPosition`                        Returns x-coordinate position of splitter on a page.
:meth:`~wx.propgrid.PropertyGridPage.GetStatePtr`                                Returns pointer to contained property grid state.
:meth:`~wx.propgrid.PropertyGridPage.GetToolId`                                  Returns id of the tool bar item that represents this page on :ref:`wx.propgrid.PropertyGridManager`'s :ref:`wx.ToolBar`.
:meth:`~wx.propgrid.PropertyGridPage.Init`                                       Do any member initialization in this method.
:meth:`~wx.propgrid.PropertyGridPage.IsHandlingAllEvents`                        Return ``False`` here to indicate unhandled events should be propagated to manager's parent, as normal.
:meth:`~wx.propgrid.PropertyGridPage.OnShow`                                     Called every time page is about to be shown.
:meth:`~wx.propgrid.PropertyGridPage.RefreshProperty`                            Refreshes given property on page.
:meth:`~wx.propgrid.PropertyGridPage.SetSplitterPosition`                        Sets splitter position on page.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.propgrid.PropertyGridPage.Index`                                      See :meth:`~wx.propgrid.PropertyGridPage.GetIndex`
:attr:`~wx.propgrid.PropertyGridPage.Root`                                       See :meth:`~wx.propgrid.PropertyGridPage.GetRoot`
:attr:`~wx.propgrid.PropertyGridPage.SplitterPosition`                           See :meth:`~wx.propgrid.PropertyGridPage.GetSplitterPosition` and :meth:`~wx.propgrid.PropertyGridPage.SetSplitterPosition`
:attr:`~wx.propgrid.PropertyGridPage.StatePtr`                                   See :meth:`~wx.propgrid.PropertyGridPage.GetStatePtr`
:attr:`~wx.propgrid.PropertyGridPage.ToolId`                                     See :meth:`~wx.propgrid.PropertyGridPage.GetToolId`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.propgrid.PropertyGridPage(EvtHandler, PropertyGridInterface, PropertyGridPageState)

   **Possible constructors**::

       PropertyGridPage()
       
   
   Holder of property grid page information.



   .. method:: __init__(self)






   .. method:: Clear(self)

      Deletes all properties on page.                   





   .. method:: FitColumns(self)

      Reduces column sizes to minimum possible that contents are still visibly (naturally some margin space will be applied as well).                  


      Note that you can also get calculated column widths by calling  :meth:`GetColumnWidth`   immediately after this function returns.                  

      :rtype: :ref:`Size`







      :returns: 

         Returns minimum size for the page to still display everything.  







      .. note:: 

         This function only works properly if size of containing grid was already fairly large.  








   .. method:: GetIndex(self)

      Returns page index in manager;.                  

      :rtype: `int`








   .. method:: GetRoot(self)

      Returns "root property".                  

      It does not have name, etc. and it is not visible. It is only useful for accessing its children.                  

      :rtype: :ref:`wx.propgrid.PGProperty`








   .. method:: GetSplitterPosition(self, col=0)

      Returns x-coordinate position of splitter on a page.                  


      :param `col`: 
      :type `col`: int




      :rtype: `int`








   .. method:: GetStatePtr(self)

      Returns pointer to contained property grid state.                  

      :rtype: :ref:`wx.propgrid.PropertyGridPageState`








   .. method:: GetToolId(self)

      Returns id of the tool bar item that represents this page on :ref:`wx.propgrid.PropertyGridManager`'s :ref:`wx.ToolBar`.                  

      :rtype: `int`








   .. method:: Init(self)

      Do any member initialization in this method.                  

                 



      .. note:: 

         - Called every time the page is added into a manager.

         - You can add properties to the page here.  











   .. method:: IsHandlingAllEvents(self)

      Return ``False`` here to indicate unhandled events should be propagated to manager's parent, as normal.                  

      :rtype: `bool`








   .. method:: OnShow(self)

      Called every time page is about to be shown.                  

      Useful, for instance, creating properties just-in-time.                   





   .. method:: RefreshProperty(self, p)

      Refreshes given property on page.                  


      :param `p`: 
      :type `p`: wx.propgrid.PGProperty







   .. method:: SetSplitterPosition(self, splitterPos, col=0)

      Sets splitter position on page.                  

                


      :param `splitterPos`: 
      :type `splitterPos`: int
      :param `col`: 
      :type `col`: int






      .. note:: 

         Splitter position cannot exceed grid size, and therefore setting it during form creation may fail as initial grid size is often smaller than desired splitter position, especially when sizers are being used.   








   .. attribute:: Index

      See :meth:`~wx.propgrid.PropertyGridPage.GetIndex`


   .. attribute:: Root

      See :meth:`~wx.propgrid.PropertyGridPage.GetRoot`


   .. attribute:: SplitterPosition

      See :meth:`~wx.propgrid.PropertyGridPage.GetSplitterPosition` and :meth:`~wx.propgrid.PropertyGridPage.SetSplitterPosition`


   .. attribute:: StatePtr

      See :meth:`~wx.propgrid.PropertyGridPage.GetStatePtr`


   .. attribute:: ToolId

      See :meth:`~wx.propgrid.PropertyGridPage.GetToolId`

