.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.mixins.listctrl

.. highlight:: python



.. _wx.lib.mixins.listctrl.ColumnSorterMixin:

==========================================================================================================================================
|phoenix_title|  **wx.lib.mixins.listctrl.ColumnSorterMixin**
==========================================================================================================================================

A mixin class that handles sorting of a wx.ListCtrl in REPORT mode when
the column header is clicked on.

There are a few requirments needed in order for this to work genericly:

  1. The combined class must have a GetListCtrl method that
     returns the wx.ListCtrl to be sorted, and the list control
     must exist at the time the wx.ColumnSorterMixin.__init__
     method is called because it uses GetListCtrl.

  2. Items in the list control must have a unique data value set
     with list.SetItemData.

  3. The combined class must have an attribute named itemDataMap
     that is a dictionary mapping the data values to a sequence of
     objects representing the values in each column.  These values
     are compared in the column sorter to determine sort order.

Interesting methods to override are GetColumnSorter,
GetSecondarySortValues, and GetSortImages.  See below for details.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ColumnSorterMixin</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.mixins.listctrl.ColumnSorterMixin_inheritance.png" alt="Inheritance diagram of ColumnSorterMixin" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.mixins.listctrl.ColumnSorterMixin.html" title="wx.lib.mixins.listctrl.ColumnSorterMixin" alt="" coords="5,5,288,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.__init__`                       Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.GetColumnSorter`                Returns a callable object to be used for comparing column values when sorting.
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.GetColumnWidths`                Returns a list of column widths.  Can be used to help restore the current
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.GetSecondarySortValues`         Returns a tuple of 2 values to use for secondary sort values when the
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.GetSortImages`                  Returns a tuple of image list indexesthe indexes in the image list for an image to be put on the column
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.GetSortState`                   Return a tuple containing the index of the column that was last sorted
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.OnSortOrderChanged`             Callback called after sort order has changed (whenever user
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.SetColumnCount`                 
:meth:`~wx.lib.mixins.listctrl.ColumnSorterMixin.SortListItems`                  Sort the list on demand.  Can also be used to set the sort column and order.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ColumnSorterMixin

   A mixin class that handles sorting of a wx.ListCtrl in REPORT mode when
   the column header is clicked on.
   
   There are a few requirments needed in order for this to work genericly:
   
     1. The combined class must have a GetListCtrl method that
        returns the wx.ListCtrl to be sorted, and the list control
        must exist at the time the wx.ColumnSorterMixin.__init__
        method is called because it uses GetListCtrl.
   
     2. Items in the list control must have a unique data value set
        with list.SetItemData.
   
     3. The combined class must have an attribute named itemDataMap
        that is a dictionary mapping the data values to a sequence of
        objects representing the values in each column.  These values
        are compared in the column sorter to determine sort order.
   
   Interesting methods to override are GetColumnSorter,
   GetSecondarySortValues, and GetSortImages.  See below for details.

   .. method:: __init__(self, numColumns)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: GetColumnSorter(self)

      Returns a callable object to be used for comparing column values when sorting.


   .. method:: GetColumnWidths(self)

      Returns a list of column widths.  Can be used to help restore the current
      view later.


   .. method:: GetSecondarySortValues(self, col, key1, key2)

      Returns a tuple of 2 values to use for secondary sort values when the
      items in the selected column match equal.  The default just returns the
      item data values.


   .. method:: GetSortImages(self)

      Returns a tuple of image list indexesthe indexes in the image list for an image to be put on the column
      header when sorting in descending order.


   .. method:: GetSortState(self)

      Return a tuple containing the index of the column that was last sorted
      and the sort direction of that column.
      Usage:
      col, ascending = self.GetSortState()
      # Make changes to list items... then resort
      self.SortListItems(col, ascending)


   .. method:: OnSortOrderChanged(self)

      Callback called after sort order has changed (whenever user
      clicked column header).


   .. method:: SetColumnCount(self, newNumColumns)


   .. method:: SortListItems(self, col=-1, ascending=1)

      Sort the list on demand.  Can also be used to set the sort column and order.


