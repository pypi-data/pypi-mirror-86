.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.BookCtrlEvent:

==========================================================================================================================================
|phoenix_title|  **wx.BookCtrlEvent**
==========================================================================================================================================

This class represents the events generated by book controls (:ref:`wx.Notebook`, :ref:`wx.Listbook`, :ref:`wx.Choicebook`, :ref:`wx.Treebook`, :ref:`wx.aui.AuiNotebook`).          

The ``PAGE_CHANGING`` events are sent before the current page is changed. It allows the program to examine the current page (which can be retrieved with :meth:`wx.BookCtrlEvent.GetOldSelection` ) and to veto the page change by calling :meth:`wx.NotifyEvent.Veto`   if, for example, the current values in the controls of the old page are invalid. 

The ``PAGE_CHANGED`` events are sent after the page has been changed and the program cannot veto it any more, it just informs it about the page change. 

To summarize, if the program is interested in validating the page values before allowing the user to change it, it should process the ``PAGE_CHANGING`` event, otherwise ``PAGE_CHANGED`` is probably enough. In any case, it is probably unnecessary to process both events at once. 







         



.. seealso:: :ref:`wx.Notebook`, :ref:`wx.Listbook`, :ref:`wx.Choicebook`, :ref:`wx.Treebook`, :ref:`wx.Toolbook`, :ref:`wx.aui.AuiNotebook`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>BookCtrlEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.BookCtrlEvent_inheritance.png" alt="Inheritance diagram of BookCtrlEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.BookCtrlEvent.html" title="wx.BookCtrlEvent" alt="" coords="11,315,149,344"/> <area shape="rect" id="node2" href="wx.NotifyEvent.html" title="wx.NotifyEvent" alt="" coords="19,237,141,267"/> <area shape="rect" id="node3" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="5,160,155,189"/> <area shape="rect" id="node4" href="wx.Event.html" title="wx.Event" alt="" coords="39,83,121,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="37,5,123,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.aui.AuiNotebookEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.BookCtrlEvent.__init__`                                               Constructor (used internally by wxWidgets only).
:meth:`~wx.BookCtrlEvent.GetOldSelection`                                        Returns the page that was selected before the change,  ``NOT_FOUND``   if none was selected.
:meth:`~wx.BookCtrlEvent.GetSelection`                                           Returns the currently selected page, or  ``NOT_FOUND``   if none was selected.
:meth:`~wx.BookCtrlEvent.SetOldSelection`                                        Sets the id of the page selected before the change.
:meth:`~wx.BookCtrlEvent.SetSelection`                                           Sets the selection member variable.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.BookCtrlEvent.OldSelection`                                           See :meth:`~wx.BookCtrlEvent.GetOldSelection` and :meth:`~wx.BookCtrlEvent.SetOldSelection`
:attr:`~wx.BookCtrlEvent.Selection`                                              See :meth:`~wx.BookCtrlEvent.GetSelection` and :meth:`~wx.BookCtrlEvent.SetSelection`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.BookCtrlEvent(NotifyEvent)

   **Possible constructors**::

       BookCtrlEvent(eventType=wxEVT_NULL, id=0, sel=NOT_FOUND,
                     oldSel=NOT_FOUND)
       
   
   This class represents the events generated by book controls
   (wxNotebook, Listbook, Choicebook, Treebook, AuiNotebook).



   .. method:: __init__(self, eventType=wxEVT_NULL, id=0, sel=NOT_FOUND, oldSel=NOT_FOUND)

      Constructor (used internally by wxWidgets only).                  


      :param `eventType`: 
      :type `eventType`: wx.EventType
      :param `id`: 
      :type `id`: int
      :param `sel`: 
      :type `sel`: int
      :param `oldSel`: 
      :type `oldSel`: int







   .. method:: GetOldSelection(self)

      Returns the page that was selected before the change,  ``NOT_FOUND``   if none was selected.                   

      :rtype: `int`








   .. method:: GetSelection(self)

      Returns the currently selected page, or  ``NOT_FOUND``   if none was selected.                   

                

      :rtype: `int`







      .. note:: 

         under Windows, :meth:`GetSelection`   will return the same value as :meth:`GetOldSelection`   when called from the  ``EVT_BOOKCTRL_PAGE_CHANGING``   handler and not the page which is going to be selected.    








   .. method:: SetOldSelection(self, page)

      Sets the id of the page selected before the change.                  


      :param `page`: 
      :type `page`: int







   .. method:: SetSelection(self, page)

      Sets the selection member variable.                  


      :param `page`: 
      :type `page`: int







   .. attribute:: OldSelection

      See :meth:`~wx.BookCtrlEvent.GetOldSelection` and :meth:`~wx.BookCtrlEvent.SetOldSelection`


   .. attribute:: Selection

      See :meth:`~wx.BookCtrlEvent.GetSelection` and :meth:`~wx.BookCtrlEvent.SetSelection`

