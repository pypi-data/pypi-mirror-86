.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.WindowDC:

==========================================================================================================================================
|phoenix_title|  **wx.WindowDC**
==========================================================================================================================================

A :ref:`wx.WindowDC`  must be constructed if an application wishes to paint on the whole area of a window (client and decorations).          

This should normally be constructed as a temporary stack object; don't store a :ref:`wx.WindowDC`  object. 

To draw on a window from inside an EVT_PAINT() handler, construct a :ref:`wx.PaintDC`  object instead. 

To draw on the client area of a window from outside an EVT_PAINT() handler, construct a :ref:`wx.ClientDC`  object. 

A :ref:`wx.WindowDC`  object is initialized to use the same font and colours as the window it is associated with. 







         



.. seealso:: :ref:`wx.DC`, :ref:`wx.MemoryDC`, :ref:`wx.PaintDC`, :ref:`wx.ClientDC`, :ref:`wx.ScreenDC`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>WindowDC</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.WindowDC_inheritance.png" alt="Inheritance diagram of WindowDC" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.WindowDC.html" title="wx.WindowDC" alt="" coords="5,160,121,189"/> <area shape="rect" id="node2" href="wx.DC.html" title="wx.DC" alt="" coords="27,83,99,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="20,5,107,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.ClientDC`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.WindowDC.__init__`                                                    Constructor.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.WindowDC(DC)

   **Possible constructors**::

       WindowDC(window)
       
   
   A WindowDC must be constructed if an application wishes to paint on
   the whole area of a window (client and decorations).



   .. method:: __init__(self, window)

      Constructor.                  

      Pass a pointer to the window on which you wish to paint.                  


      :param `window`: 
      :type `window`: wx.Window






