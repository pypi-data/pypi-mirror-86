.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.MiniFrame:

==========================================================================================================================================
|phoenix_title|  **wx.MiniFrame**
==========================================================================================================================================

A miniframe is a frame with a small title bar.          

It is suitable for floating toolbars that must not take up too much screen area. 

An example of mini frame can be seen in the :ref:`Dialogs Sample <dialogs sample>`  using the "Mini frame" command of the "Generic dialogs" submenu. 





.. _MiniFrame-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.ICONIZE``: Display the frame iconized (minimized) (Windows only).  
- ``wx.CAPTION``: Puts a caption on the frame.  
- ``wx.MINIMIZE``: Identical to ``wx.ICONIZE``.  
- ``wx.MINIMIZE_BOX``: Displays a minimize box on the frame (Windows and Motif only).  
- ``wx.MAXIMIZE``: Displays the frame maximized (Windows only).  
- ``wx.MAXIMIZE_BOX``: Displays a maximize box on the frame (Windows and Motif only).  
- ``wx.CLOSE_BOX``: Displays a close box on the frame.  
- ``wx.STAY_ON_TOP``: Stay on top of other windows (Windows only).  
- ``wx.SYSTEM_MENU``: Displays a system menu (Windows and Motif only).  
- ``wx.RESIZE_BORDER``: Displays a resizable border around the window.  








         



.. note:: 

   This class has miniframe functionality under Windows and GTK, i.e. the presence of mini frame will not be noted in the task bar and focus behaviour is different. On other platforms, it behaves like a normal frame.  







.. seealso:: :ref:`wx.MDIParentFrame`, :ref:`wx.MDIChildFrame`, :ref:`wx.Frame`, :ref:`wx.Dialog`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MiniFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.MiniFrame_inheritance.png" alt="Inheritance diagram of MiniFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.MiniFrame.html" title="wx.MiniFrame" alt="" coords="53,469,165,499"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="66,392,151,421"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="31,315,186,344"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,237,193,267"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.miniframe.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/../no_appearance.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/../no_appearance.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.MiniFrame.__init__`                                                   Default constructor.
:meth:`~wx.MiniFrame.Create`                                                     Used in two-step frame construction.
:meth:`~wx.MiniFrame.GetClassDefaultAttributes`                                  
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.MiniFrame(Frame)

   **Possible constructors**::

       MiniFrame()
       
       MiniFrame(parent, id=ID_ANY, title=EmptyString, pos=DefaultPosition,
                 size=DefaultSize, style=CAPTION|RESIZE_BORDER, name=FrameNameStr)
       
   
   A miniframe is a frame with a small title bar.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=CAPTION|RESIZE_BORDER, name=FrameNameStr)`
      
      Constructor, creating the window.                  
      
      
      
      
      :param `parent`: The window parent. This may be ``None``. If it is non-NULL, the frame will always be displayed on top of the parent window on Windows.   
      :type `parent`: wx.Window
      :param `id`: The window identifier. It may take a value of -1 to indicate a default value.   
      :type `id`: wx.WindowID
      :param `title`: The caption to be displayed on the frame's title bar.   
      :type `title`: string
      :param `pos`: The window position. The value DefaultPosition indicates a default position, chosen by either the windowing system or wxWidgets, depending on platform.   
      :type `pos`: wx.Point
      :param `size`: The window size. The value DefaultSize indicates a default size, chosen by either the windowing system or wxWidgets, depending on platform.   
      :type `size`: wx.Size
      :param `style`: The window style. See :ref:`wx.MiniFrame`.   
      :type `style`: long
      :param `name`: The name of the window. This parameter is used to associate a name with the item, allowing the application user to set Motif resource values for individual windows.  
      :type `name`: string
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      .. note:: 
      
         The frame behaves like a normal frame on non-Windows platforms.  
      
      
      
      
      
      
      
      .. seealso:: :meth:`Create`     
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=CAPTION|RESIZE_BORDER, name=FrameNameStr)

      Used in two-step frame construction.                  

      See :ref:`wx.MiniFrame`  for further details.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `title`: 
      :type `title`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`







