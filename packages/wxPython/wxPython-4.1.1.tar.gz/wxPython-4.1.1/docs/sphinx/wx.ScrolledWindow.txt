.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ScrolledWindow:

==========================================================================================================================================
|phoenix_title|  **wx.ScrolledWindow**
==========================================================================================================================================

Scrolled window derived from :ref:`wx.Panel`.                  

See :ref:`wx.Scrolled`  for a detailed description. 







                 



.. note:: 

   Note that because this class derives from :ref:`wx.Panel`, it shares its behaviour with regard to ``TAB`` traversal and focus handling (in particular, it forwards focus to its children). If you don't want this behaviour, use :ref:`wx.ScrolledCanvas`  instead.  







.. note:: 

   :ref:`wx.ScrolledWindow`  is an alias for Scrolled<wxPanel> since version 2.9.0. In older versions, it was a standalone class.  







.. seealso:: :ref:`wx.Scrolled`, :ref:`wx.ScrolledCanvas`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ScrolledWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ScrolledWindow_inheritance.png" alt="Inheritance diagram of ScrolledWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ScrolledWindow.html" title="wx.ScrolledWindow" alt="" coords="5,5,155,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ScrolledWindow.__init__`                                              
:meth:`~wx.ScrolledWindow.GetClassDefaultAttributes`                             
:meth:`~wx.ScrolledWindow.SetFocusIgnoringChildren`                              In contrast to SetFocus() this will set the focus to the panel even if
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ScrolledWindow(_ScrolledWindowBase)

   **Possible constructors**::

       ScrolledWindow()
       
       ScrolledWindow(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize,
                      style=ScrolledWindowStyle, name=PanelNameStr)
       
   
   Scrolled window derived from Panel.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=ScrolledWindowStyle, name=PanelNameStr)`
      
      
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: :class:`Point`
      :param `size`: 
      :type `size`: :class:`Size`
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: :class:`String`
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: SetFocusIgnoringChildren(self)

                                              In contrast to SetFocus() this will set the focus to the panel even if
                                              there are child windows in the panel. This is only rarely needed.  




