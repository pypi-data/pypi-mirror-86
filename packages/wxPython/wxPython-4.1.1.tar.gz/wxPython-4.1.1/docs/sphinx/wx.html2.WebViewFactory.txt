.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.html2.WebViewFactory:

==========================================================================================================================================
|phoenix_title|  **wx.html2.WebViewFactory**
==========================================================================================================================================

An abstract factory class for creating :ref:`wx.html2.WebView`  backends.          

Each implementation of :ref:`wx.html2.WebView`  should have its own factory. 

:ref:`wx.html2.WebView` 



         



.. versionadded:: 2.9.5 
     







.. seealso:: :ref:`wx.html2.WebView`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>WebViewFactory</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.html2.WebViewFactory_inheritance.png" alt="Inheritance diagram of WebViewFactory" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.html2.WebViewFactory.html" title="wx.html2.WebViewFactory" alt="" coords="5,83,200,112"/> <area shape="rect" id="node2" href="wx.Object.html" title="wx.Object" alt="" coords="59,5,146,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.html2.WebViewFactory.Create`                                          Function to create a new :ref:`wx.html2.WebView`  with two-step creation, :meth:`wx.html2.WebView.Create`   should be called on the returned object.
:meth:`~wx.html2.WebViewFactory.IsAvailable`                                     Function to check if the backend is available at runtime.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.html2.WebViewFactory(Object)

   An abstract factory class for creating WebView backends.



   .. method:: Create(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **Create** `(self)`
      
      Function to create a new :ref:`wx.html2.WebView`  with two-step creation, :meth:`wx.html2.WebView.Create`   should be called on the returned object.                  
      
                      
      
      :rtype: :ref:`wx.html2.WebView`
      
      
      
      
      
      
      
      :returns: 
      
         the created :ref:`wx.html2.WebView`    
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **Create** `(self, parent, id, url=WebViewDefaultURLStr, pos=DefaultPosition, size=DefaultSize, style=0, name=WebViewNameStr)`
      
      Function to create a new :ref:`wx.html2.WebView`  with parameters.                  
      
      
      
      
      :param `parent`: Parent window for the control   
      :type `parent`: wx.Window
      :param `id`: ``ID`` of this control   
      :type `id`: wx.WindowID
      :param `url`: Initial URL to load   
      :type `url`: string
      :param `pos`: Position of the control   
      :type `pos`: wx.Point
      :param `size`: Size of the control   
      :type `size`: wx.Size
      :param `style`: Window style. For generic window styles, please see :ref:`wx.Window`.   
      :type `style`: long
      :param `name`: Window name.   
      :type `name`: string
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      :rtype: :ref:`wx.html2.WebView`
      
      
      
                        
      
      
      
      :returns: 
      
         the created :ref:`wx.html2.WebView`    
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: IsAvailable(self)

      Function to check if the backend is available at runtime.                  

      The :ref:`wx.html2.WebView`  implementation can use this function to check all runtime requirements without trying to create a :ref:`wx.html2.WebView`. 

                

      :rtype: `bool`







      :returns: 

         returns ``True`` if the backend can be used or ``False`` if it is not available during runtime.  







      .. versionadded:: 4.1/wxWidgets-3.1.5  
     







