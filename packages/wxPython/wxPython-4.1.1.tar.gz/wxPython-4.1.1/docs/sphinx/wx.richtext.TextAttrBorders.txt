.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.richtext.TextAttrBorders:

==========================================================================================================================================
|phoenix_title|  **wx.richtext.TextAttrBorders**
==========================================================================================================================================

A class representing a rich text object's borders.          







         



.. seealso:: :ref:`wx.richtext.RichTextAttr`, :ref:`wx.richtext.RichTextCtrl`, RichTextAttrBorder   







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TextAttrBorders</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.richtext.TextAttrBorders_inheritance.png" alt="Inheritance diagram of TextAttrBorders" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.richtext.TextAttrBorders.html" title="wx.richtext.TextAttrBorders" alt="" coords="5,5,205,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.richtext.TextAttrBorders.__init__`                                    Default constructor.
:meth:`~wx.richtext.TextAttrBorders.Apply`                                       Applies border to this object, but not if the same as `compareWith`.
:meth:`~wx.richtext.TextAttrBorders.CollectCommonAttributes`                     Collects the attributes that are common to a range of content, building up a note of which attributes are absent in some objects and which clash in some objects.
:meth:`~wx.richtext.TextAttrBorders.EqPartial`                                   Partial equality test.
:meth:`~wx.richtext.TextAttrBorders.GetBottom`                                   
:meth:`~wx.richtext.TextAttrBorders.GetLeft`                                     
:meth:`~wx.richtext.TextAttrBorders.GetRight`                                    
:meth:`~wx.richtext.TextAttrBorders.GetTop`                                      
:meth:`~wx.richtext.TextAttrBorders.IsValid`                                     Returns ``True`` if at least one border is valid.
:meth:`~wx.richtext.TextAttrBorders.RemoveStyle`                                 Removes the specified attributes from this object.
:meth:`~wx.richtext.TextAttrBorders.Reset`                                       Resets all borders.
:meth:`~wx.richtext.TextAttrBorders.SetColour`                                   Sets colour of all borders.
:meth:`~wx.richtext.TextAttrBorders.SetStyle`                                    Sets the style of all borders.
:meth:`~wx.richtext.TextAttrBorders.SetWidth`                                    Sets the width of all borders.
:meth:`~wx.richtext.TextAttrBorders.__bool__`                                    
:meth:`~wx.richtext.TextAttrBorders.__nonzero__`                                 
:meth:`~wx.richtext.TextAttrBorders.__eq__`                                      Equality operator.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.richtext.TextAttrBorders.Bottom`                                      See :meth:`~wx.richtext.TextAttrBorders.GetBottom`
:attr:`~wx.richtext.TextAttrBorders.Left`                                        See :meth:`~wx.richtext.TextAttrBorders.GetLeft`
:attr:`~wx.richtext.TextAttrBorders.Right`                                       See :meth:`~wx.richtext.TextAttrBorders.GetRight`
:attr:`~wx.richtext.TextAttrBorders.Top`                                         See :meth:`~wx.richtext.TextAttrBorders.GetTop`
:attr:`~wx.richtext.TextAttrBorders.m_bottom`                                    A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.
:attr:`~wx.richtext.TextAttrBorders.m_left`                                      A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.
:attr:`~wx.richtext.TextAttrBorders.m_right`                                     A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.
:attr:`~wx.richtext.TextAttrBorders.m_top`                                       A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.richtext.TextAttrBorders(object)

   **Possible constructors**::

       TextAttrBorders()
       
   
   A class representing a rich text object's borders.



   .. method:: __init__(self)

      Default constructor.                   





   .. method:: Apply(self, borders, compareWith=None)

      Applies border to this object, but not if the same as `compareWith`.                  


      :param `borders`: 
      :type `borders`: wx.richtext.TextAttrBorders
      :param `compareWith`: 
      :type `compareWith`: wx.richtext.TextAttrBorders




      :rtype: `bool`








   .. method:: CollectCommonAttributes(self, attr, clashingAttr, absentAttr)

      Collects the attributes that are common to a range of content, building up a note of which attributes are absent in some objects and which clash in some objects.                  


      :param `attr`: 
      :type `attr`: wx.richtext.TextAttrBorders
      :param `clashingAttr`: 
      :type `clashingAttr`: wx.richtext.TextAttrBorders
      :param `absentAttr`: 
      :type `absentAttr`: wx.richtext.TextAttrBorders







   .. method:: EqPartial(self, borders, weakTest=True)

      Partial equality test.                  

      If `weakTest`  is ``True``, attributes of this object do not have to be present if those attributes of `borders`  are present. If `weakTest`  is ``False``, the function will fail if an attribute is present in `borders`  but not in this object.                  


      :param `borders`: 
      :type `borders`: wx.richtext.TextAttrBorders
      :param `weakTest`: 
      :type `weakTest`: bool




      :rtype: `bool`








   .. method:: GetBottom(self)



      :rtype: :ref:`wx.richtext.TextAttrBorder`








   .. method:: GetLeft(self)



      :rtype: :ref:`wx.richtext.TextAttrBorder`








   .. method:: GetRight(self)



      :rtype: :ref:`wx.richtext.TextAttrBorder`








   .. method:: GetTop(self)



      :rtype: :ref:`wx.richtext.TextAttrBorder`








   .. method:: IsValid(self)

      Returns ``True`` if at least one border is valid.                  

      :rtype: `bool`








   .. method:: RemoveStyle(self, attr)

      Removes the specified attributes from this object.                  


      :param `attr`: 
      :type `attr`: wx.richtext.TextAttrBorders




      :rtype: `bool`








   .. method:: Reset(self)

      Resets all borders.                   





   .. method:: SetColour(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **SetColour** `(self, colour)`
      
      Sets colour of all borders.                  
      
      
      :param `colour`: 
      :type `colour`: long
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **SetColour** `(self, colour)`
      
      Sets the colour for all borders.                  
      
      
      :param `colour`: 
      :type `colour`: wx.Colour
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: SetStyle(self, style)

      Sets the style of all borders.                  


      :param `style`: 
      :type `style`: int







   .. method:: SetWidth(self, *args, **kw)

      Sets the width of all borders.                   


      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **SetWidth** `(self, width)`
      
      
      
      
      :param `width`: 
      :type `width`: wx.richtext.TextAttrDimension
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **SetWidth** `(self, value, units=TEXT_ATTR_UNITS_TENTHS_MM)`
      
      
      
      
      :param `value`: 
      :type `value`: int
      :param `units`: 
      :type `units`: wx.richtext.TextAttrUnits
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: __bool__(self)



      :rtype: `int`








   .. method:: __nonzero__(self)



      :rtype: `int`








   .. method:: __eq__(self)

      Equality operator.                  


      :param `borders`: 
      :type `borders`: wx.richtext.TextAttrBorders







   .. attribute:: Bottom

      See :meth:`~wx.richtext.TextAttrBorders.GetBottom`


   .. attribute:: Left

      See :meth:`~wx.richtext.TextAttrBorders.GetLeft`


   .. attribute:: Right

      See :meth:`~wx.richtext.TextAttrBorders.GetRight`


   .. attribute:: Top

      See :meth:`~wx.richtext.TextAttrBorders.GetTop`


   .. attribute:: m_bottom

      A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.


   .. attribute:: m_left

      A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.


   .. attribute:: m_right

      A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.


   .. attribute:: m_top

      A public C++ attribute of type :ref:`~wx.richtext.TextAttrBorder`.

