.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.mixins.treemixin

.. highlight:: python



.. _wx.lib.mixins.treemixin.TreeAPIHarmonizer:

==========================================================================================================================================
|phoenix_title|  **wx.lib.mixins.treemixin.TreeAPIHarmonizer**
==========================================================================================================================================

This class attempts to hide the differences in API between the
different tree controls that are part of wxPython. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TreeAPIHarmonizer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.mixins.treemixin.TreeAPIHarmonizer_inheritance.png" alt="Inheritance diagram of TreeAPIHarmonizer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.mixins.treemixin.TreeAPIHarmonizer.html" title="wx.lib.mixins.treemixin.TreeAPIHarmonizer" alt="" coords="5,5,309,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.mixins.treemixin.DragAndDrop`, :class:`wx.lib.mixins.treemixin.ExpansionState`, :class:`wx.lib.mixins.treemixin.VirtualTree`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.ExpandAll`                     
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.ExpandAllChildren`             
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetColumnCount`                
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetCount`                      
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetFirstVisibleItem`           
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetItemChecked`                
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetItemImage`                  
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetItemType`                   
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetMainWindow`                 
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.GetSelections`                 
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.HitTest`                       HitTest returns a two-tuple (item, flags) for tree controls
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.IsItemChecked`                 
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.SelectItem`                    
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.SetItemChecked`                
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.SetItemImage`                  
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.SetItemType`                   
:meth:`~wx.lib.mixins.treemixin.TreeAPIHarmonizer.UnselectAll`                   
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: TreeAPIHarmonizer(object)

   This class attempts to hide the differences in API between the
   different tree controls that are part of wxPython. 

   .. method:: ExpandAll(self, item=None)


   .. method:: ExpandAllChildren(self, item)


   .. method:: GetColumnCount(self, \*args, \*\*kwargs)


   .. method:: GetCount(self)


   .. method:: GetFirstVisibleItem(self)


   .. method:: GetItemChecked(self, \*args, \*\*kwargs)


   .. method:: GetItemImage(self, item, which=wx.TreeItemIcon_Normal, column=-1)


   .. method:: GetItemType(self, \*args, \*\*kwargs)


   .. method:: GetMainWindow(self, \*args, \*\*kwargs)


   .. method:: GetSelections(self)


   .. method:: HitTest(self, \*args, \*\*kwargs)

      HitTest returns a two-tuple (item, flags) for tree controls
      without columns and a three-tuple (item, flags, column) for tree
      controls with columns. Our caller can indicate this method to
      always return a three-tuple no matter what tree control we're mixed
      in with by specifying the optional argument 'alwaysReturnColumn'
      to be True. 


   .. method:: IsItemChecked(self, \*args, \*\*kwargs)


   .. method:: SelectItem(self, item, \*args, \*\*kwargs)


   .. method:: SetItemChecked(self, \*args, \*\*kwargs)


   .. method:: SetItemImage(self, item, imageIndex, which=wx.TreeItemIcon_Normal, column=-1)


   .. method:: SetItemType(self, item, newType)


   .. method:: UnselectAll(self)


