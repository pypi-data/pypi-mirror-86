.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.aui.AuiMDIChildFrame:

==========================================================================================================================================
|phoenix_title|  **wx.aui.AuiMDIChildFrame**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiMDIChildFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.aui.AuiMDIChildFrame_inheritance.png" alt="Inheritance diagram of AuiMDIChildFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.aui.AuiMDIChildFrame.html" title="wx.aui.AuiMDIChildFrame" alt="" coords="15,315,203,344"/> <area shape="rect" id="node2" href="wx.Panel.html" title="wx.Panel" alt="" coords="69,237,149,267"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.aui.AuiMDIChildFrame.__init__`                                        
:meth:`~wx.aui.AuiMDIChildFrame.Activate`                                        
:meth:`~wx.aui.AuiMDIChildFrame.Create`                                          
:meth:`~wx.aui.AuiMDIChildFrame.CreateStatusBar`                                 
:meth:`~wx.aui.AuiMDIChildFrame.CreateToolBar`                                   
:meth:`~wx.aui.AuiMDIChildFrame.Destroy`                                         Destroys the window safely.
:meth:`~wx.aui.AuiMDIChildFrame.GetClassDefaultAttributes`                       
:meth:`~wx.aui.AuiMDIChildFrame.GetIcon`                                         
:meth:`~wx.aui.AuiMDIChildFrame.GetIcons`                                        
:meth:`~wx.aui.AuiMDIChildFrame.GetMDIParentFrame`                               
:meth:`~wx.aui.AuiMDIChildFrame.GetMenuBar`                                      
:meth:`~wx.aui.AuiMDIChildFrame.GetStatusBar`                                    
:meth:`~wx.aui.AuiMDIChildFrame.GetTitle`                                        
:meth:`~wx.aui.AuiMDIChildFrame.GetToolBar`                                      
:meth:`~wx.aui.AuiMDIChildFrame.Iconize`                                         
:meth:`~wx.aui.AuiMDIChildFrame.IsFullScreen`                                    
:meth:`~wx.aui.AuiMDIChildFrame.IsIconized`                                      
:meth:`~wx.aui.AuiMDIChildFrame.IsMaximized`                                     
:meth:`~wx.aui.AuiMDIChildFrame.IsTopLevel`                                      Returns ``True`` if the given window is a top-level one.
:meth:`~wx.aui.AuiMDIChildFrame.Maximize`                                        
:meth:`~wx.aui.AuiMDIChildFrame.Restore`                                         
:meth:`~wx.aui.AuiMDIChildFrame.SetIcon`                                         
:meth:`~wx.aui.AuiMDIChildFrame.SetIcons`                                        
:meth:`~wx.aui.AuiMDIChildFrame.SetMDIParentFrame`                               
:meth:`~wx.aui.AuiMDIChildFrame.SetMenuBar`                                      
:meth:`~wx.aui.AuiMDIChildFrame.SetStatusText`                                   
:meth:`~wx.aui.AuiMDIChildFrame.SetStatusWidths`                                 
:meth:`~wx.aui.AuiMDIChildFrame.SetTitle`                                        
:meth:`~wx.aui.AuiMDIChildFrame.Show`                                            Shows or hides the window.
:meth:`~wx.aui.AuiMDIChildFrame.ShowFullScreen`                                  
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.aui.AuiMDIChildFrame.Icon`                                            See :meth:`~wx.aui.AuiMDIChildFrame.GetIcon` and :meth:`~wx.aui.AuiMDIChildFrame.SetIcon`
:attr:`~wx.aui.AuiMDIChildFrame.Icons`                                           See :meth:`~wx.aui.AuiMDIChildFrame.GetIcons` and :meth:`~wx.aui.AuiMDIChildFrame.SetIcons`
:attr:`~wx.aui.AuiMDIChildFrame.MDIParentFrame`                                  See :meth:`~wx.aui.AuiMDIChildFrame.GetMDIParentFrame` and :meth:`~wx.aui.AuiMDIChildFrame.SetMDIParentFrame`
:attr:`~wx.aui.AuiMDIChildFrame.MenuBar`                                         See :meth:`~wx.aui.AuiMDIChildFrame.GetMenuBar` and :meth:`~wx.aui.AuiMDIChildFrame.SetMenuBar`
:attr:`~wx.aui.AuiMDIChildFrame.StatusBar`                                       See :meth:`~wx.aui.AuiMDIChildFrame.GetStatusBar`
:attr:`~wx.aui.AuiMDIChildFrame.Title`                                           See :meth:`~wx.aui.AuiMDIChildFrame.GetTitle` and :meth:`~wx.aui.AuiMDIChildFrame.SetTitle`
:attr:`~wx.aui.AuiMDIChildFrame.ToolBar`                                         See :meth:`~wx.aui.AuiMDIChildFrame.GetToolBar`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.aui.AuiMDIChildFrame(TDIChildFrame)

   **Possible constructors**::

       AuiMDIChildFrame()
       
       AuiMDIChildFrame(parent, winid=ID_ANY, title="", pos=DefaultPosition,
                        size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)
       



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, winid=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)`
      
      
      
      
      :param `parent`: 
      :type `parent`: wx.aui.AuiMDIParentFrame
      :param `winid`: 
      :type `winid`: wx.WindowID
      :param `title`: 
      :type `title`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Activate(self)






   .. method:: Create(self, parent, winid=ID_ANY, title=EmptyString, pos=DefaultPosition, size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)




      :param `parent`: 
      :type `parent`: wx.aui.AuiMDIParentFrame
      :param `winid`: 
      :type `winid`: wx.WindowID
      :param `title`: 
      :type `title`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. method:: CreateStatusBar(self, number=1, style=1, winid=1, name=EmptyString)




      :param `number`: 
      :type `number`: int
      :param `style`: 
      :type `style`: long
      :param `winid`: 
      :type `winid`: wx.WindowID
      :param `name`: 
      :type `name`: string




      :rtype: :ref:`StatusBar`








   .. method:: CreateToolBar(self, style, winid, name)




      :param `style`: 
      :type `style`: long
      :param `winid`: 
      :type `winid`: wx.WindowID
      :param `name`: 
      :type `name`: string




      :rtype: :ref:`ToolBar`








   .. method:: Destroy(self)

      Destroys the window safely.                  

      Use this function instead of the delete operator, since different window classes can be destroyed differently. Frames and dialogs are not destroyed immediately when this function is called â€“  they are added to a list of windows to be deleted on idle time, when all the window's events have been processed. This prevents problems with events being sent to non-existent windows. 

                

      :rtype: `bool`







      :returns: 

         ``True`` if the window has either been successfully deleted, or it has been added to the list of windows pending real deletion.   








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`VisualAttributes`








   .. method:: GetIcon(self)



      :rtype: :ref:`Icon`








   .. method:: GetIcons(self)



      :rtype: :ref:`IconBundle`








   .. method:: GetMDIParentFrame(self)



      :rtype: :ref:`wx.aui.AuiMDIParentFrame`








   .. method:: GetMenuBar(self)



      :rtype: :ref:`MenuBar`








   .. method:: GetStatusBar(self)



      :rtype: :ref:`StatusBar`








   .. method:: GetTitle(self)



      :rtype: `string`








   .. method:: GetToolBar(self)



      :rtype: :ref:`ToolBar`








   .. method:: Iconize(self, iconize=True)




      :param `iconize`: 
      :type `iconize`: bool







   .. method:: IsFullScreen(self)



      :rtype: `bool`








   .. method:: IsIconized(self)



      :rtype: `bool`








   .. method:: IsMaximized(self)



      :rtype: `bool`








   .. method:: IsTopLevel(self)

      Returns ``True`` if the given window is a top-level one.                  

      Currently all frames and dialogs are considered to be top-level windows (even if they have a parent window).                  

      :rtype: `bool`








   .. method:: Maximize(self, maximize=True)




      :param `maximize`: 
      :type `maximize`: bool







   .. method:: Restore(self)






   .. method:: SetIcon(self, icon)




      :param `icon`: 
      :type `icon`: wx.Icon







   .. method:: SetIcons(self, icons)




      :param `icons`: 
      :type `icons`: wx.IconBundle







   .. method:: SetMDIParentFrame(self, parent)




      :param `parent`: 
      :type `parent`: wx.aui.AuiMDIParentFrame







   .. method:: SetMenuBar(self, menuBar)




      :param `menuBar`: 
      :type `menuBar`: wx.MenuBar







   .. method:: SetStatusText(self, text, number=0)




      :param `text`: 
      :type `text`: string
      :param `number`: 
      :type `number`: int







   .. method:: SetStatusWidths(self, widths)




      :param `widths`: 
      :type `widths`: list of integers







   .. method:: SetTitle(self, title)




      :param `title`: 
      :type `title`: string







   .. method:: Show(self, show=True)

      Shows or hides the window.                  

      You may need to call :meth:`Raise`   for a top level window if you want to bring it to top, although this is not needed if :meth:`Show`   is called immediately after the frame creation. 

      Notice that the default state of newly created top level windows is hidden (to allow you to create their contents without flicker) unlike for all the other, not derived from :ref:`wx.TopLevelWindow`, windows that are by default created in the shown state. 




      :param `show`: If ``True`` displays the window. Otherwise, hides it.  
      :type `show`: bool






      :rtype: `bool`



                  



      :returns: 

         ``True`` if the window has been shown or hidden or ``False`` if nothing was done because it already was in the requested state.  







      .. seealso:: :meth:`IsShown` , :meth:`Hide` , :meth:`wx.RadioBox.Show` , :ref:`wx.ShowEvent`.   








   .. method:: ShowFullScreen(self, show, style)




      :param `show`: 
      :type `show`: bool
      :param `style`: 
      :type `style`: long




      :rtype: `bool`








   .. attribute:: Icon

      See :meth:`~wx.aui.AuiMDIChildFrame.GetIcon` and :meth:`~wx.aui.AuiMDIChildFrame.SetIcon`


   .. attribute:: Icons

      See :meth:`~wx.aui.AuiMDIChildFrame.GetIcons` and :meth:`~wx.aui.AuiMDIChildFrame.SetIcons`


   .. attribute:: MDIParentFrame

      See :meth:`~wx.aui.AuiMDIChildFrame.GetMDIParentFrame` and :meth:`~wx.aui.AuiMDIChildFrame.SetMDIParentFrame`


   .. attribute:: MenuBar

      See :meth:`~wx.aui.AuiMDIChildFrame.GetMenuBar` and :meth:`~wx.aui.AuiMDIChildFrame.SetMenuBar`


   .. attribute:: StatusBar

      See :meth:`~wx.aui.AuiMDIChildFrame.GetStatusBar`


   .. attribute:: Title

      See :meth:`~wx.aui.AuiMDIChildFrame.GetTitle` and :meth:`~wx.aui.AuiMDIChildFrame.SetTitle`


   .. attribute:: ToolBar

      See :meth:`~wx.aui.AuiMDIChildFrame.GetToolBar`

