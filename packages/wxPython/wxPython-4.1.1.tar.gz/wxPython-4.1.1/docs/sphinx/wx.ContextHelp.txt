.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ContextHelp:

==========================================================================================================================================
|phoenix_title|  **wx.ContextHelp**
==========================================================================================================================================

This class changes the cursor to a query and puts the application into a 'context-sensitive help mode'.          

When the user left-clicks on a window within the specified window, a  ``wxEVT_HELP``   event is sent to that control, and the application may respond to it by popping up some help. 

For example: ::

        contextHelp = wx.ContextHelp(myWindow)



There are a couple of ways to invoke this behaviour implicitly: 



- Use the ``wx.DIALOG_EX_CONTEXTHELP`` style for a dialog (Windows only). This will put a question mark in the titlebar, and Windows will put the application into context-sensitive help mode automatically, with further programming. 
- Create a :ref:`wx.ContextHelpButton`, whose predefined behaviour is to create a context help object. Normally you will write your application so that this button is only added to a dialog for non-Windows platforms (use ``wx.DIALOG_EX_CONTEXTHELP`` on Windows). 




Note that on macOS, the cursor does not change when in context-sensitive help mode. 







         



.. seealso:: :ref:`wx.HelpEvent`, :ref:`wx.HelpController`, :ref:`wx.ContextHelpButton`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ContextHelp</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ContextHelp_inheritance.png" alt="Inheritance diagram of ContextHelp" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ContextHelp.html" title="wx.ContextHelp" alt="" coords="5,83,132,112"/> <area shape="rect" id="node2" href="wx.Object.html" title="wx.Object" alt="" coords="25,5,112,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ContextHelp.__init__`                                                 Constructs a context help object, calling :meth:`~ContextHelp.BeginContextHelp`   if `doNow`  is ``True`` (the default).
:meth:`~wx.ContextHelp.BeginContextHelp`                                         Puts the application into context-sensitive help mode.
:meth:`~wx.ContextHelp.EndContextHelp`                                           Ends context-sensitive help mode.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ContextHelp(Object)

   **Possible constructors**::

       ContextHelp(window=None, doNow=True)
       
   
   This class changes the cursor to a query and puts the application into
   a 'context-sensitive help mode'.



   .. method:: __init__(self, window=None, doNow=True)

      Constructs a context help object, calling :meth:`BeginContextHelp`   if `doNow`  is ``True`` (the default).                  

      If `window`  is ``None``, the top window is used.                  


      :param `window`: 
      :type `window`: wx.Window
      :param `doNow`: 
      :type `doNow`: bool







   .. method:: BeginContextHelp(self, window)

      Puts the application into context-sensitive help mode.                  

      `window`  is the window which will be used to catch events; if ``None``, the top window will be used. 

      Returns ``True`` if the application was successfully put into context-sensitive help mode. This function only returns when the event loop has finished.                  


      :param `window`: 
      :type `window`: wx.Window




      :rtype: `bool`








   .. method:: EndContextHelp(self)

      Ends context-sensitive help mode.                  

      Not normally called by the application.                  

      :rtype: `bool`







