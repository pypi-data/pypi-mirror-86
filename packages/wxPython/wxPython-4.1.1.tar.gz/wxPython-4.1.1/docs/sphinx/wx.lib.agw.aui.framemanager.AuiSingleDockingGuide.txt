.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.framemanager

.. highlight:: python



.. _wx.lib.agw.aui.framemanager.AuiSingleDockingGuide:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.framemanager.AuiSingleDockingGuide**
==========================================================================================================================================

A docking guide window for single docking hint (not diamond-shaped HUD). 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiSingleDockingGuide</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.framemanager.AuiSingleDockingGuide_inheritance.png" alt="Inheritance diagram of AuiSingleDockingGuide" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.html" title="wx.lib.agw.aui.framemanager.AuiSingleDockingGuide" alt="" coords="5,624,376,653"/> <area shape="rect" id="node2" href="wx.lib.agw.aui.framemanager.AuiDockingGuide.html" title="wx.lib.agw.aui.framemanager.AuiDockingGuide" alt="" coords="25,547,356,576"/> <area shape="rect" id="node3" href="wx.Frame.html" title="wx.Frame" alt="" coords="148,469,233,499"/> <area shape="rect" id="node4" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="113,392,268,421"/> <area shape="rect" id="node5" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="107,315,275,344"/> <area shape="rect" id="node6" href="wx.Window.html" title="wx.Window" alt="" coords="142,237,239,267"/> <area shape="rect" id="node7" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="126,160,255,189"/> <area shape="rect" id="node8" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="132,83,249,112"/> <area shape="rect" id="node9" href="wx.Object.html" title="wx.Object" alt="" coords="87,5,174,35"/> <area shape="rect" id="node10" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="199,5,305,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.aui.framemanager.AuiDockingGuide`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.__init__`              Default class constructor. Used internally, do not call it in your code!
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.AeroMove`              Moves the docking window to the new position. Overridden in children classes.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.CreateShapesWithStyle` Creates the docking guide window shape based on which docking bitmaps are used.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.HitTest`               Checks if the mouse position is inside the target window rect.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.IsValid`               Returns whether the docking direction is valid.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.SetGuideShape`         Sets the correct shape for the docking guide window.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.SetShape`              If the platform supports it, sets the shape of the window to that depicted by `region`.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.SetValid`              Sets the docking direction as valid or invalid.
:meth:`~wx.lib.agw.aui.framemanager.AuiSingleDockingGuide.UpdateDockGuide`       Updates the docking guide images depending on the mouse position, using focused
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiSingleDockingGuide(AuiDockingGuide)

   A docking guide window for single docking hint (not diamond-shaped HUD). 

   .. method:: __init__(self, parent, direction=0)

      Default class constructor. Used internally, do not call it in your code!
      
      :param `parent`: the :class:`AuiManager` parent;
      :param integer `direction`: one of ``wx.TOP``, ``wx.BOTTOM``, ``wx.LEFT``, ``wx.RIGHT``.


   .. method:: AeroMove(self, pos)

      Moves the docking window to the new position. Overridden in children classes.
      
      :param wx.Point `pos`: the new docking guide position.


   .. method:: CreateShapesWithStyle(self, useWhidbey)

      Creates the docking guide window shape based on which docking bitmaps are used.
      
      :param bool `useWhidbey`: if ``True``, use Whidbey-style bitmaps; if ``False``, use the
       Aero-style bitmaps.
       


   .. method:: HitTest(self, x, y)

      Checks if the mouse position is inside the target window rect.
      
      :param integer `x`: the `x` mouse position;
      :param integer `y`: the `y` mouse position.


   .. method:: IsValid(self)

      Returns whether the docking direction is valid. 


   .. method:: SetGuideShape(self, event=None)

      Sets the correct shape for the docking guide window.
      
      :param `event`: on wxGTK, a :class:`wx.WindowCreateEvent` event to process.


   .. method:: SetShape(self, region)

      If the platform supports it, sets the shape of the window to that depicted by `region`.
      The system will not display or respond to any mouse event for the pixels that lie
      outside of the region. To reset the window to the normal rectangular shape simply call
      :meth:`SetShape` again with an empty region.
      
      :param Region `region`: the shape of the frame.
      
      :note: Overridden for wxMAC.


   .. method:: SetValid(self, valid)

      Sets the docking direction as valid or invalid.
      
      :param bool `valid`: whether the docking direction is allowed or not.


   .. method:: UpdateDockGuide(self, pos)

      Updates the docking guide images depending on the mouse position, using focused
      images if the mouse is inside the docking guide or unfocused images if it is
      outside.
      
      :param wx.Point `pos`: the mouse position.


