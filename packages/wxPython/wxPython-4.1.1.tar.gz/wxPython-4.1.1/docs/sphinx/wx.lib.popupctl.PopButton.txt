.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.popupctl

.. highlight:: python



.. _wx.lib.popupctl.PopButton:

==========================================================================================================================================
|phoenix_title|  **wx.lib.popupctl.PopButton**
==========================================================================================================================================

Control(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, validator=DefaultValidator, name=ControlNameStr)
Control()

This is the base class for a control or "widget".



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PopButton</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.popupctl.PopButton_inheritance.png" alt="Inheritance diagram of PopButton" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.popupctl.PopButton.html" title="wx.lib.popupctl.PopButton" alt="" coords="13,392,205,421"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="63,315,155,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,237,157,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="44,160,173,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Control`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.popupctl.PopButton.__init__`                                      Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.popupctl.PopButton.Notify`                                        
:meth:`~wx.lib.popupctl.PopButton.OnEraseBackground`                             
:meth:`~wx.lib.popupctl.PopButton.OnLeftDown`                                    
:meth:`~wx.lib.popupctl.PopButton.OnLeftUp`                                      
:meth:`~wx.lib.popupctl.PopButton.OnMotion`                                      
:meth:`~wx.lib.popupctl.PopButton.OnPaint`                                       
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PopButton(wx.Control)

   Control(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, validator=DefaultValidator, name=ControlNameStr)
   Control()
   
   This is the base class for a control or "widget".

   .. method:: __init__(self,\*_args,\*\*_kwargs)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: Notify(self)


   .. method:: OnEraseBackground(self, event)


   .. method:: OnLeftDown(self, event)


   .. method:: OnLeftUp(self, event)


   .. method:: OnMotion(self, event)


   .. method:: OnPaint(self, event)


