.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.tools.pywxrc

.. highlight:: python



.. _wx.tools.pywxrc.XmlResourceCompiler:

==========================================================================================================================================
|phoenix_title|  **wx.tools.pywxrc.XmlResourceCompiler**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>XmlResourceCompiler</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.tools.pywxrc.XmlResourceCompiler_inheritance.png" alt="Inheritance diagram of XmlResourceCompiler" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.tools.pywxrc.XmlResourceCompiler.html" title="wx.tools.pywxrc.XmlResourceCompiler" alt="" coords="5,5,281,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.CheckAssignVar`                      
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.ConvertText`                         Encode special characters as escaped C/Python string characters.
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.FileToString`                        
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.FindStringsInNode`                   
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateClasses`                     
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateEventHandlers`               
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateInitResourcesEmbedded`       
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateInitResourcesFile`           
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateMenuBarClass`                
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateMenuClass`                   
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateSubclasses`                  
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateToolBarClass`                
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GenerateWidgetClass`                 
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.GetMemoryFilename`                   
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.MakeGetTextOutput`                   Just output the gettext strings by themselves, with no other
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.MakePythonModule`                    
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.NodeContainsFilename`                Does 'node' contain filename information at all?
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.ReplaceBlocks`                       
:meth:`~wx.tools.pywxrc.XmlResourceCompiler.ReplaceFilenamesInXRC`               Finds all files mentioned in resource file, e.g. <bitmap>filename</bitmap>
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: XmlResourceCompiler:  templates = PythonTemplates()



   .. method:: CheckAssignVar(self, widget)


   .. method:: ConvertText(self, st)

             Encode special characters as escaped C/Python string characters.
      
                 
      => \n
                        => \r
                      => \t
                 \ => \
                 " => "
      
             Returns result as string, which is bytes in py2 or unicode in py3.
             


   .. method:: FileToString(self, filename)


   .. method:: FindStringsInNode(self, parent)


   .. method:: GenerateClasses(self, resourceDocument)


   .. method:: GenerateEventHandlers(self, windowClass, windowName, topWindow, vars)


   .. method:: GenerateInitResourcesEmbedded(self, resourceFilename, resourceDocument)


   .. method:: GenerateInitResourcesFile(self, resourceFilename, resourceDocument)


   .. method:: GenerateMenuBarClass(self, windowClass, windowName, topWindow, vars)


   .. method:: GenerateMenuClass(self, windowClass, windowName, topWindow, vars)


   .. method:: GenerateSubclasses(self, resourceDocument)


   .. method:: GenerateToolBarClass(self, windowClass, windowName, topWindow, vars)


   .. method:: GenerateWidgetClass(self, windowClass, windowName, topWindow, vars)


   .. method:: GetMemoryFilename(self, filename)


   .. method:: MakeGetTextOutput(self, inputFiles, outputFilename)

      Just output the gettext strings by themselves, with no other
      code generation.


   .. method:: MakePythonModule(self, inputFiles, outputFilename, embedResources=False, generateGetText=False, assignVariables=True)


   .. method:: NodeContainsFilename(self, node)

      Does 'node' contain filename information at all? 


   .. method:: ReplaceBlocks(self, input)


   .. method:: ReplaceFilenamesInXRC(self, node, files, resourcePath)

      Finds all files mentioned in resource file, e.g. <bitmap>filename</bitmap>
      and replaces them with the memory filenames.
      
      Fills a list of the filenames found.


