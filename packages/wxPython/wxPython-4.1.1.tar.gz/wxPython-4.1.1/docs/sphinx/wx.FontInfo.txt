.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.FontInfo:

==========================================================================================================================================
|phoenix_title|  **wx.FontInfo**
==========================================================================================================================================

This class is a helper used for :ref:`wx.Font`  creation using named parameter idiom: it allows specifying various :ref:`wx.Font`  attributes using the chained calls to its clearly named methods instead of passing them in the fixed order to :ref:`wx.Font`  constructors.          

For example, to create an italic font with the given face name and size you could use: ::

    font = wx.Font(wx.FontInfo(12).FaceName("Helvetica").Italic())



Notice that all of the methods of this object return a reference to the object itself, allowing the calls to them to be chained as in the example above. 

All methods taking boolean parameters can be used to turn the specified font attribute on or off and turn it on by default. 

         



.. versionadded:: 2.9.5 
     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FontInfo</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.FontInfo_inheritance.png" alt="Inheritance diagram of FontInfo" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.FontInfo.html" title="wx.FontInfo" alt="" coords="5,5,104,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.FontInfo.__init__`                                                    Default constructor uses the default font size for the current platform.
:meth:`~wx.FontInfo.AllFlags`                                                    Set all the font attributes at once.
:meth:`~wx.FontInfo.AntiAliased`                                                 Set anti-aliasing flag.
:meth:`~wx.FontInfo.Bold`                                                        Use a bold version of the font.
:meth:`~wx.FontInfo.Encoding`                                                    Set the font encoding to use.
:meth:`~wx.FontInfo.FaceName`                                                    Set the font face name to use.
:meth:`~wx.FontInfo.Family`                                                      Set the font family.
:meth:`~wx.FontInfo.GetWeightClosestToNumericValue`                              Get the symbolic weight closest to the given raw weight value.
:meth:`~wx.FontInfo.Italic`                                                      Use an italic version of the font.
:meth:`~wx.FontInfo.Light`                                                       Use a lighter version of the font.
:meth:`~wx.FontInfo.Slant`                                                       Use a slanted version of the font.
:meth:`~wx.FontInfo.Strikethrough`                                               Use a strike-through version of the font.
:meth:`~wx.FontInfo.Style`                                                       Specify the style of the font using one of FontStyle constants.
:meth:`~wx.FontInfo.Underlined`                                                  Use an underlined version of the font.
:meth:`~wx.FontInfo.Weight`                                                      Specify the weight of the font.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.FontInfo(object)

   **Possible constructors**::

       FontInfo()
       
       FontInfo(pointSize)
       
       FontInfo(pixelSize)
       
   
   This class is a helper used for Font creation using named parameter
   idiom: it allows specifying various Font attributes using the
   chained calls to its clearly named methods instead of passing them in
   the fixed order to Font constructors.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor uses the default font size for the current platform.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, pointSize)`
      
      Constructor setting the font size in points to use.                  
      
      Note that until wxWidgets 3.1.2 fractional point sizes were not supported, and the type of `pointSize`  was  ``int`` . 
      
                      
      
      
      :param `pointSize`: 
      :type `pointSize`: float
      
      
      
      
      
      
      .. seealso:: :meth:`wx.Font.SetPointSize`     
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, pixelSize)`
      
      Constructor setting the font size in pixels to use.                  
      
                      
      
      
      :param `pixelSize`: 
      :type `pixelSize`: wx.Size
      
      
      
      
      
      
      .. seealso:: :meth:`wx.Font.SetPixelSize`     
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: AllFlags(self, flags)

      Set all the font attributes at once.                  

      See :ref:`wx.FontFlag`  for the various flags that can be used. 

      Note that calling this method affects the font weight stored in this object: it is set to ``FONTWEIGHT_LIGHT``  or ``FONTWEIGHT_BOLD``  if the corresponding flag is present in `flags`, or ``FONTWEIGHT_NORMAL``  otherwise.                  


      :param `flags`: 
      :type `flags`: int




      :rtype: :ref:`wx.FontInfo`








   .. method:: AntiAliased(self, antiAliased=True)

      Set anti-aliasing flag.                  

      Force the use of anti-aliasing on or off. 

      Currently this is not implemented, i.e. using this method doesn't do anything.                  


      :param `antiAliased`: 
      :type `antiAliased`: bool




      :rtype: :ref:`wx.FontInfo`








   .. method:: Bold(self, bold=True)

      Use a bold version of the font.                  

      This is a wrapper for :meth:`Weight`   calling it with ``FONTWEIGHT_BOLD``  argument. 

                


      :param `bold`: 
      :type `bold`: bool




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :ref:`wx.FontWeight`, :meth:`wx.Font.SetWeight`     








   .. method:: Encoding(self, encoding)

      Set the font encoding to use.                  

      This is mostly unneeded in Unicode builds of wxWidgets. 

                


      :param `encoding`: 
      :type `encoding`: wx.FontEncoding




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :ref:`wx.FontEncoding`, :meth:`wx.Font.SetEncoding`     








   .. method:: FaceName(self, faceName)

      Set the font face name to use.                  

      Face names are not portable, so prefer to use :meth:`Family`   in portable code. 

                


      :param `faceName`: 
      :type `faceName`: string




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :meth:`wx.Font.SetFaceName`     








   .. method:: Family(self, family)

      Set the font family.                  

      The family is a generic portable way of referring to fonts without specifying a precise face name. This parameter must be one of the :ref:`wx.FontFamily`  enumeration values. 

      If the :meth:`FaceName`   is used, then it overrides the font family. 

                


      :param `family`: 
      :type `family`: wx.FontFamily




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :meth:`wx.Font.SetFamily`     








   .. staticmethod:: GetWeightClosestToNumericValue(numWeight)

      Get the symbolic weight closest to the given raw weight value.                  




      :param `numWeight`: A valid raw weight value, i.e. a value in the range 1 to 1000, inclusive.   
      :type `numWeight`: int






      :rtype: :ref:`wx.FontWeight`



                  



      :returns: 

         A valid element of FontWeight enum.  







      .. versionadded:: 4.1/wxWidgets-3.1.2  
     








   .. method:: Italic(self, italic=True)

      Use an italic version of the font.                  

      This is a wrapper for :meth:`Style`   calling it with ``FONTSTYLE_ITALIC``  argument. 

                


      :param `italic`: 
      :type `italic`: bool




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :ref:`wx.FontStyle`, :meth:`wx.Font.SetStyle`     








   .. method:: Light(self, light=True)

      Use a lighter version of the font.                  

      This is a wrapper for :meth:`Weight`   calling it with ``FONTWEIGHT_LIGHT``  argument. 

                


      :param `light`: 
      :type `light`: bool




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :ref:`wx.FontWeight`, :meth:`wx.Font.SetWeight`     








   .. method:: Slant(self, slant=True)

      Use a slanted version of the font.                  

      This is a wrapper for :meth:`Style`   calling it with ``FONTSTYLE_SLANT``  argument. 

                


      :param `slant`: 
      :type `slant`: bool




      :rtype: :ref:`wx.FontInfo`







      .. seealso:: :ref:`wx.FontStyle`, :meth:`wx.Font.SetStyle`     








   .. method:: Strikethrough(self, strikethrough=True)

      Use a strike-through version of the font.                  

      Currently this is only implemented in wxMSW, wxGTK, and wxOSX.                  


      :param `strikethrough`: 
      :type `strikethrough`: bool




      :rtype: :ref:`wx.FontInfo`








   .. method:: Style(self, style)

      Specify the style of the font using one of FontStyle constants.                  

                


      :param `style`: 
      :type `style`: wx.FontStyle




      :rtype: :ref:`wx.FontInfo`







      .. versionadded:: 4.1/wxWidgets-3.1.2  
     








   .. method:: Underlined(self, underlined=True)

      Use an underlined version of the font.                  


      :param `underlined`: 
      :type `underlined`: bool




      :rtype: :ref:`wx.FontInfo`








   .. method:: Weight(self, weight)

      Specify the weight of the font.                  




      :param `weight`: A font weight in the range from 1 to 1000, inclusive, with 1 being the thinnest and 1000 the heaviest possible font variant.  ``FONTWEIGHT_XXX``   values from FontWeight enum can be used here.  
      :type `weight`: int






      :rtype: :ref:`wx.FontInfo`



                  



      .. versionadded:: 4.1/wxWidgets-3.1.2  
     







