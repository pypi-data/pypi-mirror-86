.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.AppTraits:

==========================================================================================================================================
|phoenix_title|  **wx.AppTraits**
==========================================================================================================================================

The :ref:`wx.AppTraits`  class defines various configurable aspects of a :ref:`wx.App`.          

You can access it using :meth:`wx.App.GetTraits`   function and you can create your own :ref:`wx.AppTraits`  overriding the :meth:`wx.App.CreateTraits`   function. 

Note that :ref:`wx.AppTraits`  is an abstract class since it contains many pure virtual functions. In fact, by default, wxWidgets creates a  ``ConsoleAppTraits``   object for console applications (i.e. those applications linked against Base library only - see the    page) and a  ``GUIAppTraits``   object for GUI applications. Both these classes are derived by  :ref:`wx.AppTraits`  and represent concrete implementation of the :ref:`wx.AppTraits`  interface. 







         



.. seealso:: :ref:`App Overview <app overview>`, :ref:`wx.App`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AppTraits</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.AppTraits_inheritance.png" alt="Inheritance diagram of AppTraits" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.AppTraits.html" title="wx.AppTraits" alt="" coords="5,5,111,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.AppTraits.CreateConfig`                                               Called by wxWidgets to create the default configuration object for the application.
:meth:`~wx.AppTraits.CreateEventLoop`                                            Used by wxWidgets to create the main event loop used by :meth:`wx.App.OnRun` .
:meth:`~wx.AppTraits.CreateLogTarget`                                            Creates a :ref:`wx.Log`  class for the application to use for logging errors.
:meth:`~wx.AppTraits.GetDesktopEnvironment`                                      This method returns the name of the desktop environment currently running in a Unix desktop.
:meth:`~wx.AppTraits.GetStandardPaths`                                           Returns the :ref:`wx.StandardPaths`  object for the application.
:meth:`~wx.AppTraits.GetToolkitVersion`                                          Returns the wxWidgets port ``ID`` used by the running program and eventually fills the given pointers with the values of the major, minor, and micro digits of the native toolkit currently used.
:meth:`~wx.AppTraits.HasStderr`                                                  Returns ``True`` if  ``fprintf(stderr)``   goes somewhere, ``False`` otherwise.
:meth:`~wx.AppTraits.IsUsingUniversalWidgets`                                    Returns ``True`` if the library was built as wxUniversal.
:meth:`~wx.AppTraits.ShowAssertDialog`                                           Shows the assert dialog with the specified message in GUI mode or just prints the string to stderr in console mode.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.AppTraits.DesktopEnvironment`                                         See :meth:`~wx.AppTraits.GetDesktopEnvironment`
:attr:`~wx.AppTraits.StandardPaths`                                              See :meth:`~wx.AppTraits.GetStandardPaths`
:attr:`~wx.AppTraits.ToolkitVersion`                                             See :meth:`~wx.AppTraits.GetToolkitVersion`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.AppTraits(object)

   The AppTraits class defines various configurable aspects of a App.



   .. method:: CreateConfig(self)

      Called by wxWidgets to create the default configuration object for the application.                  

      The default version creates a registry-based :ref:`RegConfig`  class under MSW and :ref:`wx.FileConfig`  under all other platforms. 

      The :meth:`wx.App.GetAppName`   and :meth:`wx.App.GetVendorName`   methods are used to determine the registry key or file name.                  

      :rtype: :ref:`wx.ConfigBase`








   .. method:: CreateEventLoop(self)

      Used by wxWidgets to create the main event loop used by :meth:`wx.App.OnRun` .                  

      The default implementation of this method in GUIAppTraits returns the usual platform-specific GUI event loop. The version in ConsoleAppTraits returns a console-specific event loop which can be used to handle timer and socket events in console programs under Unix and MSW or ``None`` under the other platforms where console event loops are not supported yet.                  

      :rtype: :ref:`wx.EventLoopBase`








   .. method:: CreateLogTarget(self)

      Creates a :ref:`wx.Log`  class for the application to use for logging errors.                  

      The default implementation returns a new :ref:`wx.LogGui`  class. 

                

      :rtype: :ref:`wx.Log`







      .. seealso:: :ref:`wx.Log`    








   .. method:: GetDesktopEnvironment(self)

      This method returns the name of the desktop environment currently running in a Unix desktop.                  

      Currently only "KDE" or "GNOME" are supported and the code uses the X11 session protocol vendor name to figure out, which desktop environment is running. The method returns an empty string otherwise and on all other platforms.                  

      :rtype: `string`








   .. method:: GetStandardPaths(self)

      Returns the :ref:`wx.StandardPaths`  object for the application.                  

      It's normally the same for Base and GUI except in the case of Mac and Cocoa. 

                

      :rtype: :ref:`wx.StandardPaths`







      .. note:: 

         The returned reference is to a  ``StandardPathsBase``   class but you can consider it to be equivalent to  :ref:`wx.StandardPaths`  (which is documented).   








   .. method:: GetToolkitVersion(self)

      Returns the wxWidgets port ``ID`` used by the running program and eventually fills the given pointers with the values of the major, minor, and micro digits of the native toolkit currently used.                  

      The version numbers returned are thus detected at run-time and not compile-time (except when this is not possible e.g. Motif). 

      E.g. if your program is using wxGTK port this function will return ``wx.PORT_GTK`` and put in given pointers the versions of the GTK library in use. See :ref:`PlatformInfo`  for more details. 

      If a micro version is not available it will have a value of 0.                  

      :rtype: `tuple`







      :returns: 

         ( :ref:`wx.PortId`, `major`, `minor`, `micro` ) 








   .. method:: HasStderr(self)

      Returns ``True`` if  ``fprintf(stderr)``   goes somewhere, ``False`` otherwise.                   

      :rtype: `bool`








   .. method:: IsUsingUniversalWidgets(self)

      Returns ``True`` if the library was built as wxUniversal.                  

      Always returns ``False`` for Base-only apps.                  

      :rtype: `bool`








   .. method:: ShowAssertDialog(self, msg)

      Shows the assert dialog with the specified message in GUI mode or just prints the string to stderr in console mode.                  

      Returns ``True`` to suppress subsequent asserts, ``False`` to continue as before.                  


      :param `msg`: 
      :type `msg`: string




      :rtype: `bool`








   .. attribute:: DesktopEnvironment

      See :meth:`~wx.AppTraits.GetDesktopEnvironment`


   .. attribute:: StandardPaths

      See :meth:`~wx.AppTraits.GetStandardPaths`


   .. attribute:: ToolkitVersion

      See :meth:`~wx.AppTraits.GetToolkitVersion`

