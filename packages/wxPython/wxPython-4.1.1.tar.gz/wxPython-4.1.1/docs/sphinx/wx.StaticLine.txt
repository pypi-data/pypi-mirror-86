.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.StaticLine:

==========================================================================================================================================
|phoenix_title|  **wx.StaticLine**
==========================================================================================================================================

A static line is just a line which may be used in a dialog to separate the groups of controls.          

The line may be only vertical or horizontal. Moreover, not all ports (notably not wxGTK) support specifying the transversal direction of the line (e.g. height for a horizontal line) so for maximal portability you should specify it as DefaultCoord. 





.. _StaticLine-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.LI_HORIZONTAL``: Creates a horizontal line.  
- ``wx.LI_VERTICAL``: Creates a vertical line.  








         



.. seealso:: :ref:`wx.StaticBox`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>StaticLine</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.StaticLine_inheritance.png" alt="Inheritance diagram of StaticLine" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.StaticLine.html" title="wx.StaticLine" alt="" coords="54,315,163,344"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.StaticLine.__init__`                                                  Default constructor.
:meth:`~wx.StaticLine.Create`                                                    Creates the static line for two-step construction.
:meth:`~wx.StaticLine.GetClassDefaultAttributes`                                 
:meth:`~wx.StaticLine.GetDefaultSize`                                            This static function returns the size which will be given to the smaller dimension of the static line, i.e.
:meth:`~wx.StaticLine.IsVertical`                                                Returns ``True`` if the line is vertical, ``False`` if horizontal.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.StaticLine(Control)

   **Possible constructors**::

       StaticLine()
       
       StaticLine(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize,
                  style=LI_HORIZONTAL, name=StaticLineNameStr)
       
   
   A static line is just a line which may be used in a dialog to separate
   the groups of controls.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=LI_HORIZONTAL, name=StaticLineNameStr)`
      
      Constructor, creating and showing a static line.                  
      
      
      
      
      :param `parent`: Parent window. Must not be ``None``.   
      :type `parent`: wx.Window
      :param `id`: Window identifier. The value ``wx.ID_ANY`` indicates a default value.   
      :type `id`: wx.WindowID
      :param `pos`: Window position. If :ref:`wx.DefaultPosition`  is specified then a default position is chosen.   
      :type `pos`: wx.Point
      :param `size`: Size. Note that either the height or the width (depending on whether the line if horizontal or vertical) is ignored.   
      :type `size`: wx.Size
      :param `style`: Window style (either ``wx.LI_HORIZONTAL`` or ``wx.LI_VERTICAL``).   
      :type `style`: long
      :param `name`: Window name.  
      :type `name`: string
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      .. seealso:: :meth:`Create`     
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=LI_HORIZONTAL, name=StaticLineNameStr)

      Creates the static line for two-step construction.                  

      See :ref:`wx.StaticLine`  for further details.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. staticmethod:: GetDefaultSize()

      This static function returns the size which will be given to the smaller dimension of the static line, i.e.                  

      its height for a horizontal line or its width for a vertical one.                  

      :rtype: `int`








   .. method:: IsVertical(self)

      Returns ``True`` if the line is vertical, ``False`` if horizontal.                  

      :rtype: `bool`







