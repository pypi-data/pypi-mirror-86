.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.TipWindow:

==========================================================================================================================================
|phoenix_title|  **wx.TipWindow**
==========================================================================================================================================

Shows simple text in a popup tip window on creation.          

This is used by :ref:`wx.SimpleHelpProvider`  to show popup help. The window automatically destroys itself when the user clicks on it or it loses the focus. 

You may also use this class to emulate the tooltips when you need finer control over them than what the standard tooltips provide. 







         



.. seealso:: :ref:`wx.ToolTip`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TipWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.TipWindow_inheritance.png" alt="Inheritance diagram of TipWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.TipWindow.html" title="wx.TipWindow" alt="" coords="50,237,167,267"/> <area shape="rect" id="node2" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node3" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node5" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.TipWindow.__init__`                                                   Constructor.
:meth:`~wx.TipWindow.GetClassDefaultAttributes`                                  
:meth:`~wx.TipWindow.SetBoundingRect`                                            By default, the tip window disappears when the user clicks the mouse or presses a keyboard key or if it loses focus in any other way - for example because the user switched to another application window.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.TipWindow(Window)

   **Possible constructors**::

       TipWindow(parent, text, maxLength=100)
       
   
   Shows simple text in a popup tip window on creation.



   .. method:: __init__(self, parent, text, maxLength=100)

      Constructor.                  

      The tip is shown immediately after the window is constructed. 




      :param `parent`: The parent window, must be non-NULL   
      :type `parent`: wx.Window
      :param `text`: The text to show, may contain the new line characters   
      :type `text`: string
      :param `maxLength`: The length of each line, in pixels. Set to a very large value to avoid wrapping lines   
      :type `maxLength`: int












                  





   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: SetBoundingRect(self, rectBound)

      By default, the tip window disappears when the user clicks the mouse or presses a keyboard key or if it loses focus in any other way - for example because the user switched to another application window.                  

      Additionally, if a non-empty `rectBound`  is provided, the tip window will also automatically close if the mouse leaves this area. This is useful to dismiss the tip mouse when the mouse leaves the object it is associated with. 




      :param `rectBound`: The bounding rectangle for the mouse in the screen coordinates   
      :type `rectBound`: wx.Rect




                  




