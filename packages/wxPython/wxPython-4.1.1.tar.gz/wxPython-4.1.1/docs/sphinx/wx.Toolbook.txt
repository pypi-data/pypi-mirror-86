.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.Toolbook:

==========================================================================================================================================
|phoenix_title|  **wx.Toolbook**
==========================================================================================================================================

:ref:`wx.Toolbook`  is a class similar to :ref:`wx.Notebook`  but which uses a :ref:`wx.ToolBar`  to show the labels instead of the tabs.          

There is no documentation for this class yet but its usage is identical to :ref:`wx.Notebook`  (except for the features clearly related to tabs only), so please refer to that class documentation for now. You can also use the :ref:`Notebook Sample <notebook sample>`  to see :ref:`wx.Toolbook`  in action. 

One feature of this class not supported by :ref:`wx.BookCtrlBase`  is the support for disabling some of the pages, see :meth:`~wx.Toolbook.EnablePage`. 





.. _Toolbook-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.TBK_BUTTONBAR``: Use ButtonToolBar-based implementation under macOS (ignored under other platforms).  
- ``wx.TBK_HORZ_LAYOUT``: Shows the text and the icons alongside, not vertically stacked (only implement under Windows and GTK 2 platforms as it relies on  ``TB_HORZ_LAYOUT``   flag support).   

The common BookCtrl styles described in the
:ref:`BookCtrl Overview <bookctrl overview>`  are also supported. 







.. _Toolbook-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.BookCtrlEvent` parameter.


- EVT_TOOLBOOK_PAGE_CHANGED: The page selection was changed. Processes a  ``wxEVT_TOOLBOOK_PAGE_CHANGED``   event.   
- EVT_TOOLBOOK_PAGE_CHANGING: The page selection is about to be changed. Processes a  ``wxEVT_TOOLBOOK_PAGE_CHANGING``   event. This event can be vetoed (using  :meth:`wx.NotifyEvent.Veto` ).  








         



.. seealso:: :ref:`BookCtrl Overview <bookctrl overview>`, :ref:`wx.BookCtrlBase`, :ref:`wx.Notebook`, :ref:`Notebook Sample <notebook sample>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Toolbook</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.Toolbook_inheritance.png" alt="Inheritance diagram of Toolbook" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.Toolbook.html" title="wx.Toolbook" alt="" coords="123,392,225,421"/> <area shape="rect" id="node2" href="wx.BookCtrlBase.html" title="wx.BookCtrlBase" alt="" coords="107,315,241,344"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node4" href="wx.WithImages.html" title="wx.WithImages" alt="" coords="179,237,302,267"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.Toolbook.__init__`                                                    Constructs a choicebook control.
:meth:`~wx.Toolbook.Create`                                                      Create the tool book control that has already been constructed with the default constructor.
:meth:`~wx.Toolbook.EnablePage`                                                  Enables or disables the specified page.
:meth:`~wx.Toolbook.GetClassDefaultAttributes`                                   
:meth:`~wx.Toolbook.GetToolBar`                                                  Return the toolbar used for page selection.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.Toolbook.ToolBar`                                                     See :meth:`~wx.Toolbook.GetToolBar`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.Toolbook(BookCtrlBase)

   **Possible constructors**::

       Toolbook()
       
       Toolbook(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize,
                style=0, name=EmptyString)
       
   
   Toolbook is a class similar to Notebook but which uses a ToolBar
   to show the labels instead of the tabs.



   .. method:: __init__(self, *args, **kw)

      Constructs a choicebook control.                   


      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString)`
      
      
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=EmptyString)

      Create the tool book control that has already been constructed with the default constructor.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. method:: EnablePage(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **EnablePage** `(self, page, enable)`
      
      Enables or disables the specified page.                  
      
      Using this function, a page can be disabled when it can't be used, while still remaining present to let the users know that more functionality is available, even if currently inaccessible. 
      
      Icons for disabled pages are created by :meth:`wx.Bitmap.ConvertToDisabled` . 
      
      
      
      
      :param `page`: The index of the page.   
      :type `page`: int
      :param `enable`: ``True`` to enable the page and ``False`` to disable it.  
      :type `enable`: bool
      
      
      
      
      
      
      
      
      :rtype: `bool`
      
      
      
                        
      
      
      
      :returns: 
      
         ``True`` if successful, ``False`` otherwise (currently only if the index is invalid).  
      
      
      
      
      
      
      
      .. versionadded:: 4.1/wxWidgets-3.1.2  
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **EnablePage** `(self, page, enable)`
      
      Enables or disables the specified page.                  
      
      This is similar to the overload above, but finds the index of the specified page. 
      
      
      
      
      :param `page`: Pointer of a page windows inside the book control.   
      :type `page`: wx.Window
      :param `enable`: ``True`` to enable the page and ``False`` to disable it.  
      :type `enable`: bool
      
      
      
      
      
      
      
      
      :rtype: `bool`
      
      
      
                        
      
      
      
      :returns: 
      
         ``True`` if successful, ``False`` otherwise, e.g. if `page`  is not one of the pages of this control.  
      
      
      
      
      
      
      
      .. versionadded:: 4.1/wxWidgets-3.1.2  
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: GetToolBar(self)

      Return the toolbar used for page selection. 

      :rtype: :ref:`wx.ToolBar`








   .. attribute:: ToolBar

      See :meth:`~wx.Toolbook.GetToolBar`

