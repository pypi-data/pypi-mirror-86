.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.gestures

.. highlight:: python



.. _wx.lib.gestures.MouseGestures:

==========================================================================================================================================
|phoenix_title|  **wx.lib.gestures.MouseGestures**
==========================================================================================================================================





|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MouseGestures</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.gestures.MouseGestures_inheritance.png" alt="Inheritance diagram of MouseGestures" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.gestures.MouseGestures.html" title="wx.lib.gestures.MouseGestures" alt="" coords="5,5,231,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.gestures.MouseGestures.__init__`                                  Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.gestures.MouseGestures.AddGesture`                                Registers a gesture, and an associated function, with any arguments needed.
:meth:`~wx.lib.gestures.MouseGestures.DoAction`                                  If the gesture is in the array of registered gestures, run the associated function.
:meth:`~wx.lib.gestures.MouseGestures.End`                                       Stops recording the points to create the mouse gesture from,
:meth:`~wx.lib.gestures.MouseGestures.GetDirection`                              Gets the direction between two points.
:meth:`~wx.lib.gestures.MouseGestures.GetRecording`                              Returns whether or not Gesture Recording has started.
:meth:`~wx.lib.gestures.MouseGestures.OnMotion`                                  Internal.  Used if Start() has been run
:meth:`~wx.lib.gestures.MouseGestures.OnMouseEvent`                              Internal.  Used in Auto Mode.
:meth:`~wx.lib.gestures.MouseGestures.RemoveGesture`                             Removes a gesture, and its associated action
:meth:`~wx.lib.gestures.MouseGestures.SetAuto`                                   Warning:  Once auto is set, it stays set, unless you manually use UnBind
:meth:`~wx.lib.gestures.MouseGestures.SetGesturePen`                             Sets the colour and width of the line drawn to visually represent each gesture
:meth:`~wx.lib.gestures.MouseGestures.SetGesturesVisible`                        Sets whether a line is drawn to visually represent each gesture
:meth:`~wx.lib.gestures.MouseGestures.SetModifiers`                              Takes an array of wx Key constants (Control, Shift, and/or Alt).
:meth:`~wx.lib.gestures.MouseGestures.SetMouseButton`                            Takes the wx constant for the target mousebutton
:meth:`~wx.lib.gestures.MouseGestures.SetWobbleTolerance`                        Sets just how much wobble this class can take!
:meth:`~wx.lib.gestures.MouseGestures.Start`                                     Starts recording the points to create the mouse gesture from
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: MouseGestures:



   .. method:: __init__(self, parent, Auto=True, MouseButton=wx.MOUSE_BTN_MIDDLE)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: AddGesture(self, gesture, action, \*args)

      Registers a gesture, and an associated function, with any arguments needed.


   .. method:: DoAction(self, gesture)

      If the gesture is in the array of registered gestures, run the associated function.


   .. method:: End(self)

      Stops recording the points to create the mouse gesture from,
      and creates the mouse gesture, returns the result as a string.


   .. method:: GetDirection(self, point1, point2)

      Gets the direction between two points.


   .. method:: GetRecording(self)

      Returns whether or not Gesture Recording has started.


   .. method:: OnMotion(self, event)

      Internal.  Used if Start() has been run


   .. method:: OnMouseEvent(self, event)

      Internal.  Used in Auto Mode.


   .. method:: RemoveGesture(self, gesture)

      Removes a gesture, and its associated action


   .. method:: SetAuto(self, auto)

      Warning:  Once auto is set, it stays set, unless you manually use UnBind


   .. method:: SetGesturePen(self, colour, width)

      Sets the colour and width of the line drawn to visually represent each gesture


   .. method:: SetGesturesVisible(self, vis)

      Sets whether a line is drawn to visually represent each gesture


   .. method:: SetModifiers(self, modifiers=[])

      Takes an array of wx Key constants (Control, Shift, and/or Alt).
      Leave empty to unset all modifiers.


   .. method:: SetMouseButton(self, mousebutton)

      Takes the wx constant for the target mousebutton


   .. method:: SetWobbleTolerance(self, wobbletolerance)

      Sets just how much wobble this class can take!


   .. method:: Start(self)

      Starts recording the points to create the mouse gesture from


