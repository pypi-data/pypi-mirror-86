.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. module:: wx.tools.img2py

.. currentmodule:: wx.tools.img2py

.. highlight:: python



.. _wx.tools.img2py:

==========================================================================================================================================
|phoenix_title|  **wx.tools.img2py**
==========================================================================================================================================

img2py.py  --  Convert an image to PNG format and embed it in a Python
               module with appropriate code so it can be loaded into
               a program at runtime.  The benefit is that since it is
               Python source code it can be delivered as a .pyc or
               'compiled' into the program using freeze, py2exe, etc.

Usage:

    img2py.py [options] image_file python_file

Options:

    -m <#rrggbb>   If the original image has a mask or transparency defined
                   it will be used by default.  You can use this option to
                   override the default or provide a new mask by specifying
                   a colour in the image to mark as transparent.

    -n <name>      Normally generic names (getBitmap, etc.) are used for the
                   image access functions.  If you use this option you can
                   specify a name that should be used to customize the access
                   functions, (getNameBitmap, etc.)

    -c             Maintain a catalog of names that can be used to reference
                   images.  Catalog can be accessed via catalog and
                   index attributes of the module.
                   If the -n <name> option is specified then <name>
                   is used for the catalog key and index value, otherwise
                   the filename without any path or extension is used
                   as the key.

    -a             This flag specifies that the python_file should be appended
                   to instead of overwritten.  This in combination with -n will
                   allow you to put multiple images in one Python source file.

    -i             Also output a function to return the image as a wxIcon.

    -f             Generate code compatible with the old function interface.
                   (This option is ON by default in 2.8, use -f to turn off.)

You can also import this module from your Python scripts, and use its img2py()
function. See its docstring for more info.


|function_summary| Functions Summary
====================================

================================================================================ ================================================================================
:func:`~wx.tools.img2py.convert`                                                 
:func:`~wx.tools.img2py.img2py`                                                  Converts an image file to a data structure written in a Python file
:func:`~wx.tools.img2py.main`                                                    
================================================================================ ================================================================================


|



Functions
------------

.. function:: convert(fileName, maskClr, outputDir, outputName, outType, outExt)


.. function:: img2py(image_file, python_file, append=DEFAULT_APPEND, compressed=DEFAULT_COMPRESSED, maskClr=DEFAULT_MASKCLR, imgName=DEFAULT_IMGNAME, icon=DEFAULT_ICON, catalog=DEFAULT_CATALOG, functionCompatible=DEFAULT_COMPATIBLE, functionCompatibile=-1, )

   Converts an image file to a data structure written in a Python file
   --image_file: string; the path of the source image file
   --python_file: string; the path of the destination python file
   --other arguments: they are equivalent to the command-line arguments


.. function:: main(args=None)


