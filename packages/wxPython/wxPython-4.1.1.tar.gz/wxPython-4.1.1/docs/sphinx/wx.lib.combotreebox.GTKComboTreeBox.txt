.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.combotreebox

.. highlight:: python



.. _wx.lib.combotreebox.GTKComboTreeBox:

==========================================================================================================================================
|phoenix_title|  **wx.lib.combotreebox.GTKComboTreeBox**
==========================================================================================================================================

The ComboTreeBox widget for wxGTK. This is actually a work
around because on wxGTK, there doesn't seem to be a way to intercept
mouse events sent to the Combobox. Intercepting those events is
necessary to prevent the Combobox from popping up the list and pop up
the tree instead. So, until wxPython makes intercepting those events
possible we build a poor man's Combobox ourselves using a TextCtrl and
a BitmapButton.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GTKComboTreeBox</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.combotreebox.GTKComboTreeBox_inheritance.png" alt="Inheritance diagram of GTKComboTreeBox" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.combotreebox.GTKComboTreeBox.html" title="wx.lib.combotreebox.GTKComboTreeBox" alt="" coords="114,392,401,421"/> <area shape="rect" id="node2" href="wx.lib.combotreebox.BaseComboTreeBox.html" title="wx.lib.combotreebox.BaseComboTreeBox" alt="" coords="5,315,299,344"/> <area shape="rect" id="node3" href="wx.Panel.html" title="wx.Panel" alt="" coords="323,315,403,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="314,237,411,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="298,160,427,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="304,83,421,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="259,5,346,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="371,5,477,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`, :class:`wx.lib.combotreebox.BaseComboTreeBox`

|


|api| Class API
===============


.. class:: GTKComboTreeBox(BaseComboTreeBox, wx.Panel)

   The ComboTreeBox widget for wxGTK. This is actually a work
   around because on wxGTK, there doesn't seem to be a way to intercept
   mouse events sent to the Combobox. Intercepting those events is
   necessary to prevent the Combobox from popping up the list and pop up
   the tree instead. So, until wxPython makes intercepting those events
   possible we build a poor man's Combobox ourselves using a TextCtrl and
   a BitmapButton.

