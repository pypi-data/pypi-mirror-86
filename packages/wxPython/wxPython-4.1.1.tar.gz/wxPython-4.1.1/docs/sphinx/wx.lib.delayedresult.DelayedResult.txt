.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.delayedresult

.. highlight:: python



.. _wx.lib.delayedresult.DelayedResult:

==========================================================================================================================================
|phoenix_title|  **wx.lib.delayedresult.DelayedResult**
==========================================================================================================================================

Represent the actual delayed result coming from the non-main thread.
An instance of this is given to the result handler. This result is
either a (reference to a) the value sent, or an exception.
If the latter, the exception is raised when the get() method gets
called.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DelayedResult</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.delayedresult.DelayedResult_inheritance.png" alt="Inheritance diagram of DelayedResult" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.delayedresult.DelayedResult.html" title="wx.lib.delayedresult.DelayedResult" alt="" coords="5,5,257,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.delayedresult.DelayedResult.__init__`                             You should never have to call this yourself. A DelayedResult
:meth:`~wx.lib.delayedresult.DelayedResult.get`                                  Get the result. If an exception was sent instead of a result,
:meth:`~wx.lib.delayedresult.DelayedResult.getJobID`                             Return the jobID given when Sender initialized,
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DelayedResult

   Represent the actual delayed result coming from the non-main thread.
   An instance of this is given to the result handler. This result is
   either a (reference to a) the value sent, or an exception.
   If the latter, the exception is raised when the get() method gets
   called.

   .. method:: __init__(self, result, jobID=None, exception = None, originalTb = None)

      You should never have to call this yourself. A DelayedResult
      is created by a concrete Sender for you.


   .. method:: get(self)

      Get the result. If an exception was sent instead of a result,
      (via Sender's sendExcept()), that **exception is raised**, and
      the original traceback is available as the 'originalTraceback'
      variable in the exception object.
      
      Otherwise, the result is simply returned.


   .. method:: getJobID(self)

      Return the jobID given when Sender initialized,
      or None if none given. 


