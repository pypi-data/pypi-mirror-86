.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.flatmenu

.. highlight:: python



.. _wx.lib.agw.flatmenu.MenuEntryInfo:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.flatmenu.MenuEntryInfo**
==========================================================================================================================================

Internal class which holds information about a menu.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MenuEntryInfo</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.flatmenu.MenuEntryInfo_inheritance.png" alt="Inheritance diagram of MenuEntryInfo" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.flatmenu.MenuEntryInfo.html" title="wx.lib.agw.flatmenu.MenuEntryInfo" alt="" coords="5,5,256,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.__init__`                              Default class constructor.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetCmdId`                              Returns the associated menu accelerator identifier.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetMenu`                               Returns the associated menu.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetRect`                               Returns the associated menu client rectangle.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetSelectedTextBitmap`                 Returns the associated selected menu bitmap.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetState`                              Returns the associated menu state.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetTextBitmap`                         Returns the associated menu bitmap.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.GetTitle`                              Returns the associated menu title.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.SetRect`                               Sets the associated menu client rectangle.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.SetSelectedTextBitmap`                 Sets the associated selected menu bitmap.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.SetState`                              Sets the associated menu state.
:meth:`~wx.lib.agw.flatmenu.MenuEntryInfo.SetTextBitmap`                         Sets the associated menu bitmap.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: MenuEntryInfo(object)

   Internal class which holds information about a menu.

   .. method:: __init__(self, titleOrMenu="", menu=None, state=ControlNormal, cmd=wx.ID_ANY)

      Default class constructor.
      
      Used internally. Do not call it in your code!
      
      :param `titleOrMenu`: if it is a string, it represents the new menu label,
       otherwise it is another instance of :class:`wx.MenuEntryInfo` from which the attributes
       are copied;
      :param `menu`: the associated :class:`FlatMenu` object;
      :param integer `state`: the menu item state. This can be one of the following:
      
       ==================== ======= ==========================
       Item State            Value  Description
       ==================== ======= ==========================
       ``ControlPressed``         0 The item is pressed
       ``ControlFocus``           1 The item is focused
       ``ControlDisabled``        2 The item is disabled
       ``ControlNormal``          3 Normal state
       ==================== ======= ==========================
      
      :param integer `cmd`: the menu accelerator identifier.


   .. method:: GetCmdId(self)

      Returns the associated menu accelerator identifier. 


   .. method:: GetMenu(self)

      Returns the associated menu. 


   .. method:: GetRect(self)

      Returns the associated menu client rectangle. 


   .. method:: GetSelectedTextBitmap(self)

      Returns the associated selected menu bitmap. 


   .. method:: GetState(self)

      Returns the associated menu state.
      
      :see: :meth:`~MenuEntryInfo.SetState` for a list of valid menu states.


   .. method:: GetTextBitmap(self)

      Returns the associated menu bitmap. 


   .. method:: GetTitle(self)

      Returns the associated menu title. 


   .. method:: SetRect(self, rect)

      Sets the associated menu client rectangle.
      
      :param `rect`: an instance of :class:`wx.Rect`, representing the menu client rectangle.


   .. method:: SetSelectedTextBitmap(self, bmp)

      Sets the associated selected menu bitmap.
      
      :param `bmp`: a valid :class:`wx.Bitmap` object.


   .. method:: SetState(self, state)

      Sets the associated menu state.
      
      :param integer `state`: the menu item state. This can be one of the following:
      
       ==================== ======= ==========================
       Item State            Value  Description
       ==================== ======= ==========================
       ``ControlPressed``         0 The item is pressed
       ``ControlFocus``           1 The item is focused
       ``ControlDisabled``        2 The item is disabled
       ``ControlNormal``          3 Normal state
       ==================== ======= ==========================


   .. method:: SetTextBitmap(self, bmp)

      Sets the associated menu bitmap.
      
      :param `bmp`: a valid :class:`wx.Bitmap` object.


