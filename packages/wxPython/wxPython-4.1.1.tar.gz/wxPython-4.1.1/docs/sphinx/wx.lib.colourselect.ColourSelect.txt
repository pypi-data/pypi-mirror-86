.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.colourselect

.. highlight:: python



.. _wx.lib.colourselect.ColourSelect:

==========================================================================================================================================
|phoenix_title|  **wx.lib.colourselect.ColourSelect**
==========================================================================================================================================

A subclass of :class:`wx.lib.buttons.GenBitmapButton` that,
when clicked, will display a colour selection dialog.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ColourSelect</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.colourselect.ColourSelect_inheritance.png" alt="Inheritance diagram of ColourSelect" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.colourselect.ColourSelect.html" title="wx.lib.colourselect.ColourSelect" alt="" coords="7,547,238,576"/> <area shape="rect" id="node2" href="wx.lib.buttons.GenBitmapButton.html" title="wx.lib.buttons.GenBitmapButton" alt="" coords="5,469,240,499"/> <area shape="rect" id="node3" href="wx.lib.buttons.GenButton.html" title="wx.lib.buttons.GenButton" alt="" coords="29,392,216,421"/> <area shape="rect" id="node4" href="wx.Control.html" title="wx.Control" alt="" coords="77,315,169,344"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="74,237,171,267"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="58,160,187,189"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="64,83,181,112"/> <area shape="rect" id="node8" href="wx.Object.html" title="wx.Object" alt="" coords="19,5,106,35"/> <area shape="rect" id="node9" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="131,5,237,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.buttons.GenBitmapButton`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.colourselect.ColourSelect.__init__`                               Default class constructor.
:meth:`~wx.lib.colourselect.ColourSelect.GetColour`                              Returns the current colour set for the :class:`ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.GetCustomColours`                       Returns the current set of custom colour values to be shown in the
:meth:`~wx.lib.colourselect.ColourSelect.GetLabel`                               Returns the current text label for the :class:`ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.GetValue`                               Returns the current colour set for the :class:`ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.MakeBitmap`                             Creates a bitmap representation of the current selected colour.
:meth:`~wx.lib.colourselect.ColourSelect.OnChange`                               Fires the ``EVT_COLOURSELECT`` event, as the user has changed the current colour.
:meth:`~wx.lib.colourselect.ColourSelect.OnClick`                                Handles the ``wx.EVT_BUTTON`` event for :class:`ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.SetBitmap`                              Sets the bitmap representation of the current selected colour to the button.
:meth:`~wx.lib.colourselect.ColourSelect.SetColour`                              Sets the current colour for :class:`ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.SetCustomColours`                       Sets the list of custom colour values to be shown in colour dialog, if
:meth:`~wx.lib.colourselect.ColourSelect.SetLabel`                               Sets the new text label for :class:`wx.ColourSelect`.
:meth:`~wx.lib.colourselect.ColourSelect.SetValue`                               Sets the current colour for :class:`ColourSelect`.  Same as
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.lib.colourselect.ColourSelect.Colour`                                 Returns the current colour set for the :class:`ColourSelect`.
:attr:`~wx.lib.colourselect.ColourSelect.CustomColours`                          Returns the current set of custom colour values to be shown in the
:attr:`~wx.lib.colourselect.ColourSelect.Label`                                  Returns the current text label for the :class:`ColourSelect`.
:attr:`~wx.lib.colourselect.ColourSelect.Value`                                  Returns the current colour set for the :class:`ColourSelect`.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ColourSelect(wx.lib.buttons.GenBitmapButton)

   A subclass of :class:`wx.lib.buttons.GenBitmapButton` that,
   when clicked, will display a colour selection dialog.

   .. method:: __init__(self, parent, id=wx.ID_ANY, label="", colour=wx.BLACK, pos=wx.DefaultPosition, size=wx.DefaultSize, callback=None, style=0)

      Default class constructor.
      
      :param wx.Window `parent`: parent window. Must not be ``None``;
      :param integer `id`: window identifier. A value of -1 indicates a default value;
      :param string `label`: the button text label;
      :param wx.Colour: a valid :class:`wx.Colour` instance, which will be the default initial
       colour for this button;
      :type `colour`: :class:`wx.Colour` or tuple
      :param `pos`: the control position. A value of (-1, -1) indicates a default position,
       chosen by either the windowing system or wxPython, depending on platform;
      :type `pos`: tuple or :class:`wx.Point`
      :param `size`: the control size. A value of (-1, -1) indicates a default size,
       chosen by either the windowing system or wxPython, depending on platform;
      :type `size`: tuple or :class:`wx.Size`
      :param PyObject `callback`: a callable method/function that will be called every time
       the user chooses a new colour;
      :param integer `style`: the button style.


   .. method:: GetColour(self)

      Returns the current colour set for the :class:`ColourSelect`.
      
      :rtype: :class:`wx.Colour`


   .. method:: GetCustomColours(self)

      Returns the current set of custom colour values to be shown in the
      colour dialog, if supported.
      
      :rtype: :class:`CustomColourData`


   .. method:: GetLabel(self)

      Returns the current text label for the :class:`ColourSelect`.
      
      :rtype: string


   .. method:: GetValue(self)

      Returns the current colour set for the :class:`ColourSelect`.
      Same as :meth:`~ColourSelect.GetColour`.
      
      :rtype: :class:`wx.Colour`


   .. method:: MakeBitmap(self)

      Creates a bitmap representation of the current selected colour. 


   .. method:: OnChange(self)

      Fires the ``EVT_COLOURSELECT`` event, as the user has changed the current colour. 


   .. method:: OnClick(self, event)

      Handles the ``wx.EVT_BUTTON`` event for :class:`ColourSelect`.
      
      :param `event`: a :class:`wx.CommandEvent` event to be processed.


   .. method:: SetBitmap(self, bmp)

      Sets the bitmap representation of the current selected colour to the button.
      
      :param wx.Bitmap `bmp`: the new bitmap.


   .. method:: SetColour(self, colour)

      Sets the current colour for :class:`ColourSelect`.
      
      :param `colour`: the new colour for :class:`ColourSelect`.
      :type `colour`: tuple or string or :class:`wx.Colour`


   .. method:: SetCustomColours(self, colours)

      Sets the list of custom colour values to be shown in colour dialog, if
      supported.
      
      :param `colours`: An instance of :class:`CustomColourData` or a 16
      element list of ``None`` or :class:`wx.Colour` values.


   .. method:: SetLabel(self, label)

      Sets the new text label for :class:`wx.ColourSelect`.
      
      :param string `label`: the new text label for :class:`ColourSelect`.


   .. method:: SetValue(self, colour)

      Sets the current colour for :class:`ColourSelect`.  Same as
      :meth:`~ColourSelect.SetColour`.
      
      :param `colour`: the new colour for :class:`ColourSelect`.
      :type `colour`: tuple or string or :class:`wx.Colour`


   .. attribute:: Colour

      Returns the current colour set for the :class:`ColourSelect`.
      
      :rtype: :class:`wx.Colour`


   .. attribute:: CustomColours

      Returns the current set of custom colour values to be shown in the
      colour dialog, if supported.
      
      :rtype: :class:`CustomColourData`


   .. attribute:: Label

      Returns the current text label for the :class:`ColourSelect`.
      
      :rtype: string


   .. attribute:: Value

      Returns the current colour set for the :class:`ColourSelect`.
      Same as :meth:`~ColourSelect.GetColour`.
      
      :rtype: :class:`wx.Colour`


