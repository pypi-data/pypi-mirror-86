.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.adv.CalculateLayoutEvent:

==========================================================================================================================================
|phoenix_title|  **wx.adv.CalculateLayoutEvent**
==========================================================================================================================================

This event is sent by :ref:`wx.adv.LayoutAlgorithm`  to calculate the amount of the remaining client area that the window should occupy.          







.. _CalculateLayoutEvent-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.adv.CalculateLayoutEvent` parameter.

Event macros: 

- EVT_CALCULATE_LAYOUT: Process a  ``wxEVT_CALCULATE_LAYOUT``   event, which asks the window to take a 'bite' out of a rectangle provided by the algorithm.   








         



.. seealso:: :ref:`wx.adv.QueryLayoutInfoEvent`, :ref:`wx.adv.SashLayoutWindow`, :ref:`wx.adv.LayoutAlgorithm`.   







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>CalculateLayoutEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.adv.CalculateLayoutEvent_inheritance.png" alt="Inheritance diagram of CalculateLayoutEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.adv.CalculateLayoutEvent.html" title="wx.adv.CalculateLayoutEvent" alt="" coords="5,160,220,189"/> <area shape="rect" id="node2" href="wx.Event.html" title="wx.Event" alt="" coords="71,83,154,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="69,5,156,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.adv.CalculateLayoutEvent.__init__`                                    Constructor.
:meth:`~wx.adv.CalculateLayoutEvent.GetFlags`                                    Returns the flags associated with this event.
:meth:`~wx.adv.CalculateLayoutEvent.GetRect`                                     Before the event handler is entered, returns the remaining parent client area that the window could occupy.
:meth:`~wx.adv.CalculateLayoutEvent.SetFlags`                                    Sets the flags associated with this event.
:meth:`~wx.adv.CalculateLayoutEvent.SetRect`                                     Call this to specify the new remaining parent client area, after the space occupied by the window has been subtracted.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.adv.CalculateLayoutEvent.Flags`                                       See :meth:`~wx.adv.CalculateLayoutEvent.GetFlags` and :meth:`~wx.adv.CalculateLayoutEvent.SetFlags`
:attr:`~wx.adv.CalculateLayoutEvent.Rect`                                        See :meth:`~wx.adv.CalculateLayoutEvent.GetRect` and :meth:`~wx.adv.CalculateLayoutEvent.SetRect`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.adv.CalculateLayoutEvent(Event)

   **Possible constructors**::

       CalculateLayoutEvent(id=0)
       
   
   This event is sent by LayoutAlgorithm to calculate the amount of the
   remaining client area that the window should occupy.



   .. method:: __init__(self, id=0)

      Constructor.                  


      :param `id`: 
      :type `id`: wx.WindowID







   .. method:: GetFlags(self)

      Returns the flags associated with this event.                  

      Not currently used.                  

      :rtype: `int`








   .. method:: GetRect(self)

      Before the event handler is entered, returns the remaining parent client area that the window could occupy.                  

      When the event handler returns, this should contain the remaining parent client rectangle, after the event handler has subtracted the area that its window occupies.                  

      :rtype: :ref:`Rect`








   .. method:: SetFlags(self, flags)

      Sets the flags associated with this event.                  

      Not currently used.                  


      :param `flags`: 
      :type `flags`: int







   .. method:: SetRect(self, rect)

      Call this to specify the new remaining parent client area, after the space occupied by the window has been subtracted.                  


      :param `rect`: 
      :type `rect`: wx.Rect







   .. attribute:: Flags

      See :meth:`~wx.adv.CalculateLayoutEvent.GetFlags` and :meth:`~wx.adv.CalculateLayoutEvent.SetFlags`


   .. attribute:: Rect

      See :meth:`~wx.adv.CalculateLayoutEvent.GetRect` and :meth:`~wx.adv.CalculateLayoutEvent.SetRect`

