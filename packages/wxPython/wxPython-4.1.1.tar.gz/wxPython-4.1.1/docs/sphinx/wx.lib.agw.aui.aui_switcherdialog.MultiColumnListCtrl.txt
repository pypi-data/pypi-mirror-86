.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.aui_switcherdialog

.. highlight:: python



.. _wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl**
==========================================================================================================================================

A control for displaying several columns (not scrollable). 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MultiColumnListCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl_inheritance.png" alt="Inheritance diagram of MultiColumnListCtrl" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.html" title="wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl" alt="" coords="5,392,379,421"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="146,315,238,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="143,237,241,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="127,160,257,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="133,83,251,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="89,5,175,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="200,5,307,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Control`

|


|method_summary| Methods Summary
================================

========================================================================================== ================================================================================
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.__init__`                    Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.AdvanceToNextSelectableItem` 
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.CalculateLayout`             
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.DoGetBestSize`               DoGetBestSize(self) -> Size
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.GenerateSelectionEvent`      
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.GetExtraNavigationKey`       
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.GetItems`                    
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.GetModifierKey`              
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.OnChar`                      
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.OnEraseBackground`           
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.OnKey`                       
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.OnMouseEvent`                
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.OnPaint`                     
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.SetExtraNavigationKey`       Set an extra key that can be used to cycle through items,
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.SetItems`                    
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.SetModifierKey`              Set the modifier used to invoke the dialog, and therefore to test for release.
:meth:`~wx.lib.agw.aui.aui_switcherdialog.MultiColumnListCtrl.SetTransparency`             
========================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: MultiColumnListCtrl(wx.Control)

   A control for displaying several columns (not scrollable). 

   .. method:: __init__(self, parent, aui_manager, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, validator=wx.DefaultValidator, name="MultiColumnListCtrl")

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: AdvanceToNextSelectableItem(self, direction)


   .. method:: CalculateLayout(self, dc=None)


   .. method:: DoGetBestSize(self)

      DoGetBestSize(self) -> Size


   .. method:: GenerateSelectionEvent(self)


   .. method:: GetExtraNavigationKey(self)


   .. method:: GetItems(self)


   .. method:: GetModifierKey(self)


   .. method:: OnChar(self, event)


   .. method:: OnEraseBackground(self, event)


   .. method:: OnKey(self, event)


   .. method:: OnMouseEvent(self, event)


   .. method:: OnPaint(self, event)


   .. method:: SetExtraNavigationKey(self, keyCode)

      Set an extra key that can be used to cycle through items,
      in case not using the ``Ctrl`` + ``Tab`` combination.


   .. method:: SetItems(self, items)


   .. method:: SetModifierKey(self, modifierKey)

      Set the modifier used to invoke the dialog, and therefore to test for release.


   .. method:: SetTransparency(self, selection=None)


