.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.grid.GridCellDateTimeRenderer:

==========================================================================================================================================
|phoenix_title|  **wx.grid.GridCellDateTimeRenderer**
==========================================================================================================================================

This class may be used to format a date/time data in a cell.          

The class :ref:`wx.DateTime`  is used internally to display the local date/time or to parse the string date entered in the cell thanks to the defined format. 







         



.. seealso:: :ref:`wx.grid.GridCellRenderer`, :ref:`wx.grid.GridCellAutoWrapStringRenderer`, :ref:`wx.grid.GridCellBoolRenderer`, :ref:`wx.grid.GridCellEnumRenderer`, :ref:`wx.grid.GridCellFloatRenderer`, :ref:`wx.grid.GridCellNumberRenderer`, :ref:`wx.grid.GridCellStringRenderer`, :ref:`wx.grid.GridCellDateRenderer`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridCellDateTimeRenderer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.grid.GridCellDateTimeRenderer_inheritance.png" alt="Inheritance diagram of GridCellDateTimeRenderer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.grid.GridCellDateTimeRenderer.html" title="wx.grid.GridCellDateTimeRenderer" alt="" coords="55,315,303,344"/> <area shape="rect" id="node2" href="wx.grid.GridCellDateRenderer.html" title="wx.grid.GridCellDateRenderer" alt="" coords="72,237,287,267"/> <area shape="rect" id="node3" href="wx.grid.GridCellStringRenderer.html" title="wx.grid.GridCellStringRenderer" alt="" coords="68,160,291,189"/> <area shape="rect" id="node4" href="wx.grid.GridCellRenderer.html" title="wx.grid.GridCellRenderer" alt="" coords="87,83,271,112"/> <area shape="rect" id="node5" href="wx.ClientDataContainer.html" title="wx.ClientDataContainer" alt="" coords="5,5,183,35"/> <area shape="rect" id="node6" href="wx.RefCounter.html" title="wx.RefCounter" alt="" coords="207,5,325,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.grid.GridCellDateTimeRenderer.__init__`                               Date/time renderer constructor.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.grid.GridCellDateTimeRenderer(GridCellDateRenderer)

   **Possible constructors**::

       GridCellDateTimeRenderer(outformat=DefaultDateTimeFormat,
                                informat=DefaultDateTimeFormat)
       
   
   This class may be used to format a date/time data in a cell.



   .. method:: __init__(self, outformat=DefaultDateTimeFormat, informat=DefaultDateTimeFormat)

      Date/time renderer constructor.                  




      :param `outformat`: strptime()-like format string used the parse the output date/time.   
      :type `outformat`: string
      :param `informat`: strptime()-like format string used to parse the string entered in the cell.   
      :type `informat`: string






                  




