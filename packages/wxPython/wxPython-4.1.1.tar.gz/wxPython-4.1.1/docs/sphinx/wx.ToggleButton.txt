.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ToggleButton:

==========================================================================================================================================
|phoenix_title|  **wx.ToggleButton**
==========================================================================================================================================

:ref:`wx.ToggleButton`  is a button that stays pressed when clicked by the user.          

In other words, it is similar to :ref:`wx.CheckBox`  in functionality but looks like a :ref:`wx.Button`. 

Since wxWidgets version 2.9.0 this control emits an update UI event. 

You can see :ref:`wx.ToggleButton`  in action in :ref:`Widgets Sample <widgets sample>`. 







.. _ToggleButton-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.CommandEvent` parameter.


- EVT_TOGGLEBUTTON: Handles a wxEVT_TOGGLEBUTTON event.  








         



.. seealso:: :ref:`wx.CheckBox`, :ref:`wx.Button`, :ref:`wx.BitmapToggleButton`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ToggleButton</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ToggleButton_inheritance.png" alt="Inheritance diagram of ToggleButton" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ToggleButton.html" title="wx.ToggleButton" alt="" coords="43,392,174,421"/> <area shape="rect" id="node2" href="wx.AnyButton.html" title="wx.AnyButton" alt="" coords="52,315,165,344"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.togglebutton.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/wx.togglebutton.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.togglebutton.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|


|sub_classes| Known Subclasses
==============================

:ref:`wx.BitmapToggleButton`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ToggleButton.__init__`                                                Default constructor.
:meth:`~wx.ToggleButton.Create`                                                  Creates the toggle button for two-step construction.
:meth:`~wx.ToggleButton.GetClassDefaultAttributes`                               
:meth:`~wx.ToggleButton.GetValue`                                                Gets the state of the toggle button.
:meth:`~wx.ToggleButton.SetValue`                                                Sets the toggle button to the given state.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.ToggleButton.Value`                                                   See :meth:`~wx.ToggleButton.GetValue` and :meth:`~wx.ToggleButton.SetValue`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ToggleButton(AnyButton)

   **Possible constructors**::

       ToggleButton()
       
       ToggleButton(parent, id=ID_ANY, label=EmptyString, pos=DefaultPosition,
                    size=DefaultSize, style=0, val=DefaultValidator, name=CheckBoxNameStr)
       
   
   ToggleButton is a button that stays pressed when clicked by the
   user.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, label=EmptyString, pos=DefaultPosition, size=DefaultSize, style=0, val=DefaultValidator, name=CheckBoxNameStr)`
      
      Constructor, creating and showing a toggle button.                  
      
      
      
      
      :param `parent`: Parent window. Must not be ``None``.   
      :type `parent`: wx.Window
      :param `id`: Toggle button identifier. The value ``wx.ID_ANY`` indicates a default value.   
      :type `id`: wx.WindowID
      :param `label`: Text to be displayed next to the toggle button.   
      :type `label`: string
      :param `pos`: Toggle button position. If :ref:`wx.DefaultPosition`  is specified then a default position is chosen.   
      :type `pos`: wx.Point
      :param `size`: Toggle button size. If :ref:`wx.DefaultSize`  is specified then a default size is chosen.   
      :type `size`: wx.Size
      :param `style`: Window style. See :ref:`wx.ToggleButton`.   
      :type `style`: long
      :param `val`: Window validator.   
      :type `val`: wx.Validator
      :param `name`: Window name.  
      :type `name`: string
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      .. seealso:: :meth:`Create` , :ref:`wx.Validator`    
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, label=EmptyString, pos=DefaultPosition, size=DefaultSize, style=0, val=DefaultValidator, name=CheckBoxNameStr)

      Creates the toggle button for two-step construction.                  

      See :ref:`wx.ToggleButton`  for details.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `label`: 
      :type `label`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `val`: 
      :type `val`: wx.Validator
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: GetValue(self)

      Gets the state of the toggle button.                  

                

      :rtype: `bool`







      :returns: 

         Returns ``True`` if it is pressed, ``False`` otherwise.   








   .. method:: SetValue(self, state)

      Sets the toggle button to the given state.                  

      This does not cause a  ``EVT_TOGGLEBUTTON``   event to be emitted. 




      :param `state`: If ``True``, the button is pressed.   
      :type `state`: bool




                  





   .. attribute:: Value

      See :meth:`~wx.ToggleButton.GetValue` and :meth:`~wx.ToggleButton.SetValue`

