.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pubsub.core.topicdefnprovider

.. highlight:: python



.. _wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter**
==========================================================================================================================================

Helper class to print the topic tree using the Python class
syntax. The "printout" can be sent to any file object (object that has a
write() method). If printed to a module, the module can be imported and
given to pub.addTopicDefnProvider(module, 'module'). Importing the module
also provides code completion of topic names (rootTopic.subTopic can be
given to any pubsub function requiring a topic name).



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TopicTreeSpecPrinter</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter_inheritance.png" alt="Inheritance diagram of TopicTreeSpecPrinter" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter.html" title="wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter" alt="" coords="5,5,405,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter.__init__`      For formatting, can specify the width of output, the indent step, the
:meth:`~wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter.getOutput`     Each line that was sent to fileObj was saved in a list; returns a
:meth:`~wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter.writeAll`      Traverse each topic of topic tree, starting at topicObj, printing
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: TopicTreeSpecPrinter

   Helper class to print the topic tree using the Python class
   syntax. The "printout" can be sent to any file object (object that has a
   write() method). If printed to a module, the module can be imported and
   given to pub.addTopicDefnProvider(module, 'module'). Importing the module
   also provides code completion of topic names (rootTopic.subTopic can be
   given to any pubsub function requiring a topic name).

   .. method:: __init__(self, rootTopic=None, fileObj=None, width=70, indentStep=4, treeDoc = defaultTopicTreeSpecHeader, footer = defaultTopicTreeSpecFooter)

      For formatting, can specify the width of output, the indent step, the
      header and footer to print to override defaults. The destination is fileObj;
      if none is given, then sys.stdout is used. If rootTopic is given, calls
      writeAll(rootTopic) at end of __init__.


   .. method:: getOutput(self)

      Each line that was sent to fileObj was saved in a list; returns a
      string which is ``'\n'.join(list)``.


   .. method:: writeAll(self, topicObj)

      Traverse each topic of topic tree, starting at topicObj, printing
      each topic definition as the tree gets traversed. 


