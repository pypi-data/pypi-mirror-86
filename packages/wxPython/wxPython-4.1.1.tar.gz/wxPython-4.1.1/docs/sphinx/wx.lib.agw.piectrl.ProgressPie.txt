.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.piectrl

.. highlight:: python



.. _wx.lib.agw.piectrl.ProgressPie:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.piectrl.ProgressPie**
==========================================================================================================================================

:class:`ProgressPie` tries to emulate the behavior of :class:`ProgressDialog`, but
using a pie chart instead of a gauge.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ProgressPie</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.piectrl.ProgressPie_inheritance.png" alt="Inheritance diagram of ProgressPie" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.piectrl.ProgressPie.html" title="wx.lib.agw.piectrl.ProgressPie" alt="" coords="5,392,221,421"/> <area shape="rect" id="node2" href="wx.lib.agw.piectrl.PieCtrl.html" title="wx.lib.agw.piectrl.PieCtrl" alt="" coords="22,315,205,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="65,237,162,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="49,160,178,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="55,83,172,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="10,5,97,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="121,5,228,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.lib.agw.piectrl.progresspie.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/../no_appearance.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.lib.agw.piectrl.progresspie.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|




|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.piectrl.PieCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.piectrl.ProgressPie.__init__`                                 Default class constructor.
:meth:`~wx.lib.agw.piectrl.ProgressPie.GetFilledColour`                          Returns the colour that progressively fills the :class:`ProgressPie`.
:meth:`~wx.lib.agw.piectrl.ProgressPie.GetMaxValue`                              Returns the :class:`ProgressPie`  maximum value.
:meth:`~wx.lib.agw.piectrl.ProgressPie.GetUnfilledColour`                        Returns the colour that is filled.
:meth:`~wx.lib.agw.piectrl.ProgressPie.GetValue`                                 Returns the :class:`ProgressPie` value.
:meth:`~wx.lib.agw.piectrl.ProgressPie.SetFilledColour`                          Sets the colour that progressively fills the :class:`ProgressPie` .
:meth:`~wx.lib.agw.piectrl.ProgressPie.SetMaxValue`                              Sets the :class:`ProgressPie` maximum value.
:meth:`~wx.lib.agw.piectrl.ProgressPie.SetUnfilledColour`                        Sets the colour that is filled.
:meth:`~wx.lib.agw.piectrl.ProgressPie.SetValue`                                 Sets the :class:`ProgressPie` value.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ProgressPie(PieCtrl)

   :class:`ProgressPie` tries to emulate the behavior of :class:`ProgressDialog`, but
   using a pie chart instead of a gauge.

   .. method:: __init__(self, parent, maxvalue, value, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0)

      Default class constructor.
      
      :param `parent`: the :class:`PieCtrl` parent. Must not be ``None``;
      :param `id`: window identifier. A value of -1 indicates a default value;
      :param `pos`: the control position. A value of (-1, -1) indicates a default position,
       chosen by either the windowing system or wxPython, depending on platform;
      :param `size`: the control size. A value of (-1, -1) indicates a default size,
       chosen by either the windowing system or wxPython, depending on platform;
      :param `style`: the window style (unused);
      :param `name`: the window name.


   .. method:: GetFilledColour(self)

      Returns the colour that progressively fills the :class:`ProgressPie`. 


   .. method:: GetMaxValue(self)

      Returns the :class:`ProgressPie`  maximum value. 


   .. method:: GetUnfilledColour(self)

      Returns the colour that is filled. 


   .. method:: GetValue(self)

      Returns the :class:`ProgressPie` value. 


   .. method:: SetFilledColour(self, colour)

      Sets the colour that progressively fills the :class:`ProgressPie` .
      
      :param `colour`: a valid :class:`wx.Colour` object.


   .. method:: SetMaxValue(self, value)

      Sets the :class:`ProgressPie` maximum value.
      
      :param `value`: a floating point number representing the maximum value.


   .. method:: SetUnfilledColour(self, colour)

      Sets the colour that is filled.
      
      :param `colour`: a valid :class:`wx.Colour` object.


   .. method:: SetValue(self, value)

      Sets the :class:`ProgressPie` value.
      
      :param `value`: a floating point number representing the new value.


