.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.AcceleratorTable:

==========================================================================================================================================
|phoenix_title|  **wx.AcceleratorTable**
==========================================================================================================================================

An accelerator table allows the application to specify a table of keyboard shortcuts for menu or button commands.          

The object :ref:`wx.NullAcceleratorTable`  is defined to be a table with no data, and is the initial accelerator table for a window. 

Example: 

::

    entries = [wx.AcceleratorEntry() for i in xrange(4)]

    entries[0].Set(wx.ACCEL_CTRL, ord('N'), ID_NEW_WINDOW)
    entries[1].Set(wx.ACCEL_CTRL, ord('X'), wx.ID_EXIT)
    entries[2].Set(wx.ACCEL_SHIFT, ord('A'), ID_ABOUT)
    entries[3].Set(wx.ACCEL_NORMAL, wx.WXK_DELETE, wx.ID_CUT)

    accel = wx.AcceleratorTable(entries)
    frame.SetAcceleratorTable(accel)











         



.. note:: 

   An accelerator takes precedence over normal processing and can be a convenient way to program some event handling. For example, you can use an accelerator table to enable a dialog with a multi-line text control to accept CTRL-Enter as meaning '``wx.OK``'.  







.. seealso:: :ref:`wx.AcceleratorEntry`, :meth:`wx.Window.SetAcceleratorTable`     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AcceleratorTable</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.AcceleratorTable_inheritance.png" alt="Inheritance diagram of AcceleratorTable" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.AcceleratorTable.html" title="wx.AcceleratorTable" alt="" coords="5,83,159,112"/> <area shape="rect" id="node2" href="wx.Object.html" title="wx.Object" alt="" coords="39,5,125,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.AcceleratorTable.__init__`                                            Default constructor.
:meth:`~wx.AcceleratorTable.IsOk`                                                Returns ``True`` if the accelerator table is valid.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.AcceleratorTable(Object)

   **Possible constructors**::

       AcceleratorTable()
       
       AcceleratorTable(entries)
       
   
   An accelerator table allows the application to specify a table of
   keyboard shortcuts for menu or button commands.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, entries)`
      
                              Constructs an AcceleratorTable from a sequence of items
                              where each item is either a wx.AcceleratorEntry or a
                              corresponding 3-element tuple like (modifiers, keyCode, cmd).
                                
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: IsOk(self)

      Returns ``True`` if the accelerator table is valid.                  

      :rtype: `bool`







