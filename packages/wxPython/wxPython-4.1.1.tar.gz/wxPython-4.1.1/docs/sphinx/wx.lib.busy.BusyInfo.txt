.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.busy

.. highlight:: python



.. _wx.lib.busy.BusyInfo:

==========================================================================================================================================
|phoenix_title|  **wx.lib.busy.BusyInfo**
==========================================================================================================================================

This class is just like :class:`wx.BusyInfo`, except that its default
size is smaller, (unless the size of the message requires a larger window
size) and the background and foreground colors of the message box can be
set.

Creating an instace of the class will create and show a window with the
given message, and when the instance is deleted then that window will be
closed. This class also implements the context manager magic methods, so
it can be used with Python's `with` statement, like this::

    with BusyInfo('Please wait...'):
        doSomethingThatNeedsWaiting()



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>BusyInfo</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.busy.BusyInfo_inheritance.png" alt="Inheritance diagram of BusyInfo" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.busy.BusyInfo.html" title="wx.lib.busy.BusyInfo" alt="" coords="5,5,160,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.busy.BusyInfo.__init__`                                           Create a new :class:`BusyInfo`.
:meth:`~wx.lib.busy.BusyInfo.Close`                                              Hide and close the busy info box.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: BusyInfo(object)

   This class is just like :class:`wx.BusyInfo`, except that its default
   size is smaller, (unless the size of the message requires a larger window
   size) and the background and foreground colors of the message box can be
   set.
   
   Creating an instace of the class will create and show a window with the
   given message, and when the instance is deleted then that window will be
   closed. This class also implements the context manager magic methods, so
   it can be used with Python's `with` statement, like this::
   
       with BusyInfo('Please wait...'):
           doSomethingThatNeedsWaiting()

   .. method:: __init__(self, msg, parent=None, bgColour=None, fgColour=None)

      Create a new :class:`BusyInfo`.
      
      :param string `msg`:     a string to be displayed in the BusyInfo window.
      :param wx.Window `parent`:  an optional window to be used as the parent of
          the `:class:`BusyInfo`.  If given then the ``BusyInfo`` will be centered
          over that window, otherwise it will be centered on the screen.
      :param wx.Colour `bgColour`: colour to be used for the background
          of the :class:`BusyInfo`
      :param wx.Colour `fgColour`: colour to be used for the foreground (text)
          of the :class:`BusyInfo`


   .. method:: Close(self)

      Hide and close the busy info box.


