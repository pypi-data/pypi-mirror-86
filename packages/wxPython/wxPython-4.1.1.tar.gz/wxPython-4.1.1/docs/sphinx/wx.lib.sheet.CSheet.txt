.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.sheet

.. highlight:: python



.. _wx.lib.sheet.CSheet:

==========================================================================================================================================
|phoenix_title|  **wx.lib.sheet.CSheet**
==========================================================================================================================================

Grid()
Grid(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.WANTS_CHARS, name=GridNameStr)

wxGrid and its related classes are used for displaying and editing
tabular data.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>CSheet</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.sheet.CSheet_inheritance.png" alt="Inheritance diagram of CSheet" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.sheet.CSheet.html" title="wx.lib.sheet.CSheet" alt="" coords="33,469,184,499"/> <area shape="rect" id="node3" href="wx.ScrolledCanvas.html" title="wx.ScrolledCanvas" alt="" coords="36,315,181,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="60,237,157,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="44,160,173,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.grid.Grid`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.sheet.CSheet.__init__`                                            Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.sheet.CSheet.Clear`                                               Clear the currently selected cells
:meth:`~wx.lib.sheet.CSheet.Copy`                                                Copy the currently selected cells to the clipboard
:meth:`~wx.lib.sheet.CSheet.OnCellChange`                                        
:meth:`~wx.lib.sheet.CSheet.OnColSize`                                           
:meth:`~wx.lib.sheet.CSheet.OnGridSelectCell`                                    Track cell selections
:meth:`~wx.lib.sheet.CSheet.OnLeftClick`                                         Override left-click behavior to prevent left-click edit initiation
:meth:`~wx.lib.sheet.CSheet.OnLeftDoubleClick`                                   Initiate the cell editor on a double-click
:meth:`~wx.lib.sheet.CSheet.OnRangeSelect`                                       Track which cells are selected so that copy/paste behavior can be implemented
:meth:`~wx.lib.sheet.CSheet.OnRightClick`                                        Move grid cursor when a cell is right-clicked
:meth:`~wx.lib.sheet.CSheet.OnRowSize`                                           
:meth:`~wx.lib.sheet.CSheet.Paste`                                               Paste the contents of the clipboard into the currently selected cells
:meth:`~wx.lib.sheet.CSheet.SetNumberCols`                                       Set the number of columns in the sheet
:meth:`~wx.lib.sheet.CSheet.SetNumberRows`                                       Set the number of rows in the sheet
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: CSheet(wx.grid.Grid)

   Grid()
   Grid(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.WANTS_CHARS, name=GridNameStr)
   
   wxGrid and its related classes are used for displaying and editing
   tabular data.

   .. method:: __init__(self, parent)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: Clear(self)

      Clear the currently selected cells 


   .. method:: Copy(self)

      Copy the currently selected cells to the clipboard 


   .. method:: OnCellChange(self, event)


   .. method:: OnColSize(self, event)


   .. method:: OnGridSelectCell(self, event)

      Track cell selections 


   .. method:: OnLeftClick(self, event)

      Override left-click behavior to prevent left-click edit initiation 


   .. method:: OnLeftDoubleClick(self, event)

      Initiate the cell editor on a double-click 


   .. method:: OnRangeSelect(self, event)

      Track which cells are selected so that copy/paste behavior can be implemented 


   .. method:: OnRightClick(self, event)

      Move grid cursor when a cell is right-clicked 


   .. method:: OnRowSize(self, event)


   .. method:: Paste(self)

      Paste the contents of the clipboard into the currently selected cells 


   .. method:: SetNumberCols(self, numCols=1)

      Set the number of columns in the sheet 


   .. method:: SetNumberRows(self, numRows=1)

      Set the number of rows in the sheet 


