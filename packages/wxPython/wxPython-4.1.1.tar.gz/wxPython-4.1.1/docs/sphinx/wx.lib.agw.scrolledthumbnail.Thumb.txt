.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.scrolledthumbnail

.. highlight:: python



.. _wx.lib.agw.scrolledthumbnail.Thumb:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.scrolledthumbnail.Thumb**
==========================================================================================================================================

This is an auxiliary class, to handle single thumbnail information for every thumb.

Used internally.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Thumb</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.scrolledthumbnail.Thumb_inheritance.png" alt="Inheritance diagram of Thumb" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.scrolledthumbnail.Thumb.html" title="wx.lib.agw.scrolledthumbnail.Thumb" alt="" coords="5,5,267,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.__init__`                             Default class constructor.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.BreakCaption`                         Breaks the caption in several lines of text (if needed).
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetBitmap`                            Returns the bitmap of the thumbnail
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetCaption`                           Returns the caption associated to a thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetCaptionLinesCount`                 Returns the number of lines for the caption.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetCreationDate`                      Returns the file last modification date associated to a thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetDisplayFileSize`                   Return printable file size (with bytes, Kb, Mb suffix).
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetFileName`                          Returns the file name associated with this thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetFileSize`                          Returns the file size in bytes associated to a thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetFullFileName`                      Returns the full filename of the thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetHighlightBitmap`                   Returned highlighted bitmap of thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetId`                                Returns the thumbnail identifier.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetImage`                             Returns the thumbnail image.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetInfo`                              Returns info for thumbnain in display format.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetOriginalSize`                      Returns a tuple containing the original image width and height, in pixels.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.GetThumbnail`                         Returns the wx.Image of the thumbnail
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.LoadImage`                            Load image using imagehandler.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.Rotate`                               Rotate image using imagehandler.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.SetCaption`                           Sets the thumbnail caption.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.SetFileName`                          Sets the file name associated with this thumbnail.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.SetId`                                Sets the thumbnail identifier.
:meth:`~wx.lib.agw.scrolledthumbnail.Thumb.SetImage`                             Sets the thumbnail image.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Thumb(object)

   This is an auxiliary class, to handle single thumbnail information for every thumb.
   
   Used internally.

   .. method:: __init__(self, folder, filename, caption="", size=0, lastmod=0, imagehandler=None)

      Default class constructor.
      
      :param `folder`: the directory containing the images;
      :param `filename`: a file containing an image;
      :param `caption`: the thumbnail caption string;
      :param `size`: the file size;
      :param `lastmod`: the file last modification time.


   .. method:: BreakCaption(self, width)

      Breaks the caption in several lines of text (if needed).
      
      :param `width`: the maximum width, in pixels, available for the caption text.


   .. method:: GetBitmap(self, width, height)

      Returns the bitmap of the thumbnail
      
      :param `width`: the associated bitmap width;
      :param `height`: the associated bitmap height.


   .. method:: GetCaption(self, line)

      Returns the caption associated to a thumbnail.
      
      :param `line`: the caption line we wish to retrieve (useful for multilines
       caption strings).


   .. method:: GetCaptionLinesCount(self, width)

      Returns the number of lines for the caption.
      
      :param `width`: the maximum width, in pixels, available for the caption text.


   .. method:: GetCreationDate(self)

      Returns the file last modification date associated to a thumbnail. 


   .. method:: GetDisplayFileSize(self)

      Return printable file size (with bytes, Kb, Mb suffix). 


   .. method:: GetFileName(self)

      Returns the file name associated with this thumbnail. 


   .. method:: GetFileSize(self)

      Returns the file size in bytes associated to a thumbnail. 


   .. method:: GetFullFileName(self)

      Returns the full filename of the thumbnail. 


   .. method:: GetHighlightBitmap(self, width, height, factor)

      Returned highlighted bitmap of thumbnail. 


   .. method:: GetId(self)

      Returns the thumbnail identifier. 


   .. method:: GetImage(self)

      Returns the thumbnail image. 


   .. method:: GetInfo(self)

      Returns info for thumbnain in display format. 


   .. method:: GetOriginalSize(self)

      Returns a tuple containing the original image width and height, in pixels. 


   .. method:: GetThumbnail(self, width, height)

      Returns the wx.Image of the thumbnail
      
      :param `width`: the associated bitmap width;
      :param `height`: the associated bitmap height.


   .. method:: LoadImage(self)

      Load image using imagehandler. 


   .. method:: Rotate(self, angle)

      Rotate image using imagehandler. 


   .. method:: SetCaption(self, caption="")

      Sets the thumbnail caption.
      
      :param `caption`: the thumbnail caption string.


   .. method:: SetFileName(self, filename)

      Sets the file name associated with this thumbnail.
      
      :param `filename`: the file containing the image.


   .. method:: SetId(self, id=-1)

      Sets the thumbnail identifier.
      
      :param `id`: an integer specifying the thumbnail identifier.


   .. method:: SetImage(self, image)

      Sets the thumbnail image.
      
      :param `image`: a :class:`wx.Image` object.


