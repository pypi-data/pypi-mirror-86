.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.ogl.composit

.. highlight:: python



.. _wx.lib.ogl.composit.Constraint:

==========================================================================================================================================
|phoenix_title|  **wx.lib.ogl.composit.Constraint**
==========================================================================================================================================

The :class:`Constraint` class helps specify how child shapes are laid out
with respect to siblings and parents.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Constraint</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.ogl.composit.Constraint_inheritance.png" alt="Inheritance diagram of Constraint" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.ogl.composit.Constraint.html" title="wx.lib.ogl.composit.Constraint" alt="" coords="5,5,225,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.core.deprecated.<locals>.DeprecatedClassProxy`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.ogl.composit.Constraint.__init__`                                 Default class constructor.
:meth:`~wx.lib.ogl.composit.Constraint.Equals`                                   Return `True` if a and b are approximately equal (for the purposes
:meth:`~wx.lib.ogl.composit.Constraint.Evaluate`                                 Evaluate this constraint and return `True` if anything changed.
:meth:`~wx.lib.ogl.composit.Constraint.SetSpacing`                               Sets the horizontal and vertical spacing for the constraint.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Constraint(object)

   The :class:`Constraint` class helps specify how child shapes are laid out
   with respect to siblings and parents.

   .. method:: __init__(self, type, constraining, constrained)

      Default class constructor.
      
      :param `type`: see :class:`ConstraintType` for valid types
      :param `constraining`: the constraining :class:`Shape`
      :param `constrained`: the constrained :class:`Shape`


   .. method:: Equals(self, a, b)

      Return `True` if a and b are approximately equal (for the purposes
      of evaluating the constraint).
      
      :param `a`: ???
      :param `b`: ???


   .. method:: Evaluate(self)

      Evaluate this constraint and return `True` if anything changed.


   .. method:: SetSpacing(self, x, y)

      Sets the horizontal and vertical spacing for the constraint.
      
      :param `x`: the x position
      :param `y`: the y position


