.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.py.interpreter

.. highlight:: python



.. _wx.py.interpreter.Interpreter:

==========================================================================================================================================
|phoenix_title|  **wx.py.interpreter.Interpreter**
==========================================================================================================================================

Interpreter based on code.InteractiveInterpreter.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>Interpreter</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.py.interpreter.Interpreter_inheritance.png" alt="Inheritance diagram of Interpreter" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.py.interpreter.Interpreter.html" title="wx.py.interpreter.Interpreter" alt="" coords="5,83,209,112"/> <area shape="rect" id="node2" href="http://docs.python.org/library/code.html#code.InteractiveInterpreter" title="code.InteractiveInterpreter" alt="" coords="9,5,205,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.py.interpreter.InterpreterAlaCarte`

|


|super_classes| Known Superclasses
==================================

`code.InteractiveInterpreter <http://docs.python.org/library/code.html#code.InteractiveInterpreter>`_

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.py.interpreter.Interpreter.__init__`                                  Create an interactive interpreter object.
:meth:`~wx.py.interpreter.Interpreter.getAutoCompleteKeys`                       Return list of auto-completion keycodes.
:meth:`~wx.py.interpreter.Interpreter.getAutoCompleteList`                       Return list of auto-completion options for a command.
:meth:`~wx.py.interpreter.Interpreter.getCallTip`                                Return call tip text for a command.
:meth:`~wx.py.interpreter.Interpreter.push`                                      Send command to the interpreter to be executed.
:meth:`~wx.py.interpreter.Interpreter.runModule`                                 Compile and run an ast module in the interpreter.
:meth:`~wx.py.interpreter.Interpreter.runsource`                                 Compile and run source code in the interpreter.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: Interpreter(InteractiveInterpreter)

   Interpreter based on code.InteractiveInterpreter.

   .. method:: __init__(self, locals=None, rawin=None, stdin=sys.stdin, stdout=sys.stdout, stderr=sys.stderr, showInterpIntro=True)

      Create an interactive interpreter object.


   .. method:: getAutoCompleteKeys(self)

      Return list of auto-completion keycodes.


   .. method:: getAutoCompleteList(self, command='', \*args, \*\*kwds)

      Return list of auto-completion options for a command.
      
      The list of options will be based on the locals namespace.


   .. method:: getCallTip(self, command='', \*args, \*\*kwds)

      Return call tip text for a command.
      
      Call tip information will be based on the locals namespace.


   .. method:: push(self, command, astMod=None)

      Send command to the interpreter to be executed.
      
      Because this may be called recursively, we append a new list
      onto the commandBuffer list and then append commands into
      that.  If the passed in command is part of a multi-line
      command we keep appending the pieces to the last list in
      commandBuffer until we have a complete command. If not, we
      delete that last list.


   .. method:: runModule(self, mod)

      Compile and run an ast module in the interpreter.


   .. method:: runsource(self, source)

      Compile and run source code in the interpreter.


