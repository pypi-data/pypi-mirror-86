.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.richtext.RichTextStyleComboCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.richtext.RichTextStyleComboCtrl**
==========================================================================================================================================

This is a combo control that can display the styles in a :ref:`wx.richtext.RichTextStyleSheet`, and apply the selection to an associated :ref:`wx.richtext.RichTextCtrl`.          

See  ``samples/richtext``   for an example of how to use it. 







         



.. seealso:: :ref:`wx.richtext.RichTextStyleListBox`, :ref:`RichTextCtrl Overview <richtextctrl overview>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>RichTextStyleComboCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.richtext.RichTextStyleComboCtrl_inheritance.png" alt="Inheritance diagram of RichTextStyleComboCtrl" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.richtext.RichTextStyleComboCtrl.html" title="wx.richtext.RichTextStyleComboCtrl" alt="" coords="42,392,298,421"/> <area shape="rect" id="node2" href="wx.ComboCtrl.html" title="wx.ComboCtrl" alt="" coords="113,315,227,344"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node4" href="wx.TextEntry.html" title="wx.TextEntry" alt="" coords="179,237,286,267"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.richtext.RichTextStyleComboCtrl.__init__`                             Constructor.
:meth:`~wx.richtext.RichTextStyleComboCtrl.Create`                               Creates the windows.
:meth:`~wx.richtext.RichTextStyleComboCtrl.GetClassDefaultAttributes`            
:meth:`~wx.richtext.RichTextStyleComboCtrl.GetRichTextCtrl`                      Returns the :ref:`wx.richtext.RichTextCtrl`  associated with this control.
:meth:`~wx.richtext.RichTextStyleComboCtrl.GetStyleSheet`                        Returns the style sheet associated with this control.
:meth:`~wx.richtext.RichTextStyleComboCtrl.SetRichTextCtrl`                      Associates the control with a :ref:`wx.richtext.RichTextCtrl`.
:meth:`~wx.richtext.RichTextStyleComboCtrl.SetStyleSheet`                        Associates the control with a style sheet.
:meth:`~wx.richtext.RichTextStyleComboCtrl.UpdateStyles`                         Updates the combo control from the associated style sheet.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.richtext.RichTextStyleComboCtrl.RichTextCtrl`                         See :meth:`~wx.richtext.RichTextStyleComboCtrl.GetRichTextCtrl` and :meth:`~wx.richtext.RichTextStyleComboCtrl.SetRichTextCtrl`
:attr:`~wx.richtext.RichTextStyleComboCtrl.StyleSheet`                           See :meth:`~wx.richtext.RichTextStyleComboCtrl.GetStyleSheet` and :meth:`~wx.richtext.RichTextStyleComboCtrl.SetStyleSheet`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.richtext.RichTextStyleComboCtrl(ComboCtrl)

   **Possible constructors**::

       RichTextStyleComboCtrl(parent, id=ID_ANY, pos=DefaultPosition,
                              size=DefaultSize, style=0)
       
       RichTextStyleComboCtrl()
       
   
   This is a combo control that can display the styles in a
   RichTextStyleSheet, and apply the selection to an associated
   RichTextCtrl.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0)`
      
      Constructor.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0)

      Creates the windows.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`VisualAttributes`








   .. method:: GetRichTextCtrl(self)

      Returns the :ref:`wx.richtext.RichTextCtrl`  associated with this control.                  

      :rtype: :ref:`wx.richtext.RichTextCtrl`








   .. method:: GetStyleSheet(self)

      Returns the style sheet associated with this control.                  

      :rtype: :ref:`wx.richtext.RichTextStyleSheet`








   .. method:: SetRichTextCtrl(self, ctrl)

      Associates the control with a :ref:`wx.richtext.RichTextCtrl`.                  


      :param `ctrl`: 
      :type `ctrl`: wx.richtext.RichTextCtrl







   .. method:: SetStyleSheet(self, styleSheet)

      Associates the control with a style sheet.                  


      :param `styleSheet`: 
      :type `styleSheet`: wx.richtext.RichTextStyleSheet







   .. method:: UpdateStyles(self)

      Updates the combo control from the associated style sheet.                   





   .. attribute:: RichTextCtrl

      See :meth:`~wx.richtext.RichTextStyleComboCtrl.GetRichTextCtrl` and :meth:`~wx.richtext.RichTextStyleComboCtrl.SetRichTextCtrl`


   .. attribute:: StyleSheet

      See :meth:`~wx.richtext.RichTextStyleComboCtrl.GetStyleSheet` and :meth:`~wx.richtext.RichTextStyleComboCtrl.SetStyleSheet`

