.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pydocview

.. highlight:: python



.. _wx.lib.pydocview.DocMDIParentFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pydocview.DocMDIParentFrame**
==========================================================================================================================================

The DocMDIParentFrame is the primary frame which the DocApp uses to host MDI child windows.  It offers
features such as a default menubar, toolbar, and status bar, and a mechanism to manage embedded windows
on the edges of the DocMDIParentFrame.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocMDIParentFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pydocview.DocMDIParentFrame_inheritance.png" alt="Inheritance diagram of DocMDIParentFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pydocview.DocMDIParentFrame.html" title="wx.lib.pydocview.DocMDIParentFrame" alt="" coords="268,701,537,731"/> <area shape="rect" id="node2" href="wx.lib.docview.DocMDIParentFrame.html" title="wx.lib.docview.DocMDIParentFrame" alt="" coords="5,624,259,653"/> <area shape="rect" id="node3" href="wx.lib.pydocview.DocFrameMixIn.html" title="wx.lib.pydocview.DocFrameMixIn" alt="" coords="283,624,522,653"/> <area shape="rect" id="node4" href="wx.lib.pydocview.DocMDIParentFrameMixIn.html" title="wx.lib.pydocview.DocMDIParentFrameMixIn" alt="" coords="547,624,851,653"/> <area shape="rect" id="node5" href="wx.MDIParentFrame.html" title="wx.MDIParentFrame" alt="" coords="57,547,207,576"/> <area shape="rect" id="node6" href="wx.Frame.html" title="wx.Frame" alt="" coords="89,469,175,499"/> <area shape="rect" id="node7" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="55,392,209,421"/> <area shape="rect" id="node8" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="48,315,216,344"/> <area shape="rect" id="node9" href="wx.Window.html" title="wx.Window" alt="" coords="83,237,181,267"/> <area shape="rect" id="node10" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="67,160,197,189"/> <area shape="rect" id="node11" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="73,83,191,112"/> <area shape="rect" id="node12" href="wx.Object.html" title="wx.Object" alt="" coords="29,5,115,35"/> <area shape="rect" id="node13" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="140,5,247,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.docview.DocMDIParentFrame`, :class:`wx.lib.pydocview.DocFrameMixIn`, :class:`wx.lib.pydocview.DocMDIParentFrameMixIn`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pydocview.DocMDIParentFrame.__init__`                             Initializes the DocMDIParentFrame with the default menubar, toolbar, and status bar.  Use the
:meth:`~wx.lib.pydocview.DocMDIParentFrame.OnCloseWindow`                        Called when the DocMDIParentFrame is closed.  Remembers the frame size.
:meth:`~wx.lib.pydocview.DocMDIParentFrame.OnSize`                               Called when the DocMDIParentFrame is resized and lays out the MDI client window.
:meth:`~wx.lib.pydocview.DocMDIParentFrame.ProcessEvent`                         Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocMDIParentFrame.ProcessUpdateUIEvent`                 Processes a UI event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocMDIParentFrame.UpdateWindowMenu`                     Updates the WindowMenu on Windows platforms.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocMDIParentFrame(wx.lib.docview.DocMDIParentFrame, DocFrameMixIn, DocMDIParentFrameMixIn)

   The DocMDIParentFrame is the primary frame which the DocApp uses to host MDI child windows.  It offers
   features such as a default menubar, toolbar, and status bar, and a mechanism to manage embedded windows
   on the edges of the DocMDIParentFrame.

   .. method:: __init__(self, docManager, parent, id, title, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_FRAME_STYLE, name="DocMDIFrame", embeddedWindows=0, minSize=20)

      Initializes the DocMDIParentFrame with the default menubar, toolbar, and status bar.  Use the
      optional embeddedWindows parameter with the embedded window constants to create embedded
      windows around the edges of the DocMDIParentFrame.


   .. method:: OnCloseWindow(self, event)

      Called when the DocMDIParentFrame is closed.  Remembers the frame size.


   .. method:: OnSize(self, event)

      Called when the DocMDIParentFrame is resized and lays out the MDI client window.


   .. method:: ProcessEvent(self, event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: ProcessUpdateUIEvent(self, event)

      Processes a UI event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: UpdateWindowMenu(self)

      Updates the WindowMenu on Windows platforms.


