.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.SizeEvent:

==========================================================================================================================================
|phoenix_title|  **wx.SizeEvent**
==========================================================================================================================================

A size event holds information about size change events of :ref:`wx.Window`.          

The ``EVT_SIZE`` handler function will be called when the window has been resized. 

You may wish to use this for frames to resize their child windows as appropriate. 

Note that the size passed is of the whole window: call :meth:`wx.Window.GetClientSize`   for the area which may be used by the application. 

When a window is resized, usually only a small part of the window is damaged and you may only need to repaint that area. However, if your drawing depends on the size of the window, you may need to clear the DC explicitly and repaint the whole window. In which case, you may need to call :meth:`wx.Window.Refresh`   to invalidate the entire window. 

**Important**  : Sizers ( see :ref:`Sizers Overview <sizers overview>`  ) rely on size events to function correctly. Therefore, in a sizer-based layout, do not forget to call Skip on all size events you catch (and don't catch size events at all when you don't need to). 







.. _SizeEvent-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.SizeEvent` parameter.

Event macros: 

- EVT_SIZE: Process a  ``wxEVT_SIZE``   event.   








         



.. seealso:: :ref:`wx.Size`, :ref:`Events and Event Handling <events and event handling>`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SizeEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.SizeEvent_inheritance.png" alt="Inheritance diagram of SizeEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.SizeEvent.html" title="wx.SizeEvent" alt="" coords="5,160,115,189"/> <area shape="rect" id="node2" href="wx.Event.html" title="wx.Event" alt="" coords="19,83,101,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="17,5,103,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.SizeEvent.__init__`                                                   Constructor.
:meth:`~wx.SizeEvent.GetRect`                                                    
:meth:`~wx.SizeEvent.GetSize`                                                    Returns the entire size of the window generating the size change event.
:meth:`~wx.SizeEvent.SetRect`                                                    
:meth:`~wx.SizeEvent.SetSize`                                                    
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.SizeEvent.Rect`                                                       See :meth:`~wx.SizeEvent.GetRect` and :meth:`~wx.SizeEvent.SetRect`
:attr:`~wx.SizeEvent.Size`                                                       See :meth:`~wx.SizeEvent.GetSize` and :meth:`~wx.SizeEvent.SetSize`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.SizeEvent(Event)

   **Possible constructors**::

       SizeEvent(sz, id=0)
       
   
   A size event holds information about size change events of Window.



   .. method:: __init__(self, sz, id=0)

      Constructor.                  


      :param `sz`: 
      :type `sz`: wx.Size
      :param `id`: 
      :type `id`: int







   .. method:: GetRect(self)



      :rtype: :ref:`wx.Rect`








   .. method:: GetSize(self)

      Returns the entire size of the window generating the size change event.                  

      This is the new total size of the window, i.e. the same size as would be returned by :meth:`wx.Window.GetSize`   if it were called now. Use :meth:`wx.Window.GetClientSize`   if you catch this event in a top level window such as :ref:`wx.Frame`  to find the size available for the window contents.                  

      :rtype: :ref:`wx.Size`








   .. method:: SetRect(self, rect)




      :param `rect`: 
      :type `rect`: wx.Rect







   .. method:: SetSize(self, size)




      :param `size`: 
      :type `size`: wx.Size







   .. attribute:: Rect

      See :meth:`~wx.SizeEvent.GetRect` and :meth:`~wx.SizeEvent.SetRect`


   .. attribute:: Size

      See :meth:`~wx.SizeEvent.GetSize` and :meth:`~wx.SizeEvent.SetSize`

