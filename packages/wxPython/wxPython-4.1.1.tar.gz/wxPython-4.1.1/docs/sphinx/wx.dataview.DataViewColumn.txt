.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.dataview.DataViewColumn:

==========================================================================================================================================
|phoenix_title|  **wx.dataview.DataViewColumn**
==========================================================================================================================================

This class represents a column in a :ref:`wx.dataview.DataViewCtrl`.          

One :ref:`wx.dataview.DataViewColumn`  is bound to one column in the data model to which the :ref:`wx.dataview.DataViewCtrl`  has been associated. 

An instance of :ref:`wx.dataview.DataViewRenderer`  is used by this class to render its data. 









.. note:: 

   In wxGTK, setting the width of the column doesn't happen immediately when :meth:`SetWidth`   is called, but only slightly later and :meth:`GetWidth`   will return the old width (0 initially) until this happens. If the column widths are set before :ref:`wx.dataview.DataViewCtrl`  is initially shown, they will only be effectively set when it becomes visible.  







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DataViewColumn</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.dataview.DataViewColumn_inheritance.png" alt="Inheritance diagram of DataViewColumn" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.dataview.DataViewColumn.html" title="wx.dataview.DataViewColumn" alt="" coords="5,160,227,189"/> <area shape="rect" id="node2" href="wx.SettableHeaderColumn.html" title="wx.SettableHeaderColumn" alt="" coords="18,83,214,112"/> <area shape="rect" id="node3" href="wx.HeaderColumn.html" title="wx.HeaderColumn" alt="" coords="45,5,187,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.dataview.DataViewColumn.__init__`                                     Constructs a text column.
:meth:`~wx.dataview.DataViewColumn.GetModelColumn`                               Returns the index of the column of the model, which this :ref:`wx.dataview.DataViewColumn`  is displaying.
:meth:`~wx.dataview.DataViewColumn.GetOwner`                                     Returns the owning :ref:`wx.dataview.DataViewCtrl`.
:meth:`~wx.dataview.DataViewColumn.GetRenderer`                                  Returns the renderer of this :ref:`wx.dataview.DataViewColumn`.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.dataview.DataViewColumn.Alignment`                                    See :meth:`~wx.dataview.DataViewColumn.GetAlignment` and :meth:`~wx.dataview.DataViewColumn.SetAlignment`
:attr:`~wx.dataview.DataViewColumn.Bitmap`                                       See :meth:`~wx.dataview.DataViewColumn.GetBitmap` and :meth:`~wx.dataview.DataViewColumn.SetBitmap`
:attr:`~wx.dataview.DataViewColumn.Flags`                                        See :meth:`~wx.dataview.DataViewColumn.GetFlags` and :meth:`~wx.dataview.DataViewColumn.SetFlags`
:attr:`~wx.dataview.DataViewColumn.MinWidth`                                     See :meth:`~wx.dataview.DataViewColumn.GetMinWidth` and :meth:`~wx.dataview.DataViewColumn.SetMinWidth`
:attr:`~wx.dataview.DataViewColumn.ModelColumn`                                  See :meth:`~wx.dataview.DataViewColumn.GetModelColumn`
:attr:`~wx.dataview.DataViewColumn.Owner`                                        See :meth:`~wx.dataview.DataViewColumn.GetOwner`
:attr:`~wx.dataview.DataViewColumn.Renderer`                                     See :meth:`~wx.dataview.DataViewColumn.GetRenderer`
:attr:`~wx.dataview.DataViewColumn.SortOrder`                                    See :meth:`~wx.dataview.DataViewColumn.IsSortOrderAscending` and :meth:`~wx.dataview.DataViewColumn.SetSortOrder`
:attr:`~wx.dataview.DataViewColumn.Title`                                        See :meth:`~wx.dataview.DataViewColumn.GetTitle` and :meth:`~wx.dataview.DataViewColumn.SetTitle`
:attr:`~wx.dataview.DataViewColumn.Width`                                        See :meth:`~wx.dataview.DataViewColumn.GetWidth` and :meth:`~wx.dataview.DataViewColumn.SetWidth`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.dataview.DataViewColumn(SettableHeaderColumn)

   **Possible constructors**::

       DataViewColumn(title, renderer, model_column, width=DVC_DEFAULT_WIDTH,
                      align=ALIGN_CENTER, flags=DATAVIEW_COL_RESIZABLE)
       
       DataViewColumn(bitmap, renderer, model_column, width=DVC_DEFAULT_WIDTH,
                      align=ALIGN_CENTER, flags=DATAVIEW_COL_RESIZABLE)
       
   
   This class represents a column in a DataViewCtrl.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, title, renderer, model_column, width=DVC_DEFAULT_WIDTH, align=ALIGN_CENTER, flags=DATAVIEW_COL_RESIZABLE)`
      
      Constructs a text column.                  
      
      
      
      
      :param `title`: The title of the column.   
      :type `title`: string
      :param `renderer`: The class which will render the contents of this column.   
      :type `renderer`: wx.dataview.DataViewRenderer
      :param `model_column`: The index of the model's column which is associated with this object.   
      :type `model_column`: int
      :param `width`: The width of the column. The  ``DVC_DEFAULT_WIDTH``   value is the fixed default value.    
      :type `width`: int
      :param `align`: The alignment of the column title.   
      :type `align`: wx.Alignment
      :param `flags`: One or more flags of the :ref:`wx.dataview.DataViewColumnFlags`  enumeration.   
      :type `flags`: int
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, bitmap, renderer, model_column, width=DVC_DEFAULT_WIDTH, align=ALIGN_CENTER, flags=DATAVIEW_COL_RESIZABLE)`
      
      Constructs a bitmap column.                  
      
      
      
      
      :param `bitmap`: The bitmap of the column.   
      :type `bitmap`: wx.Bitmap
      :param `renderer`: The class which will render the contents of this column.   
      :type `renderer`: wx.dataview.DataViewRenderer
      :param `model_column`: The index of the model's column which is associated with this object.   
      :type `model_column`: int
      :param `width`: The width of the column. The  ``DVC_DEFAULT_WIDTH``   value is the fixed default value.    
      :type `width`: int
      :param `align`: The alignment of the column title.   
      :type `align`: wx.Alignment
      :param `flags`: One or more flags of the :ref:`wx.dataview.DataViewColumnFlags`  enumeration.   
      :type `flags`: int
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetModelColumn(self)

      Returns the index of the column of the model, which this :ref:`wx.dataview.DataViewColumn`  is displaying.                  

      :rtype: `int`








   .. method:: GetOwner(self)

      Returns the owning :ref:`wx.dataview.DataViewCtrl`.                  

      :rtype: :ref:`wx.dataview.DataViewCtrl`








   .. method:: GetRenderer(self)

      Returns the renderer of this :ref:`wx.dataview.DataViewColumn`.                  

                

      :rtype: :ref:`wx.dataview.DataViewRenderer`







      .. seealso:: :ref:`wx.dataview.DataViewRenderer`.   








   .. attribute:: Alignment

      See :meth:`~wx.dataview.DataViewColumn.GetAlignment` and :meth:`~wx.dataview.DataViewColumn.SetAlignment`


   .. attribute:: Bitmap

      See :meth:`~wx.dataview.DataViewColumn.GetBitmap` and :meth:`~wx.dataview.DataViewColumn.SetBitmap`


   .. attribute:: Flags

      See :meth:`~wx.dataview.DataViewColumn.GetFlags` and :meth:`~wx.dataview.DataViewColumn.SetFlags`


   .. attribute:: MinWidth

      See :meth:`~wx.dataview.DataViewColumn.GetMinWidth` and :meth:`~wx.dataview.DataViewColumn.SetMinWidth`


   .. attribute:: ModelColumn

      See :meth:`~wx.dataview.DataViewColumn.GetModelColumn`


   .. attribute:: Owner

      See :meth:`~wx.dataview.DataViewColumn.GetOwner`


   .. attribute:: Renderer

      See :meth:`~wx.dataview.DataViewColumn.GetRenderer`


   .. attribute:: SortOrder

      See :meth:`~wx.dataview.DataViewColumn.IsSortOrderAscending` and :meth:`~wx.dataview.DataViewColumn.SetSortOrder`


   .. attribute:: Title

      See :meth:`~wx.dataview.DataViewColumn.GetTitle` and :meth:`~wx.dataview.DataViewColumn.SetTitle`


   .. attribute:: Width

      See :meth:`~wx.dataview.DataViewColumn.GetWidth` and :meth:`~wx.dataview.DataViewColumn.SetWidth`

