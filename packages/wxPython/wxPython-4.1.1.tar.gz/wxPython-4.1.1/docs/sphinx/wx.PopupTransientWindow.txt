.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.PopupTransientWindow:

==========================================================================================================================================
|phoenix_title|  **wx.PopupTransientWindow**
==========================================================================================================================================

A :ref:`wx.PopupWindow`  which disappears automatically when the user clicks mouse outside it or if it loses focus in any other way.          

This window can be useful for implementing custom combobox-like controls for example. 







         



.. seealso:: :ref:`wx.PopupWindow`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PopupTransientWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.PopupTransientWindow_inheritance.png" alt="Inheritance diagram of PopupTransientWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.PopupTransientWindow.html" title="wx.PopupTransientWindow" alt="" coords="11,392,207,421"/> <area shape="rect" id="node2" href="wx.PopupWindow.html" title="wx.PopupWindow" alt="" coords="40,315,177,344"/> <area shape="rect" id="node3" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,237,193,267"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.PopupTransientWindow.__init__`                                        Default constructor.
:meth:`~wx.PopupTransientWindow.Dismiss`                                         Hide the window.
:meth:`~wx.PopupTransientWindow.GetClassDefaultAttributes`                       
:meth:`~wx.PopupTransientWindow.OnDismiss`                                       This is called when the popup is disappeared because of anything else but direct call to :meth:`~PopupTransientWindow.Dismiss` .
:meth:`~wx.PopupTransientWindow.Popup`                                           Popup the window (this will show it too).
:meth:`~wx.PopupTransientWindow.ProcessLeftDown`                                 Called when a mouse is pressed while the popup is shown.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.PopupTransientWindow(PopupWindow)

   **Possible constructors**::

       PopupTransientWindow()
       
       PopupTransientWindow(parent, flags=BORDER_NONE)
       
   
   A PopupWindow which disappears automatically when the user clicks
   mouse outside it or if it loses focus in any other way.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, flags=BORDER_NONE)`
      
      Constructor.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `flags`: 
      :type `flags`: int
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Dismiss(self)

      Hide the window.                   





   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: OnDismiss(self)

      This is called when the popup is disappeared because of anything else but direct call to :meth:`Dismiss` .                   





   .. method:: Popup(self, focus=None)

      Popup the window (this will show it too).                  

      If `focus`  is non-NULL, it will be kept focused while this window is shown if supported by the current platform, otherwise the popup itself will receive focus. In any case, the popup will disappear automatically if it loses focus because of a user action. 

                


      :param `focus`: 
      :type `focus`: wx.Window






      .. seealso:: :meth:`Dismiss`     








   .. method:: ProcessLeftDown(self, event)

      Called when a mouse is pressed while the popup is shown.                  

      Return ``True`` from here to prevent its normal processing by the popup (which consists in dismissing it if the mouse is clicked outside it).                  


      :param `event`: 
      :type `event`: wx.MouseEvent




      :rtype: `bool`







