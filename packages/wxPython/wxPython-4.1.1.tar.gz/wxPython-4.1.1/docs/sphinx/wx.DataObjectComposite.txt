.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.DataObjectComposite:

==========================================================================================================================================
|phoenix_title|  **wx.DataObjectComposite**
==========================================================================================================================================

:ref:`wx.DataObjectComposite`  is the simplest :ref:`wx.DataObject`  derivation which may be used to support multiple formats.          

It contains several :ref:`wx.DataObjectSimple`  objects and supports any format supported by at least one of them. Only one of these data objects is `preferred`  (the first one if not explicitly changed by using the second parameter of :meth:`~wx.DataObjectComposite.Add`) and its format determines the preferred format of the composite data object as well. 

See :ref:`wx.DataObject`  documentation for the reasons why you might prefer to use :ref:`wx.DataObject`  directly instead of :ref:`wx.DataObjectComposite`  for efficiency reasons. 

This example shows how a composite data object capable of storing either bitmaps or file names (presumably of bitmap files) can be initialized and used: 

::

        def MyDropTarget(self):

            dataobj = wx.DataObjectComposite()
            dataobj.Add(wx.BitmapDataObject(), True)
            dataobj.Add(wx.FileDataObject())
            self.SetDataObject(dataobj)


        def OnData(self, x, y, defaultDragResult):

            dragResult = wx.DropTarget.OnData(x, y, defaultDragResult)

            if dragResult == defaultDragResult:
                dataobjComp = self.GetDataObject()

                format = dataObjects.GetReceivedFormat()
                dataobj = dataobjComp.GetObject(format)

                if format.GetType() == wx.DF_BITMAP:
                    dataobjBitmap = dataobj
                    # ... use dataobj.GetBitmap() ...


                elif format.GetType() == wx.DF_FILENAME:
                    dataobjFile = dataobj
                    # ... use dataobj.GetFilenames() ...

                else:
                    raise Exception("unexpected data object format")

            return dragResult









         



.. seealso:: :ref:`Drag and Drop Overview <drag and drop overview>`, :ref:`wx.DataObject`, :ref:`wx.DataObjectSimple`, :ref:`wx.FileDataObject`, :ref:`wx.TextDataObject`, :ref:`wx.BitmapDataObject`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DataObjectComposite</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.DataObjectComposite_inheritance.png" alt="Inheritance diagram of DataObjectComposite" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.DataObjectComposite.html" title="wx.DataObjectComposite" alt="" coords="5,83,193,112"/> <area shape="rect" id="node2" href="wx.DataObject.html" title="wx.DataObject" alt="" coords="40,5,159,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.DataObjectComposite.__init__`                                         The default constructor.
:meth:`~wx.DataObjectComposite.Add`                                              Adds the `dataObject`  to the list of supported objects and it becomes the preferred object if `preferred`  is ``True``.
:meth:`~wx.DataObjectComposite.GetAllFormats`                                    Returns a list of wx.DataFormat objects which this data object
:meth:`~wx.DataObjectComposite.GetObject`                                        Returns the pointer to the object which supports the passed format for the specified direction.
:meth:`~wx.DataObjectComposite.GetReceivedFormat`                                Report the format passed to the :meth:`~DataObjectComposite.SetData`   method.
:meth:`~wx.DataObjectComposite.SetData`                                          
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.DataObjectComposite.AllFormats`                                       See :meth:`~wx.DataObjectComposite.GetAllFormats`
:attr:`~wx.DataObjectComposite.ReceivedFormat`                                   See :meth:`~wx.DataObjectComposite.GetReceivedFormat`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.DataObjectComposite(DataObject)

   **Possible constructors**::

       DataObjectComposite()
       
   
   DataObjectComposite is the simplest DataObject derivation which
   may be used to support multiple formats.



   .. method:: __init__(self)

      The default constructor.                   





   .. method:: Add(self, dataObject, preferred=False)

      Adds the `dataObject`  to the list of supported objects and it becomes the preferred object if `preferred`  is ``True``.                  


      :param `dataObject`: 
      :type `dataObject`: wx.DataObjectSimple
      :param `preferred`: 
      :type `preferred`: bool







   .. method:: GetAllFormats(self, dir=DataObject.Get)

                              Returns a list of wx.DataFormat objects which this data object
                              supports transferring in the given direction.  





   .. method:: GetObject(self, format, dir=DataObject.Get)

      Returns the pointer to the object which supports the passed format for the specified direction.                  

      ``None`` is returned if the specified `format`  is not supported for this direction `dir`. The returned pointer is owned by :ref:`wx.DataObjectComposite`  itself and shouldn't be deleted by caller. 

                


      :param `format`: 
      :type `format`: wx.DataFormat
      :param `dir`: 
      :type `dir`: DataObject.Direction




      :rtype: :ref:`wx.DataObjectSimple`







      .. versionadded:: 2.9.1 
     








   .. method:: GetReceivedFormat(self)

      Report the format passed to the :meth:`SetData`   method.                  

      This should be the format of the data object within the composite that received data from the clipboard or the DnD operation. You can use this method to find out what kind of data object was received.                  

      :rtype: :ref:`wx.DataFormat`








   .. method:: SetData(self, format, buf)



      :rtype: `bool`








   .. attribute:: AllFormats

      See :meth:`~wx.DataObjectComposite.GetAllFormats`


   .. attribute:: ReceivedFormat

      See :meth:`~wx.DataObjectComposite.GetReceivedFormat`

