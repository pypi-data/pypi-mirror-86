.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.TextCompleter:

==========================================================================================================================================
|phoenix_title|  **wx.TextCompleter**
==========================================================================================================================================

Base class for custom text completer objects.          

Custom completer objects used with :meth:`wx.TextEntry.AutoComplete`   must derive from this class and implement its pure virtual method returning the completions. You would typically use a custom completer when the total number of completions is too big for performance to be acceptable if all of them need to be returned at once but if they can be generated hierarchically, i.e. only the first component initially, then the second one after the user finished entering the first one and so on. 

When inheriting from this class you need to implement its two pure virtual methods. This allows returning the results incrementally and may or not be convenient depending on where do they come from. If you prefer to return all the completions at once, you should inherit from :ref:`wx.TextCompleterSimple`  instead. 

         



.. versionadded:: 2.9.2 
     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TextCompleter</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.TextCompleter_inheritance.png" alt="Inheritance diagram of TextCompleter" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.TextCompleter.html" title="wx.TextCompleter" alt="" coords="5,5,145,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.TextCompleterSimple`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.TextCompleter.GetNext`                                                Called to retrieve the next completion.
:meth:`~wx.TextCompleter.Start`                                                  Function called to start iteration over the completions for the given prefix.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.TextCompleter.Next`                                                   See :meth:`~wx.TextCompleter.GetNext`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.TextCompleter(object)

   Base class for custom text completer objects.



   .. method:: GetNext(self)

      Called to retrieve the next completion.                  

      All completions returned by this function should start with the prefix passed to the last call to :meth:`Start` . 

      Notice that, as :meth:`Start` , this method is called from a worker thread context under MSW. 

                

      :rtype: `string`







      :returns: 

         The next completion or an empty string to indicate that there are no more of them.   








   .. method:: Start(self, prefix)

      Function called to start iteration over the completions for the given prefix.                  

      This function could start a database query, for example, if the results are read from a database. 

      Notice that under some platforms (currently MSW only) it is called from another thread context and so the appropriate synchronization mechanism should be used to access any data also used by the main UI thread. 




      :param `prefix`: The prefix for which completions are to be generated.   
      :type `prefix`: string






      :rtype: `bool`



                  



      :returns: 

         ``True`` to continue with calling :meth:`GetNext`   or ``False`` to indicate that there are no matches and :meth:`GetNext`   shouldn't be called at all.   








   .. attribute:: Next

      See :meth:`~wx.TextCompleter.GetNext`

