.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.framemanager

.. highlight:: python



.. _wx.lib.agw.aui.framemanager.AuiManager_DCP:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.framemanager.AuiManager_DCP**
==========================================================================================================================================

A class similar to :class:`AuiManager` but with a Dummy Center Pane (**DCP**).
The code for this class is still flickery due to the call to :func:`CallAfter`
and the double-update call.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiManager_DCP</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.framemanager.AuiManager_DCP_inheritance.png" alt="Inheritance diagram of AuiManager_DCP" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.framemanager.AuiManager_DCP.html" title="wx.lib.agw.aui.framemanager.AuiManager_DCP" alt="" coords="5,237,336,267"/> <area shape="rect" id="node2" href="wx.lib.agw.aui.framemanager.AuiManager.html" title="wx.lib.agw.aui.framemanager.AuiManager" alt="" coords="23,160,319,189"/> <area shape="rect" id="node3" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="112,83,229,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="67,5,154,35"/> <area shape="rect" id="node5" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="179,5,285,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.aui.framemanager.AuiManager`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.framemanager.AuiManager_DCP.__init__`                     See :meth:`AuiManager.__init__` for the class construction.
:meth:`~wx.lib.agw.aui.framemanager.AuiManager_DCP.Update`                       This method is called after any number of changes are made to any of the
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiManager_DCP(AuiManager)

   A class similar to :class:`AuiManager` but with a Dummy Center Pane (**DCP**).
   The code for this class is still flickery due to the call to :func:`CallAfter`
   and the double-update call.

   .. method:: __init__(self, \*args, \*\*keys)

      See :meth:`AuiManager.__init__` for the class construction. 


   .. method:: Update(self)

      This method is called after any number of changes are made to any of the
      managed panes. :meth:`Update` must be invoked after :meth:`AuiManager.AddPane` or
      :meth:`AuiManager.InsertPane` are called in order to "realize" or "commit" the changes.
      
      In addition, any number of changes may be made to :class:`AuiManager` structures
      (retrieved with :meth:`AuiManager.GetPane`), but to realize the changes,
      :meth:`Update` must be called. This construction allows pane flicker to
      be avoided by updating the whole layout at one time.


