.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.py.sliceshell

.. highlight:: python



.. _wx.py.sliceshell.SlicesShellFrame:

==========================================================================================================================================
|phoenix_title|  **wx.py.sliceshell.SlicesShellFrame**
==========================================================================================================================================

Frame containing the sliceshell component.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SlicesShellFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.py.sliceshell.SlicesShellFrame_inheritance.png" alt="Inheritance diagram of SlicesShellFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.py.sliceshell.SlicesShellFrame.html" title="wx.py.sliceshell.SlicesShellFrame" alt="" coords="91,624,329,653"/> <area shape="rect" id="node2" href="wx.py.frame.Frame.html" title="wx.py.frame.Frame" alt="" coords="35,547,182,576"/> <area shape="rect" id="node3" href="wx.py.frame.ShellFrameMixin.html" title="wx.py.frame.ShellFrameMixin" alt="" coords="206,547,419,576"/> <area shape="rect" id="node4" href="wx.Frame.html" title="wx.Frame" alt="" coords="66,469,151,499"/> <area shape="rect" id="node5" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="31,392,186,421"/> <area shape="rect" id="node6" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,315,193,344"/> <area shape="rect" id="node7" href="wx.Window.html" title="wx.Window" alt="" coords="60,237,157,267"/> <area shape="rect" id="node8" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="44,160,173,189"/> <area shape="rect" id="node9" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node10" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node11" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.py.frame.Frame`, :class:`wx.py.frame.ShellFrameMixin`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.py.sliceshell.SlicesShellFrame.__init__`                              Create SlicesShellFrame instance.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferClose`                           Close buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferCreate`                          Create new buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferDestroy`                         Destroy the current buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferHasChanged`                      Return ``True`` if buffer has changed since last save.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferNew`                             Create new buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferOpen`                            Open file in buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferSave`                            Save buffer to its file.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferSaveACopy`                       Save buffer to a new filename.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferSaveAs`                          Save buffer to a new filename.
:meth:`~wx.py.sliceshell.SlicesShellFrame.bufferSuggestSave`                     Suggest saving changes.  Return ``True`` if user selected Cancel.
:meth:`~wx.py.sliceshell.SlicesShellFrame.DoSaveSettings`                        
:meth:`~wx.py.sliceshell.SlicesShellFrame.hasBuffer`                             Return ``True`` if there is a current buffer.
:meth:`~wx.py.sliceshell.SlicesShellFrame.LoadSettings`                          Called by derived classes to load settings specific to the Frame
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnAbout`                               Display an About window.
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnClose`                               Event handler for closing.
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnEnableShellMode`                     Change between Slices Mode and Shell Mode
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnHelp`                                Show a help dialog.
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnHideFoldingMargin`                   Change between Slices Mode and Shell Mode
:meth:`~wx.py.sliceshell.SlicesShellFrame.OnIdle`                                Event handler for idle time.
:meth:`~wx.py.sliceshell.SlicesShellFrame.SaveSettings`                          Called by derived classes to save Frame settings to a wx.Config object
:meth:`~wx.py.sliceshell.SlicesShellFrame.simpleSave`                            
:meth:`~wx.py.sliceshell.SlicesShellFrame.updateNamespace`                       Update the buffer namespace for autocompletion and calltips.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: SlicesShellFrame(frame.Frame, frame.ShellFrameMixin)

   Frame containing the sliceshell component.

   .. method:: __init__(self, parent=None, id=-1, title='PySlicesShell', pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_FRAME_STYLE, locals=None, InterpClass=None, config=None, dataDir=None, filename=None, \*args, \*\*kwds)

      Create SlicesShellFrame instance.


   .. method:: bufferClose(self)

      Close buffer.


   .. method:: bufferCreate(self, filename=None)

      Create new buffer.


   .. method:: bufferDestroy(self)

      Destroy the current buffer.


   .. method:: bufferHasChanged(self)

      Return ``True`` if buffer has changed since last save.


   .. method:: bufferNew(self)

      Create new buffer.


   .. method:: bufferOpen(self,file=None)

      Open file in buffer.


   .. method:: bufferSave(self)

      Save buffer to its file.


   .. method:: bufferSaveACopy(self)

      Save buffer to a new filename.


   .. method:: bufferSaveAs(self)

      Save buffer to a new filename.


   .. method:: bufferSuggestSave(self)

      Suggest saving changes.  Return ``True`` if user selected Cancel.


   .. method:: DoSaveSettings(self)


   .. method:: hasBuffer(self)

      Return ``True`` if there is a current buffer.


   .. method:: LoadSettings(self)

      Called by derived classes to load settings specific to the Frame


   .. method:: OnAbout(self, event)

      Display an About window.


   .. method:: OnClose(self, event)

      Event handler for closing.


   .. method:: OnEnableShellMode(self,event)

      Change between Slices Mode and Shell Mode


   .. method:: OnHelp(self, event)

      Show a help dialog.


   .. method:: OnHideFoldingMargin(self,event)

      Change between Slices Mode and Shell Mode


   .. method:: OnIdle(self, event)

      Event handler for idle time.


   .. method:: SaveSettings(self, force=False)

      Called by derived classes to save Frame settings to a wx.Config object


   .. method:: simpleSave(self,confirmed=False)


   .. method:: updateNamespace(self)

      Update the buffer namespace for autocompletion and calltips.


