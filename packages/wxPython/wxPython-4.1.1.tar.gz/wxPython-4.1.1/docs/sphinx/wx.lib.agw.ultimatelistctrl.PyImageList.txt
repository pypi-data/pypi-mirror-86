.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.ultimatelistctrl

.. highlight:: python



.. _wx.lib.agw.ultimatelistctrl.PyImageList:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.ultimatelistctrl.PyImageList**
==========================================================================================================================================

A :class:`PyImageList` contains a list of images. Images can have masks for
transparent drawing, and can be made from a variety of sources including
bitmaps and icons.

:class:`PyImageList` is used in conjunction with :class:`UltimateListCtrl`.

:note: The main improvements that :class:`PyImageList` introduces is the removal
 of the limitation of same-size images inside the image list. If you use
 the style ``IL_VARIABLE_SIZE`` then each image can have any size (in terms
 of width and height).



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PyImageList</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.ultimatelistctrl.PyImageList_inheritance.png" alt="Inheritance diagram of PyImageList" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.ultimatelistctrl.PyImageList.html" title="wx.lib.agw.ultimatelistctrl.PyImageList" alt="" coords="5,5,280,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.__init__`                        Default class constructor.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.Add`                             Adds a new image or images using a bitmap.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.AddIcon`                         Adds a new image using an icon.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.AddWithColourMask`               Adds a new image or images using a bitmap and a colour mask.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.Draw`                            Draws a specified image onto a device context.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.GetBitmap`                       Returns the bitmap corresponding to the given `index`, or :class:`NullBitmap`
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.GetIcon`                         Returns the icon corresponding to the given `index`, or :class:`NullIcon`
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.GetImageCount`                   Returns the number of images in the list.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.GetSize`                         Retrieves the size of an image in the list.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.Remove`                          Removes the image at the given position.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.RemoveAll`                       Removes all the images in the list.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.Replace`                         Replaces the existing image with the new bitmap.
:meth:`~wx.lib.agw.ultimatelistctrl.PyImageList.ReplaceIcon`                     Replaces the existing image with the new icon.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PyImageList(object)

   A :class:`PyImageList` contains a list of images. Images can have masks for
   transparent drawing, and can be made from a variety of sources including
   bitmaps and icons.
   
   :class:`PyImageList` is used in conjunction with :class:`UltimateListCtrl`.
   
   :note: The main improvements that :class:`PyImageList` introduces is the removal
    of the limitation of same-size images inside the image list. If you use
    the style ``IL_VARIABLE_SIZE`` then each image can have any size (in terms
    of width and height).

   .. method:: __init__(self, width, height, mask=True, initialCount=1, style=IL_VARIABLE_SIZE)

      Default class constructor.
      
      :param `width`: the width of the images in the image list, in pixels (unused
       if you specify the ``IL_VARIABLE_SIZE`` style;
      :param `height`: the height of the images in the image list, in pixels (unused
       if you specify the ``IL_VARIABLE_SIZE`` style;
      :param `mask`: ``True`` if masks should be created for all images (unused in
       :class:`PyImageList`);
      :param `initialCount`: the initial size of the list (unused in :class:`PyImageList`);
      :param `style`: can be one of the following bits:
      
       ==================== ===== =================================
       Style Flag           Value Description
       ==================== ===== =================================
       ``IL_FIXED_SIZE``        0 All the images in :class:`PyImageList` have the same size (width, height)
       ``IL_VARIABLE_SIZE``     1 Each image can have any size (in terms of width and height)
       ==================== ===== =================================


   .. method:: Add(self, bitmap)

      Adds a new image or images using a bitmap.
      
      :param `bitmap`: a valid :class:`wx.Bitmap` object.
      
      :return: The new zero-based image index.
      
      :note: If the bitmap is wider than the images in the list and you are not using
       the ``IL_VARIABLE_SIZE`` style, then the bitmap will automatically be split
       into smaller images, each matching the dimensions of the image list.


   .. method:: AddIcon(self, icon)

      Adds a new image using an icon.
      
      :param `icon`: a valid :class:`Icon` object.
      
      :return: The new zero-based image index.
      
      :note: If the icon is wider than the images in the list and you are not using
       the ``IL_VARIABLE_SIZE`` style, then the icon will automatically be split
       into smaller images, each matching the dimensions of the image list.


   .. method:: AddWithColourMask(self, bitmap, maskColour)

      Adds a new image or images using a bitmap and a colour mask.
      
      :param `bitmap`: a valid :class:`wx.Bitmap` object;
      :param `colour`: an instance of :class:`wx.Colour`, a colour indicating which parts
       of the image are transparent.
      
      :return: The new zero-based image index.
      
      :note: If the bitmap is wider than the images in the list and you are not using
       the ``IL_VARIABLE_SIZE`` style, then the bitmap will automatically be split
       into smaller images, each matching the dimensions of the image list.


   .. method:: Draw(self, index, dc, x, y, flags, solidBackground=True)

      Draws a specified image onto a device context.
      
      :param `index`: the image index, starting from zero;
      :param `dc`: an instance of :class:`wx.DC`;
      :param `x`: x position on the device context;
      :param `y`: y position on the device context;
      :param `flags`: how to draw the image. A bitlist of a selection of the following:
      
       ================================= =======================================
       Flag Paarameter                   Description
       ================================= =======================================
       ``wx.IMAGELIST_DRAW_NORMAL``      Draw the image normally
       ``wx.IMAGELIST_DRAW_TRANSPARENT`` Draw the image with transparency
       ``wx.IMAGELIST_DRAW_SELECTED``    Draw the image in selected state
       ``wx.IMAGELIST_DRAW_FOCUSED``     Draw the image in a focused state
       ================================= =======================================
      
      :param `solidBackground`: currently unused.


   .. method:: GetBitmap(self, index)

      Returns the bitmap corresponding to the given `index`, or :class:`NullBitmap`
      if the index is invalid.
      
      :param `index`: the bitmap index.


   .. method:: GetIcon(self, index)

      Returns the icon corresponding to the given `index`, or :class:`NullIcon`
      if the index is invalid.
      
      :param `index`: the icon index.


   .. method:: GetImageCount(self)

      Returns the number of images in the list. 


   .. method:: GetSize(self, index)

      Retrieves the size of an image in the list.
      
      :param `index`: the zero-based index of the image.
      
      :return: a tuple of `(width, height)` properties of the chosen bitmap.


   .. method:: Remove(self, index)

      Removes the image at the given position.
      
      :param `index`: the zero-based index of the image to be removed.


   .. method:: RemoveAll(self)

      Removes all the images in the list. 


   .. method:: Replace(self, index, bitmap)

      Replaces the existing image with the new bitmap.
      
      :param `index`: the index at which the image should be replaced;
      :param `bitmap`: the new bitmap to add to the image list, an instance of
       :class:`wx.Bitmap`.


   .. method:: ReplaceIcon(self, index, icon)

      Replaces the existing image with the new icon.
      
      :param `index`: the index at which the image should be replaced;
      :param `icon`: the new icon to add to the image list, an instance of
       :class:`Icon`.


