.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ListView:

==========================================================================================================================================
|phoenix_title|  **wx.ListView**
==========================================================================================================================================

This class currently simply presents a simpler to use interface for the :ref:`wx.ListCtrl`  –  it can be thought of as a `façade`  for that complicated class.          

Using it is preferable to using :ref:`wx.ListCtrl`  directly whenever possible because in the future some ports might implement :ref:`wx.ListView`  but not the full set of :ref:`wx.ListCtrl`  features. 

Other than different interface, this class is identical to :ref:`wx.ListCtrl`. In particular, it uses the same events, same window styles and so on. 







         



.. seealso:: :meth:`wx.ListView.SetColumnImage`     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ListView</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ListView_inheritance.png" alt="Inheritance diagram of ListView" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ListView.html" title="wx.ListView" alt="" coords="59,392,159,421"/> <area shape="rect" id="node2" href="wx.ListCtrl.html" title="wx.ListCtrl" alt="" coords="63,315,154,344"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/../no_appearance.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/../no_appearance.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.listview.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ListView.__init__`                                                    Default constructor.
:meth:`~wx.ListView.ClearColumnImage`                                            Resets the column image –  after calling this function, no image will be shown.
:meth:`~wx.ListView.Focus`                                                       Sets focus to the item with the given `index`.
:meth:`~wx.ListView.GetClassDefaultAttributes`                                   
:meth:`~wx.ListView.GetFirstSelected`                                            Returns the first selected item in a (presumably) multiple selection control.
:meth:`~wx.ListView.GetFocusedItem`                                              Returns the currently focused item or -1 if none.
:meth:`~wx.ListView.GetNextSelected`                                             Used together with :meth:`~ListView.GetFirstSelected`   to iterate over all selected items in the control.
:meth:`~wx.ListView.IsSelected`                                                  Returns ``True`` if the item with the given `index`  is selected, ``False`` otherwise.
:meth:`~wx.ListView.Select`                                                      Selects or unselects the given item.
:meth:`~wx.ListView.SetColumnImage`                                              Sets the column image for the specified column.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.ListView.FirstSelected`                                               See :meth:`~wx.ListView.GetFirstSelected`
:attr:`~wx.ListView.FocusedItem`                                                 See :meth:`~wx.ListView.GetFocusedItem`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ListView(ListCtrl)

   **Possible constructors**::

       ListView()
       
       ListView(parent, winid=ID_ANY, pos=DefaultPosition, size=DefaultSize,
                style=LC_REPORT, validator=DefaultValidator, name=ListCtrlNameStr)
       
   
   This class currently simply presents a simpler to use interface for
   the ListCtrl  it can be thought of as a façade for that complicated
   class.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, winid=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=LC_REPORT, validator=DefaultValidator, name=ListCtrlNameStr)`
      
      Constructor, creating and showing a listview control.                  
      
      
      
      
      :param `parent`: Parent window. Must not be ``None``.   
      :type `parent`: wx.Window
      :param `winid`: Window identifier. The value ``wx.ID_ANY`` indicates a default value.   
      :type `winid`: wx.WindowID
      :param `pos`: Window position. If :ref:`wx.DefaultPosition`  is specified then a default position is chosen.   
      :type `pos`: wx.Point
      :param `size`: Window size. If :ref:`wx.DefaultSize`  is specified then the window is sized appropriately.   
      :type `size`: wx.Size
      :param `style`: Window style. See :ref:`wx.ListCtrl`.   
      :type `style`: long
      :param `validator`: Window validator.   
      :type `validator`: wx.Validator
      :param `name`: Window name.  
      :type `name`: string
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
                        
      
      
      
      .. seealso:: :meth:`Create` , :ref:`wx.Validator`    
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: ClearColumnImage(self, col)

      Resets the column image –  after calling this function, no image will be shown.                  




      :param `col`: the column to clear image for  
      :type `col`: int




                  



      .. seealso:: :meth:`SetColumnImage`     








   .. method:: Focus(self, index)

      Sets focus to the item with the given `index`.                  


      :param `index`: 
      :type `index`: long







   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: GetFirstSelected(self)

      Returns the first selected item in a (presumably) multiple selection control.                  

      Together with :meth:`GetNextSelected`   it can be used to iterate over all selected items in the control. 

                

      :rtype: `long`







      :returns: 

         The first selected item, if any, -1 otherwise.   








   .. method:: GetFocusedItem(self)

      Returns the currently focused item or -1 if none.                  

                

      :rtype: `long`







      .. seealso:: :meth:`IsSelected` , :meth:`Focus`     








   .. method:: GetNextSelected(self, item)

      Used together with :meth:`GetFirstSelected`   to iterate over all selected items in the control.                  

                


      :param `item`: 
      :type `item`: long




      :rtype: `long`







      :returns: 

         Returns the next selected item or -1 if there are no more of them.   








   .. method:: IsSelected(self, index)

      Returns ``True`` if the item with the given `index`  is selected, ``False`` otherwise.                  

                


      :param `index`: 
      :type `index`: long




      :rtype: `bool`







      .. seealso:: :meth:`GetFirstSelected` , :meth:`GetNextSelected`     








   .. method:: Select(self, n, on=True)

      Selects or unselects the given item.                  

      Notice that this method inherits the unusual behaviour of :meth:`wx.ListCtrl.SetItemState`   which sends a wxEVT_LIST_ITEM_SELECTED event when it is used to select an item, contrary to the usual rule that only the user actions result in selection. 




      :param `n`: the item to select or unselect   
      :type `n`: long
      :param `on`: if ``True`` (default), selects the item, otherwise unselects it   
      :type `on`: bool






                  





   .. method:: SetColumnImage(self, col, image)

      Sets the column image for the specified column.                  

      To use the column images, the control must have a valid image list with at least one image. 




      :param `col`: the column to set image for   
      :type `col`: int
      :param `image`: the index of the column image in the controls image list   
      :type `image`: int






                  





   .. attribute:: FirstSelected

      See :meth:`~wx.ListView.GetFirstSelected`


   .. attribute:: FocusedItem

      See :meth:`~wx.ListView.GetFocusedItem`

