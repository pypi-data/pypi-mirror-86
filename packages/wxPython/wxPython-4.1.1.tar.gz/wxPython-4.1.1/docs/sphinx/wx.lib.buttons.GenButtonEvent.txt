.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.buttons

.. highlight:: python



.. _wx.lib.buttons.GenButtonEvent:

==========================================================================================================================================
|phoenix_title|  **wx.lib.buttons.GenButtonEvent**
==========================================================================================================================================

Event sent from the generic buttons when the button is activated. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GenButtonEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.buttons.GenButtonEvent_inheritance.png" alt="Inheritance diagram of GenButtonEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.buttons.GenButtonEvent.html" title="wx.lib.buttons.GenButtonEvent" alt="" coords="5,237,229,267"/> <area shape="rect" id="node2" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="43,160,192,189"/> <area shape="rect" id="node3" href="wx.Event.html" title="wx.Event" alt="" coords="76,83,159,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="74,5,161,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.CommandEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.buttons.GenButtonEvent.__init__`                                  Default class constructor.
:meth:`~wx.lib.buttons.GenButtonEvent.GetButtonObj`                              Returns the object associated with this event.
:meth:`~wx.lib.buttons.GenButtonEvent.GetIsDown`                                 Returns the button toggle status as ``True`` if the button is down, ``False``
:meth:`~wx.lib.buttons.GenButtonEvent.SetButtonObj`                              Sets the event object for the event.
:meth:`~wx.lib.buttons.GenButtonEvent.SetIsDown`                                 Set the button toggle status as 'down' or 'up'.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: GenButtonEvent(wx.CommandEvent)

   Event sent from the generic buttons when the button is activated. 

   .. method:: __init__(self, eventType, id)

      Default class constructor.
      
      :param integer `eventType`: the event type;
      :param integer `id`: the event identifier.


   .. method:: GetButtonObj(self)

      Returns the object associated with this event.
      
      :return: An instance of :class:`GenButton`.


   .. method:: GetIsDown(self)

      Returns the button toggle status as ``True`` if the button is down, ``False``
      otherwise.
      
      :rtype: bool


   .. method:: SetButtonObj(self, btn)

      Sets the event object for the event.
      
      :param `btn`: the button object, an instance of :class:`GenButton`.


   .. method:: SetIsDown(self, isDown)

      Set the button toggle status as 'down' or 'up'.
      
      :param bool `isDown`: ``True`` if the button is clicked, ``False`` otherwise.


