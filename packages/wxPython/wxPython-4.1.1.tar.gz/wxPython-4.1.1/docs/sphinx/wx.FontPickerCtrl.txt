.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.FontPickerCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.FontPickerCtrl**
==========================================================================================================================================

This control allows the user to select a font.          

The generic implementation is a button which brings up a :ref:`wx.FontDialog`  when clicked. Native implementation may differ but this is usually a (small) widget which give access to the font-chooser dialog. It is only available if  ``USE_FONTPICKERCTRL``   is set to 1 (the default). 





.. _FontPickerCtrl-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.FNTP_DEFAULT_STYLE``: The default style: ``wx.FNTP_FONTDESC_AS_LABEL`` | ``wx.FNTP_USEFONT_FOR_LABEL``.  
- ``wx.FNTP_USE_TEXTCTRL``: Creates a text control to the left of the picker button which is completely managed by the :ref:`wx.FontPickerCtrl`  and which can be used by the user to specify a font (see SetSelectedFont). The text control is automatically synchronized with button's value. Use functions defined in :ref:`wx.PickerBase`  to modify the text control.  
- ``wx.FNTP_FONTDESC_AS_LABEL``: Keeps the label of the button updated with the fontface name and the font size. E.g. choosing "Times New Roman bold, italic with
              size 10" from the fontdialog, will update the label (overwriting any previous label) with the "Times New Roman, 10" text.  
- ``wx.FNTP_USEFONT_FOR_LABEL``: Uses the currently selected font to draw the label of the button.  








.. _FontPickerCtrl-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.FontPickerEvent` parameter.


- EVT_FONTPICKER_CHANGED: The user changed the font selected in the control either using the button or using text control (see ``wx.FNTP_USE_TEXTCTRL``; note that in this case the event is fired only if the user's input is valid, i.e. recognizable).  








         



.. seealso:: :ref:`wx.FontDialog`, :ref:`wx.FontPickerEvent`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>FontPickerCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.FontPickerCtrl_inheritance.png" alt="Inheritance diagram of FontPickerCtrl" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.FontPickerCtrl.html" title="wx.FontPickerCtrl" alt="" coords="41,392,177,421"/> <area shape="rect" id="node2" href="wx.PickerBase.html" title="wx.PickerBase" alt="" coords="50,315,167,344"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.fontpickerctrl.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/wx.fontpickerctrl.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.fontpickerctrl.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.FontPickerCtrl.__init__`                                              
:meth:`~wx.FontPickerCtrl.Create`                                                Creates this widget with given parameters.
:meth:`~wx.FontPickerCtrl.GetClassDefaultAttributes`                             
:meth:`~wx.FontPickerCtrl.GetMaxPointSize`                                       Returns the maximum point size value allowed for the user-chosen font.
:meth:`~wx.FontPickerCtrl.GetMinPointSize`                                       Returns the minimum point size value allowed for the user-chosen font.
:meth:`~wx.FontPickerCtrl.GetSelectedColour`                                     Returns the currently selected colour.
:meth:`~wx.FontPickerCtrl.GetSelectedFont`                                       Returns the currently selected font.
:meth:`~wx.FontPickerCtrl.SetMaxPointSize`                                       Sets the maximum point size value allowed for the user-chosen font.
:meth:`~wx.FontPickerCtrl.SetMinPointSize`                                       Sets the minimum point size value allowed for the user-chosen font.
:meth:`~wx.FontPickerCtrl.SetSelectedColour`                                     Sets the font colour.
:meth:`~wx.FontPickerCtrl.SetSelectedFont`                                       Sets the currently selected font.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.FontPickerCtrl.MaxPointSize`                                          See :meth:`~wx.FontPickerCtrl.GetMaxPointSize` and :meth:`~wx.FontPickerCtrl.SetMaxPointSize`
:attr:`~wx.FontPickerCtrl.MinPointSize`                                          See :meth:`~wx.FontPickerCtrl.GetMinPointSize` and :meth:`~wx.FontPickerCtrl.SetMinPointSize`
:attr:`~wx.FontPickerCtrl.SelectedColour`                                        See :meth:`~wx.FontPickerCtrl.GetSelectedColour` and :meth:`~wx.FontPickerCtrl.SetSelectedColour`
:attr:`~wx.FontPickerCtrl.SelectedFont`                                          See :meth:`~wx.FontPickerCtrl.GetSelectedFont` and :meth:`~wx.FontPickerCtrl.SetSelectedFont`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.FontPickerCtrl(PickerBase)

   **Possible constructors**::

       FontPickerCtrl()
       
       FontPickerCtrl(parent, id=ID_ANY, font=NullFont, pos=DefaultPosition,
                      size=DefaultSize, style=FNTP_DEFAULT_STYLE, validator=DefaultValidator,
                      name=FontPickerCtrlNameStr)
       
   
   This control allows the user to select a font.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, font=NullFont, pos=DefaultPosition, size=DefaultSize, style=FNTP_DEFAULT_STYLE, validator=DefaultValidator, name=FontPickerCtrlNameStr)`
      
      Initializes the object and calls :meth:`Create`   with all the parameters.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `font`: 
      :type `font`: wx.Font
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `validator`: 
      :type `validator`: wx.Validator
      :param `name`: 
      :type `name`: string
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, font=NullFont, pos=DefaultPosition, size=DefaultSize, style=FNTP_DEFAULT_STYLE, validator=DefaultValidator, name=FontPickerCtrlNameStr)

      Creates this widget with given parameters.                  




      :param `parent`: Parent window, must not be non-NULL.   
      :type `parent`: wx.Window
      :param `id`: The identifier for the control.   
      :type `id`: wx.WindowID
      :param `font`: The initial font shown in the control. If :ref:`wx.NullFont`  is given, the default font is used.   
      :type `font`: wx.Font
      :param `pos`: Initial position.   
      :type `pos`: wx.Point
      :param `size`: Initial size.   
      :type `size`: wx.Size
      :param `style`: The window style, see ``FNTP_`` flags.   
      :type `style`: long
      :param `validator`: Validator which can be used for additional date checks.   
      :type `validator`: wx.Validator
      :param `name`: Control name.  
      :type `name`: string




















      :rtype: `bool`



                  



      :returns: 

         ``True`` if the control was successfully created or ``False`` if creation failed.   








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: GetMaxPointSize(self)

      Returns the maximum point size value allowed for the user-chosen font.                  

      :rtype: `int`








   .. method:: GetMinPointSize(self)

      Returns the minimum point size value allowed for the user-chosen font.                  

                

      :rtype: `int`







      .. versionadded:: 4.1/wxWidgets-3.1.1  
     








   .. method:: GetSelectedColour(self)

      Returns the currently selected colour.                  

      Note that the colour of the font can only be set by the user under Windows currently, elsewhere this method simply returns the colour previously set by :meth:`SetSelectedColour`   or black if it hadn't been called. 

                

      :rtype: :ref:`wx.Colour`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: GetSelectedFont(self)

      Returns the currently selected font.                  

      Note that this function is completely different from :meth:`wx.Window.GetFont` .                  

      :rtype: :ref:`wx.Font`








   .. method:: SetMaxPointSize(self, max)

      Sets the maximum point size value allowed for the user-chosen font.                  

      The default value is 100. Note that big fonts can require a lot of memory and ``CPU`` time both for creation and for rendering; thus, specially because the user has the option to specify the fontsize through a text control (see ``wx.FNTP_USE_TEXTCTRL``), it's a good idea to put a limit to the maximum font size when huge fonts do not make much sense.                  


      :param `max`: 
      :type `max`: int







   .. method:: SetMinPointSize(self, min)

      Sets the minimum point size value allowed for the user-chosen font.                  

      The default value is 0. 

                


      :param `min`: 
      :type `min`: int






      .. versionadded:: 4.1/wxWidgets-3.1.1  
     








   .. method:: SetSelectedColour(self, colour)

      Sets the font colour.                  

      The font colour is actually only used under Windows currently, but this function is available under all platforms for consistency. 

                


      :param `colour`: 
      :type `colour`: wx.Colour






      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: SetSelectedFont(self, font)

      Sets the currently selected font.                  

      Note that this function is completely different from :meth:`wx.Window.SetFont` .                  


      :param `font`: 
      :type `font`: wx.Font







   .. attribute:: MaxPointSize

      See :meth:`~wx.FontPickerCtrl.GetMaxPointSize` and :meth:`~wx.FontPickerCtrl.SetMaxPointSize`


   .. attribute:: MinPointSize

      See :meth:`~wx.FontPickerCtrl.GetMinPointSize` and :meth:`~wx.FontPickerCtrl.SetMinPointSize`


   .. attribute:: SelectedColour

      See :meth:`~wx.FontPickerCtrl.GetSelectedColour` and :meth:`~wx.FontPickerCtrl.SetSelectedColour`


   .. attribute:: SelectedFont

      See :meth:`~wx.FontPickerCtrl.GetSelectedFont` and :meth:`~wx.FontPickerCtrl.SetSelectedFont`

