.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.grid.GridStringTable:

==========================================================================================================================================
|phoenix_title|  **wx.grid.GridStringTable**
==========================================================================================================================================

Simplest type of data table for a grid for small tables of strings that are stored in memory.          

The number of rows and columns in the table can be specified initially but may also be changed later dynamically.           




|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridStringTable</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.grid.GridStringTable_inheritance.png" alt="Inheritance diagram of GridStringTable" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.grid.GridStringTable.html" title="wx.grid.GridStringTable" alt="" coords="5,5,179,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.grid.GridStringTable.__init__`                                        Default constructor creates an empty table.
:meth:`~wx.grid.GridStringTable.AppendCols`                                      
:meth:`~wx.grid.GridStringTable.AppendRows`                                      
:meth:`~wx.grid.GridStringTable.Clear`                                           
:meth:`~wx.grid.GridStringTable.DeleteCols`                                      
:meth:`~wx.grid.GridStringTable.DeleteRows`                                      
:meth:`~wx.grid.GridStringTable.GetColLabelValue`                                
:meth:`~wx.grid.GridStringTable.GetCornerLabelValue`                             
:meth:`~wx.grid.GridStringTable.GetNumberCols`                                   
:meth:`~wx.grid.GridStringTable.GetNumberRows`                                   
:meth:`~wx.grid.GridStringTable.GetRowLabelValue`                                
:meth:`~wx.grid.GridStringTable.GetValue`                                        
:meth:`~wx.grid.GridStringTable.InsertCols`                                      
:meth:`~wx.grid.GridStringTable.InsertRows`                                      
:meth:`~wx.grid.GridStringTable.SetColLabelValue`                                
:meth:`~wx.grid.GridStringTable.SetCornerLabelValue`                             
:meth:`~wx.grid.GridStringTable.SetRowLabelValue`                                
:meth:`~wx.grid.GridStringTable.SetValue`                                        
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.grid.GridStringTable.CornerLabelValue`                                See :meth:`~wx.grid.GridStringTable.GetCornerLabelValue` and :meth:`~wx.grid.GridStringTable.SetCornerLabelValue`
:attr:`~wx.grid.GridStringTable.NumberCols`                                      See :meth:`~wx.grid.GridStringTable.GetNumberCols`
:attr:`~wx.grid.GridStringTable.NumberRows`                                      See :meth:`~wx.grid.GridStringTable.GetNumberRows`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.grid.GridStringTable(object)

   **Possible constructors**::

       GridStringTable()
       
       GridStringTable(numRows, numCols)
       
   
   Simplest type of data table for a grid for small tables of strings
   that are stored in memory.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor creates an empty table.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, numRows, numCols)`
      
      Constructor taking number of rows and columns.                  
      
      
      :param `numRows`: 
      :type `numRows`: int
      :param `numCols`: 
      :type `numCols`: int
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: AppendCols(self, numCols=1)




      :param `numCols`: 
      :type `numCols`: int




      :rtype: `bool`








   .. method:: AppendRows(self, numRows=1)




      :param `numRows`: 
      :type `numRows`: int




      :rtype: `bool`








   .. method:: Clear(self)






   .. method:: DeleteCols(self, pos=0, numCols=1)




      :param `pos`: 
      :type `pos`: int
      :param `numCols`: 
      :type `numCols`: int




      :rtype: `bool`








   .. method:: DeleteRows(self, pos=0, numRows=1)




      :param `pos`: 
      :type `pos`: int
      :param `numRows`: 
      :type `numRows`: int




      :rtype: `bool`








   .. method:: GetColLabelValue(self, col)




      :param `col`: 
      :type `col`: int




      :rtype: `string`








   .. method:: GetCornerLabelValue(self)



      :rtype: `string`








   .. method:: GetNumberCols(self)



      :rtype: `int`








   .. method:: GetNumberRows(self)



      :rtype: `int`








   .. method:: GetRowLabelValue(self, row)




      :param `row`: 
      :type `row`: int




      :rtype: `string`








   .. method:: GetValue(self, row, col)




      :param `row`: 
      :type `row`: int
      :param `col`: 
      :type `col`: int




      :rtype: `string`








   .. method:: InsertCols(self, pos=0, numCols=1)




      :param `pos`: 
      :type `pos`: int
      :param `numCols`: 
      :type `numCols`: int




      :rtype: `bool`








   .. method:: InsertRows(self, pos=0, numRows=1)




      :param `pos`: 
      :type `pos`: int
      :param `numRows`: 
      :type `numRows`: int




      :rtype: `bool`








   .. method:: SetColLabelValue(self, col, )




      :param `col`: 
      :type `col`: int
      :param ``: 
      :type ``: string







   .. method:: SetCornerLabelValue(self)




      :param ``: 
      :type ``: string







   .. method:: SetRowLabelValue(self, row, )




      :param `row`: 
      :type `row`: int
      :param ``: 
      :type ``: string







   .. method:: SetValue(self, row, col, s)




      :param `row`: 
      :type `row`: int
      :param `col`: 
      :type `col`: int
      :param `s`: 
      :type `s`: string







   .. attribute:: CornerLabelValue

      See :meth:`~wx.grid.GridStringTable.GetCornerLabelValue` and :meth:`~wx.grid.GridStringTable.SetCornerLabelValue`


   .. attribute:: NumberCols

      See :meth:`~wx.grid.GridStringTable.GetNumberCols`


   .. attribute:: NumberRows

      See :meth:`~wx.grid.GridStringTable.GetNumberRows`

