.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.ogl.basic

.. highlight:: python



.. _wx.lib.ogl.basic.ControlPoint:

==========================================================================================================================================
|phoenix_title|  **wx.lib.ogl.basic.ControlPoint**
==========================================================================================================================================

The :class:`wx.ControlPoint` class.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ControlPoint</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.ogl.basic.ControlPoint_inheritance.png" alt="Inheritance diagram of ControlPoint" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.ogl.basic.ControlPoint.html" title="wx.lib.ogl.basic.ControlPoint" alt="" coords="21,237,228,267"/> <area shape="rect" id="node2" href="wx.lib.ogl.basic.RectangleShape.html" title="wx.lib.ogl.basic.RectangleShape" alt="" coords="9,160,240,189"/> <area shape="rect" id="node3" href="wx.lib.ogl.basic.Shape.html" title="wx.lib.ogl.basic.Shape" alt="" coords="41,83,208,112"/> <area shape="rect" id="node4" href="wx.lib.ogl.basic.ShapeEvtHandler.html" title="wx.lib.ogl.basic.ShapeEvtHandler" alt="" coords="5,5,244,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.ogl.basic.PolygonControlPoint`, :class:`wx.lib.ogl.composit.DivisionControlPoint`, :class:`wx.lib.ogl.divided.DividedShapeControlPoint`, :class:`wx.lib.ogl.lines.LineControlPoint`

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.ogl.basic.RectangleShape`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.ogl.basic.ControlPoint.__init__`                                  Default class constructor
:meth:`~wx.lib.ogl.basic.ControlPoint.GetAttachmentPosition`                     Get the attachment position.
:meth:`~wx.lib.ogl.basic.ControlPoint.GetNumberOfAttachments`                    Get the number of attachments.
:meth:`~wx.lib.ogl.basic.ControlPoint.OnBeginDragLeft`                           The begin drag left handler.
:meth:`~wx.lib.ogl.basic.ControlPoint.OnDragLeft`                                The drag left handler.
:meth:`~wx.lib.ogl.basic.ControlPoint.OnDraw`                                    The draw handler.
:meth:`~wx.lib.ogl.basic.ControlPoint.OnDrawContents`                            not implemented???
:meth:`~wx.lib.ogl.basic.ControlPoint.OnEndDragLeft`                             The end drag left handler.
:meth:`~wx.lib.ogl.basic.ControlPoint.OnErase`                                   The erase handler.
:meth:`~wx.lib.ogl.basic.ControlPoint.SetEraseObject`                            Set the erase object ???
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: ControlPoint(RectangleShape)

   The :class:`wx.ControlPoint` class.

   .. method:: __init__(self, theCanvas, object, size, the_xoffset, the_yoffset, the_type)

      Default class constructor
      
      :param `theCanvas`: a :class:`~lib.ogl.Canvas`
      :param `object`: the shape, instance of :class:`~lib.ogl.Shape`
      :param float `size`: the size
      :param float `the_xoffset`: the x position
      :param float `the_yoffset`: the y position
      :param int `the_type`: one of the following types ???
      
       ======================================== ==================================
       Control point type                       Description
       ======================================== ==================================
       `CONTROL_POINT_VERTICAL`                 Vertical
       `CONTROL_POINT_HORIZONTAL`               Horizontal
       `CONTROL_POINT_DIAGONAL`                 Diagonal
       ======================================== ==================================


   .. method:: GetAttachmentPosition(self, attachment, nth = 0, no_arcs = 1, line = None)

      Get the attachment position.
      
      :param `attachment`: the attachment ???
      :param `nth`: get nth attachment ???
      :param `no_arcs`: ???
      :param `line`: ???


   .. method:: GetNumberOfAttachments(self)

      Get the number of attachments.


   .. method:: OnBeginDragLeft(self, x, y, keys = 0, attachment = 0)

      The begin drag left handler.


   .. method:: OnDragLeft(self, draw, x, y, keys = 0, attachment = 0)

      The drag left handler.


   .. method:: OnDraw(self, dc)

      The draw handler.


   .. method:: OnDrawContents(self, dc)

      not implemented???


   .. method:: OnEndDragLeft(self, x, y, keys = 0, attachment = 0)

      The end drag left handler.


   .. method:: OnErase(self, dc)

      The erase handler.


   .. method:: SetEraseObject(self, er)

      Set the erase object ???
      
      :param `er`: the object


