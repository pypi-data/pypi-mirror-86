.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.hypertreelist

.. highlight:: python



.. _wx.lib.agw.hypertreelist.TreeListColumnInfo:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.hypertreelist.TreeListColumnInfo**
==========================================================================================================================================

Class used to store information (width, alignment flags, colours, etc...) about a
:class:`HyperTreeList` column header.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TreeListColumnInfo</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.hypertreelist.TreeListColumnInfo_inheritance.png" alt="Inheritance diagram of TreeListColumnInfo" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.hypertreelist.TreeListColumnInfo.html" title="wx.lib.agw.hypertreelist.TreeListColumnInfo" alt="" coords="5,5,312,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.__init__`                    Default class constructor.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetAlignment`                Returns the column text alignment.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetColour`                   Returns the column text colour.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetFont`                     Returns the column text font.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetImage`                    Returns the column image index.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetSelectedImage`            Returns the column image index in the selected state.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetText`                     Returns the column header label.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.GetWidth`                    Returns the column header width in pixels.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.IsEditable`                  Returns ``True`` if the column is editable, ``False`` otherwise.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.IsShown`                     Returns ``True`` if the column is shown, ``False`` if it is hidden.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetAlignment`                Sets the column text alignment.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetColour`                   Sets the column text colour.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetEditable`                 Sets the column as editable or non-editable.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetFont`                     Sets the column text font.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetImage`                    Sets the column image index.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetSelectedImage`            Sets the column image index in the selected state.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetShown`                    Sets the column as shown or hidden.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetText`                     Sets the column header label.
:meth:`~wx.lib.agw.hypertreelist.TreeListColumnInfo.SetWidth`                    Sets the column header width.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: TreeListColumnInfo(object)

   Class used to store information (width, alignment flags, colours, etc...) about a
   :class:`HyperTreeList` column header.

   .. method:: __init__(self, input="", width=_DEFAULT_COL_WIDTH, flag=wx.ALIGN_LEFT, image=-1, shown=True, colour=None, edit=False)

      Default class constructor.
      
      :param `input`: can be a string (representing the column header text) or
       another instance of :class:`TreeListColumnInfo`. In the latter case, all the
       other input parameters are not used;
      :param `width`: the column width in pixels;
      :param `flag`: the column alignment flag, one of ``wx.ALIGN_LEFT``,
       ``wx.ALIGN_RIGHT``, ``wx.ALIGN_CENTER``;
      :param `image`: an index within the normal image list assigned to
       :class:`HyperTreeList` specifying the image to use for the column;
      :param `shown`: ``True`` to show the column, ``False`` to hide it;
      :param `colour`: a valid :class:`wx.Colour`, representing the text foreground colour
       for the column;
      :param `edit`: ``True`` to set the column as editable, ``False`` otherwise.


   .. method:: GetAlignment(self)

      Returns the column text alignment. 


   .. method:: GetColour(self)

      Returns the column text colour. 


   .. method:: GetFont(self)

      Returns the column text font. 


   .. method:: GetImage(self)

      Returns the column image index. 


   .. method:: GetSelectedImage(self)

      Returns the column image index in the selected state. 


   .. method:: GetText(self)

      Returns the column header label. 


   .. method:: GetWidth(self)

      Returns the column header width in pixels. 


   .. method:: IsEditable(self)

      Returns ``True`` if the column is editable, ``False`` otherwise. 


   .. method:: IsShown(self)

      Returns ``True`` if the column is shown, ``False`` if it is hidden. 


   .. method:: SetAlignment(self, flag)

      Sets the column text alignment.
      
      :param `flag`: the alignment flag, one of ``wx.ALIGN_LEFT``, ``wx.ALIGN_RIGHT``,
       ``wx.ALIGN_CENTER``.


   .. method:: SetColour(self, colour)

      Sets the column text colour.
      
      :param `colour`: a valid :class:`wx.Colour` object.


   .. method:: SetEditable(self, edit)

      Sets the column as editable or non-editable.
      
      :param `edit`: ``True`` if the column should be editable, ``False`` otherwise.


   .. method:: SetFont(self, font)

      Sets the column text font.
      
      :param `font`: a valid :class:`wx.Font` object.


   .. method:: SetImage(self, image)

      Sets the column image index.
      
      :param `image`: an index within the normal image list assigned to
       :class:`HyperTreeList` specifying the image to use for the column.


   .. method:: SetSelectedImage(self, image)

      Sets the column image index in the selected state.
      
      :param `image`: an index within the normal image list assigned to
       :class:`HyperTreeList` specifying the image to use for the column when in
       selected state.


   .. method:: SetShown(self, shown)

      Sets the column as shown or hidden.
      
      :param `shown`: ``True`` if the column should be shown, ``False`` if it
       should be hidden.


   .. method:: SetText(self, text)

      Sets the column header label.
      
      :param `text`: the new column header text.


   .. method:: SetWidth(self, width)

      Sets the column header width.
      
      :param `width`: the column header width, in pixels.


