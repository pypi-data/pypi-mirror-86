.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ClientDataContainer:

==========================================================================================================================================
|phoenix_title|  **wx.ClientDataContainer**
==========================================================================================================================================

This class is a mixin that provides storage and management of "client data".          

This data can either be of type  - in which case the data `container`  does not take care of freeing the data again or it is of type :ref:`ClientData`  or its derivatives. In that case the container will free the memory itself later. Note that you `must`  not assign both  data and data derived from the :ref:`ClientData`  class to a container. 







         



.. note:: 

   This functionality is currently duplicated in :ref:`wx.EvtHandler`  in order to avoid having more than one vtable in that class hierarchy.  







.. seealso:: :ref:`wx.EvtHandler`, :ref:`ClientData`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ClientDataContainer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ClientDataContainer_inheritance.png" alt="Inheritance diagram of ClientDataContainer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ClientDataContainer.html" title="wx.ClientDataContainer" alt="" coords="5,5,183,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.grid.GridCellAttr`, :ref:`wx.grid.GridCellAttrProvider`, :ref:`wx.grid.GridCellEditor`, :ref:`wx.grid.GridCellRenderer`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ClientDataContainer.__init__`                                         Default constructor.
:meth:`~wx.ClientDataContainer.GetClientData`                                    Get a pointer to the client data object.
:meth:`~wx.ClientDataContainer.GetClientObject`                                  Alias for :meth:`~ClientDataContainer.GetClientData`
:meth:`~wx.ClientDataContainer.SetClientData`                                    Set the client data object.
:meth:`~wx.ClientDataContainer.SetClientObject`                                  Alias for :meth:`~ClientDataContainer.SetClientData`
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.ClientDataContainer.ClientData`                                       See :meth:`~wx.ClientDataContainer.GetClientData` and :meth:`~wx.ClientDataContainer.SetClientData`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ClientDataContainer(object)

   **Possible constructors**::

       ClientDataContainer()
       
   
   This class is a mixin that provides storage and management of "client
   data".



   .. method:: __init__(self)

      Default constructor.                   





   .. method:: GetClientData(self)

      Get a pointer to the client data object.                  

      :rtype: :ref:`ClientData`








   .. method:: GetClientObject(self)

      Alias for :meth:`GetClientData`



   .. method:: SetClientData(self, data)

      Set the client data object.                  

      Any previous object will be deleted.                  


      :param `data`: 
      :type `data`: ClientData







   .. method:: SetClientObject(self, data)

      Alias for :meth:`SetClientData`



   .. attribute:: ClientData

      See :meth:`~wx.ClientDataContainer.GetClientData` and :meth:`~wx.ClientDataContainer.SetClientData`

