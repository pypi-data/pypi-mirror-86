.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.masked.maskededit

.. highlight:: python



.. _wx.lib.masked.maskededit.MaskedEditMixin:

==========================================================================================================================================
|phoenix_title|  **wx.lib.masked.maskededit.MaskedEditMixin**
==========================================================================================================================================

This class allows us to abstract the masked edit functionality that could
be associated with any text entry control. (eg. wx.TextCtrl, wx.ComboBox, etc.)
It forms the basis for all of the lib.masked controls.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MaskedEditMixin</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.masked.maskededit.MaskedEditMixin_inheritance.png" alt="Inheritance diagram of MaskedEditMixin" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.masked.maskededit.MaskedEditMixin.html" title="wx.lib.masked.maskededit.MaskedEditMixin" alt="" coords="5,5,317,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.masked.combobox.BaseMaskedComboBox`, :class:`wx.lib.masked.textctrl.BaseMaskedTextCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.__init__`                       This is the "constructor" for setting up the mixin variable parameters for the composite class.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.ClearValue`                     Blanks the current control value by replacing it with the default value.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.ClearValueAlt`                  Blanks the current control value by replacing it with the default value.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.GetCtrlParameter`               Routine for retrieving the value of any given parameter
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.GetFieldParameter`              Routine provided for getting a parameter of an individual field.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.GetMaskParameter`               old name for the GetCtrlParameters function  (DEPRECATED)
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.GetPlainValue`                  Returns control's value stripped of the template text.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.IsDefault`                      Returns ``True`` if the value specified (or the value of the control if not specified)
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.IsEmpty`                        Returns ``True`` if control is equal to an empty value.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.IsValid`                        Indicates whether the value specified (or the current value of the control
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.SetBackgroundColour`            
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.SetCtrlParameters`              This public function can be used to set individual or multiple masked edit
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.SetFieldParameters`             Routine provided to modify the parameters of a given field.
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.SetForegroundColour`            
:meth:`~wx.lib.masked.maskededit.MaskedEditMixin.SetMaskParameters`              old name for the SetCtrlParameters function  (DEPRECATED)
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: MaskedEditMixin

   This class allows us to abstract the masked edit functionality that could
   be associated with any text entry control. (eg. wx.TextCtrl, wx.ComboBox, etc.)
   It forms the basis for all of the lib.masked controls.

   .. method:: __init__(self, name = 'MaskedEdit', \*\*kwargs)

      This is the "constructor" for setting up the mixin variable parameters for the composite class.


   .. method:: ClearValue(self)

      Blanks the current control value by replacing it with the default value.


   .. method:: ClearValueAlt(self)

      Blanks the current control value by replacing it with the default value.
      Using ChangeValue, so not to fire a change event


   .. method:: GetCtrlParameter(self, paramname)

      Routine for retrieving the value of any given parameter


   .. method:: GetFieldParameter(self, field_index, paramname)

      Routine provided for getting a parameter of an individual field.


   .. method:: GetMaskParameter(self, paramname)

      old name for the GetCtrlParameters function  (DEPRECATED)


   .. method:: GetPlainValue(self, candidate=None)

      Returns control's value stripped of the template text.
      plainvalue = MaskedEditMixin.GetPlainValue()


   .. method:: IsDefault(self, value=None)

      Returns ``True`` if the value specified (or the value of the control if not specified)
      is equal to the default value.


   .. method:: IsEmpty(self, value=None)

      Returns ``True`` if control is equal to an empty value.
      (Empty means all editable positions in the template == fillChar.)


   .. method:: IsValid(self, value=None)

      Indicates whether the value specified (or the current value of the control
      if not specified) is considered valid.


   .. method:: SetBackgroundColour(self, colour)


   .. method:: SetCtrlParameters(self, \*\*kwargs)

      This public function can be used to set individual or multiple masked edit
      parameters after construction.  (See maskededit module overview for the list
      of valid parameters.)


   .. method:: SetFieldParameters(self, field_index, \*\*kwargs)

      Routine provided to modify the parameters of a given field.
      Because changes to fields can affect the overall control,
      direct access to the fields is prevented, and the control
      is always "reconfigured" after setting a field parameter.
      (See maskededit module overview for the list of valid field-level
      parameters.)


   .. method:: SetForegroundColour(self, colour)


   .. method:: SetMaskParameters(self, \*\*kwargs)

      old name for the SetCtrlParameters function  (DEPRECATED)


