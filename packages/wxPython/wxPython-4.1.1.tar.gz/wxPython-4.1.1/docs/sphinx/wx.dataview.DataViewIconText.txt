.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.dataview.DataViewIconText:

==========================================================================================================================================
|phoenix_title|  **wx.dataview.DataViewIconText**
==========================================================================================================================================

:ref:`wx.dataview.DataViewIconText`  is used by :ref:`wx.dataview.DataViewIconTextRenderer`  for data transfer.          

This class can be converted to and from a :ref:`Variant`. 









|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DataViewIconText</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.dataview.DataViewIconText_inheritance.png" alt="Inheritance diagram of DataViewIconText" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.dataview.DataViewIconText.html" title="wx.dataview.DataViewIconText" alt="" coords="5,83,231,112"/> <area shape="rect" id="node2" href="wx.Object.html" title="wx.Object" alt="" coords="75,5,161,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.dataview.DataViewIconText.__init__`                                   Constructor.
:meth:`~wx.dataview.DataViewIconText.GetIcon`                                    Gets the icon.
:meth:`~wx.dataview.DataViewIconText.GetText`                                    Gets the text.
:meth:`~wx.dataview.DataViewIconText.SetIcon`                                    Set the icon.
:meth:`~wx.dataview.DataViewIconText.SetText`                                    Set the text.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.dataview.DataViewIconText.Icon`                                       See :meth:`~wx.dataview.DataViewIconText.GetIcon` and :meth:`~wx.dataview.DataViewIconText.SetIcon`
:attr:`~wx.dataview.DataViewIconText.Text`                                       See :meth:`~wx.dataview.DataViewIconText.GetText` and :meth:`~wx.dataview.DataViewIconText.SetText`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.dataview.DataViewIconText(Object)

   **Possible constructors**::

       DataViewIconText(text="", icon=NullIcon)
       
       DataViewIconText(other)
       
   
   DataViewIconText is used by DataViewIconTextRenderer for data
   transfer.



   .. method:: __init__(self, *args, **kw)

      Constructor.                   


      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, text=EmptyString, icon=NullIcon)`
      
      
      
      
      :param `text`: 
      :type `text`: string
      :param `icon`: 
      :type `icon`: wx.Icon
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, other)`
      
      
      
      
      :param `other`: 
      :type `other`: wx.dataview.DataViewIconText
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetIcon(self)

      Gets the icon.                  

      :rtype: :ref:`Icon`








   .. method:: GetText(self)

      Gets the text.                  

      :rtype: `string`








   .. method:: SetIcon(self, icon)

      Set the icon.                  


      :param `icon`: 
      :type `icon`: wx.Icon







   .. method:: SetText(self, text)

      Set the text.                  


      :param `text`: 
      :type `text`: string







   .. attribute:: Icon

      See :meth:`~wx.dataview.DataViewIconText.GetIcon` and :meth:`~wx.dataview.DataViewIconText.SetIcon`


   .. attribute:: Text

      See :meth:`~wx.dataview.DataViewIconText.GetText` and :meth:`~wx.dataview.DataViewIconText.SetText`

