.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.framemanager

.. highlight:: python



.. _wx.lib.agw.aui.framemanager.AuiDockingGuideWindow:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.framemanager.AuiDockingGuideWindow**
==========================================================================================================================================

Target class for :class:`AuiDockingGuide` and :class:`AuiCenterDockingGuide`. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiDockingGuideWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.framemanager.AuiDockingGuideWindow_inheritance.png" alt="Inheritance diagram of AuiDockingGuideWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.html" title="wx.lib.agw.aui.framemanager.AuiDockingGuideWindow" alt="" coords="5,315,388,344"/> <area shape="rect" id="node2" href="wx.Window.html" title="wx.Window" alt="" coords="148,237,245,267"/> <area shape="rect" id="node3" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="132,160,261,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="138,83,255,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="93,5,180,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="205,5,311,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Window`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.__init__`              Default class constructor. Used internally, do not call it in your code!
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.Draw`                  Draws the whole docking guide window (not used if the docking guide images are ok).
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.DrawArrow`             Draws the docking guide arrow icon (not used if the docking guide images are ok).
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.DrawBackground`        Draws the docking guide background.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.DrawDottedLine`        Draws a dotted line (not used if the docking guide images are ok).
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.DrawIcon`              Draws the docking guide icon (not used if the docking guide images are ok).
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.IsValid`               Returns whether the docking direction is valid.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.OnEraseBackground`     Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`AuiDockingGuideWindow`.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.OnPaint`               Handles the ``wx.EVT_PAINT`` event for :class:`AuiDockingGuideWindow`.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.SetValid`              Sets the docking direction as valid or invalid.
:meth:`~wx.lib.agw.aui.framemanager.AuiDockingGuideWindow.UpdateDockGuide`       Updates the docking guide images depending on the mouse position, using focused
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiDockingGuideWindow(wx.Window)

   Target class for :class:`AuiDockingGuide` and :class:`AuiCenterDockingGuide`. 

   .. method:: __init__(self, parent, rect, direction=0, center=False, useAero=False)

      Default class constructor. Used internally, do not call it in your code!
      
      :param `parent`: the :class:`AuiManager` parent;
      :param wx.Rect `rect`: the window rect;
      :param integer `direction`: one of ``wx.TOP``, ``wx.BOTTOM``, ``wx.LEFT``, ``wx.RIGHT``,
       ``wx.CENTER``;
      :param bool `center`: whether the calling class is a :class:`AuiCenterDockingGuide`;
      :param bool `useAero`: whether to use the new Aero-style bitmaps or Whidbey-style bitmaps
       for the docking guide.


   .. method:: Draw(self, dc)

      Draws the whole docking guide window (not used if the docking guide images are ok).
      
      :param `dc`: a :class:`wx.DC` device context object.


   .. method:: DrawArrow(self, dc)

      Draws the docking guide arrow icon (not used if the docking guide images are ok).
      
      :param `dc`: a :class:`wx.DC` device context object.


   .. method:: DrawBackground(self, dc)

      Draws the docking guide background.
      
      :param `dc`: a :class:`wx.DC` device context object.


   .. method:: DrawDottedLine(self, dc, point, length, vertical)

      Draws a dotted line (not used if the docking guide images are ok).
      
      :param `dc`: a :class:`wx.DC` device context object;
      :param `point`: a :class:`wx.Point` where to start drawing the dotted line;
      :param integer `length`: the length of the dotted line;
      :param bool `vertical`: whether it is a vertical docking guide window or not.


   .. method:: DrawIcon(self, dc)

      Draws the docking guide icon (not used if the docking guide images are ok).
      
      :param `dc`: a :class:`wx.DC` device context object.


   .. method:: IsValid(self)

      Returns whether the docking direction is valid. 


   .. method:: OnEraseBackground(self, event)

      Handles the ``wx.EVT_ERASE_BACKGROUND`` event for :class:`AuiDockingGuideWindow`.
      
      :param `event`: a :class:`EraseEvent` to be processed.
      
      :note: This is intentionally empty to reduce flickering while drawing.


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` event for :class:`AuiDockingGuideWindow`.
      
      :param `event`: a :class:`PaintEvent` to be processed.


   .. method:: SetValid(self, valid)

      Sets the docking direction as valid or invalid.
      
      :param bool `valid`: whether the docking direction is allowed or not.


   .. method:: UpdateDockGuide(self, pos)

      Updates the docking guide images depending on the mouse position, using focused
      images if the mouse is inside the docking guide or unfocused images if it is
      outside.
      
      :param `pos`: a :class:`wx.Point` mouse position.


