.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.SystemSettings:

==========================================================================================================================================
|phoenix_title|  **wx.SystemSettings**
==========================================================================================================================================

:ref:`wx.SystemSettings`  allows the application to ask for details about the system.          

This can include settings such as standard colours, fonts, and user interface element sizes. 







         



.. seealso:: :ref:`wx.Font`, :ref:`wx.Colour`, :ref:`wx.SystemOptions`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SystemSettings</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.SystemSettings_inheritance.png" alt="Inheritance diagram of SystemSettings" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.SystemSettings.html" title="wx.SystemSettings" alt="" coords="5,5,152,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.SystemSettings.__init__`                                              Default constructor.
:meth:`~wx.SystemSettings.GetAppearance`                                         Returns the object describing the current system appearance.
:meth:`~wx.SystemSettings.GetColour`                                             Returns a system colour.
:meth:`~wx.SystemSettings.GetFont`                                               Returns a system font.
:meth:`~wx.SystemSettings.GetMetric`                                             Returns the value of a system metric, or -1 if the metric is not supported on the current system.
:meth:`~wx.SystemSettings.GetScreenType`                                         Returns the screen type.
:meth:`~wx.SystemSettings.HasFeature`                                            Returns ``True`` if the port has certain feature.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.SystemSettings(object)

   **Possible constructors**::

       SystemSettings()
       
   
   SystemSettings allows the application to ask for details about the
   system.



   .. method:: __init__(self)

      Default constructor.                  

      You don't need to create an instance of :ref:`wx.SystemSettings`  since all of its functions are static.                   





   .. staticmethod:: GetAppearance()

      Returns the object describing the current system appearance.                  

                

      :rtype: :ref:`wx.SystemAppearance`







      .. versionadded:: 4.1/wxWidgets-3.1.3  
     








   .. staticmethod:: GetColour(index)

      Returns a system colour.                  




      :param `index`: Can be one of the :ref:`wx.SystemColour`  enum values.  
      :type `index`: wx.SystemColour






      :rtype: :ref:`wx.Colour`



                  



      :returns: 

         The returned colour is always valid.   








   .. staticmethod:: GetFont(index)

      Returns a system font.                  




      :param `index`: Can be one of the :ref:`wx.SystemFont`  enum values.  
      :type `index`: wx.SystemFont






      :rtype: :ref:`wx.Font`



                  



      :returns: 

         The returned font is always valid.   








   .. staticmethod:: GetMetric(index, win=None)

      Returns the value of a system metric, or -1 if the metric is not supported on the current system.                  

      The value of `win`  determines if the metric returned is a global value or a :ref:`wx.Window`  based value, in which case it might determine the widget, the display the window is on, or something similar. The window given should be as close to the metric as possible (e.g. a :ref:`wx.TopLevelWindow`  in case of the ``wx.SYS_CAPTION_Y`` metric). 

      `index`  can be one of the :ref:`wx.SystemMetric`  enum values. 

      `win`  is a pointer to the window for which the metric is requested. Specifying the `win`  parameter is encouraged, because some metrics on some ports are not supported without one,or they might be capable of reporting better values if given one. If a window does not make sense for a metric, one should still be given, as for example it might determine which displays cursor width is requested with ``wx.SYS_CURSOR_X``.                  


      :param `index`: 
      :type `index`: wx.SystemMetric
      :param `win`: 
      :type `win`: wx.Window




      :rtype: `int`








   .. staticmethod:: GetScreenType()

      Returns the screen type.                  

      The return value is one of the :ref:`wx.SystemScreenType`  enum values.                  

      :rtype: :ref:`wx.SystemScreenType`








   .. staticmethod:: HasFeature(index)

      Returns ``True`` if the port has certain feature.                  

      See the :ref:`wx.SystemFeature`  enum values.                  


      :param `index`: 
      :type `index`: wx.SystemFeature




      :rtype: `bool`







