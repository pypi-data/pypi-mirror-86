.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.grid.GridCellDateRenderer:

==========================================================================================================================================
|phoenix_title|  **wx.grid.GridCellDateRenderer**
==========================================================================================================================================

This class may be used to show a date, without time, in a cell.          

See :ref:`wx.grid.GridCellDateTimeRenderer`  for a date/time version. :meth:`wx.DateTime.Format`   is used internally to render the date representation. :meth:`wx.DateTime.ParseDate`   is used to parse the string data entered in the cell. 







         



.. versionadded:: 4.1/wxWidgets-3.1.3  
     







.. seealso:: :ref:`wx.grid.GridCellRenderer`, :ref:`wx.grid.GridCellAutoWrapStringRenderer`, :ref:`wx.grid.GridCellBoolRenderer`, :ref:`wx.grid.GridCellEnumRenderer`, :ref:`wx.grid.GridCellFloatRenderer`, :ref:`wx.grid.GridCellNumberRenderer`, :ref:`wx.grid.GridCellStringRenderer`, :ref:`wx.grid.GridCellDateTimeRenderer`  







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridCellDateRenderer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.grid.GridCellDateRenderer_inheritance.png" alt="Inheritance diagram of GridCellDateRenderer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.grid.GridCellDateRenderer.html" title="wx.grid.GridCellDateRenderer" alt="" coords="72,237,287,267"/> <area shape="rect" id="node2" href="wx.grid.GridCellStringRenderer.html" title="wx.grid.GridCellStringRenderer" alt="" coords="68,160,291,189"/> <area shape="rect" id="node3" href="wx.grid.GridCellRenderer.html" title="wx.grid.GridCellRenderer" alt="" coords="87,83,271,112"/> <area shape="rect" id="node4" href="wx.ClientDataContainer.html" title="wx.ClientDataContainer" alt="" coords="5,5,183,35"/> <area shape="rect" id="node5" href="wx.RefCounter.html" title="wx.RefCounter" alt="" coords="207,5,325,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.grid.GridCellDateTimeRenderer`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.grid.GridCellDateRenderer.__init__`                                   Date renderer constructor.
:meth:`~wx.grid.GridCellDateRenderer.SetParameters`                              Sets the strftime()-like format string which will be used to render the date.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.grid.GridCellDateRenderer(GridCellStringRenderer)

   **Possible constructors**::

       GridCellDateRenderer(outformat="")
       
   
   This class may be used to show a date, without time, in a cell.



   .. method:: __init__(self, outformat="")

      Date renderer constructor.                  




      :param `outformat`: strftime()-like format string used to render the output date. By default (or if provided format string is empty) localized date representation ("%x") is used.   
      :type `outformat`: string




                  





   .. method:: SetParameters(self, params)

      Sets the strftime()-like format string which will be used to render the date.                  




      :param `params`: strftime()-like format string used to render the date.   
      :type `params`: string




                  




