.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.inspection

.. highlight:: python



.. _wx.lib.inspection.InspectionFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.inspection.InspectionFrame**
==========================================================================================================================================

This class is the frame that holds the wxPython inspection tools.
The toolbar and AUI splitters/floating panes are also managed
here.  The contents of the tool windows are handled by other
classes.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>InspectionFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.inspection.InspectionFrame_inheritance.png" alt="Inheritance diagram of InspectionFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.inspection.InspectionFrame.html" title="wx.lib.inspection.InspectionFrame" alt="" coords="5,547,248,576"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="84,469,169,499"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="49,392,204,421"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="43,315,211,344"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="78,237,175,267"/> <area shape="rect" id="node6" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="62,160,191,189"/> <area shape="rect" id="node7" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="68,83,185,112"/> <area shape="rect" id="node8" href="wx.Object.html" title="wx.Object" alt="" coords="23,5,110,35"/> <area shape="rect" id="node9" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="135,5,241,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Frame`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.inspection.InspectionFrame.__init__`                              Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.inspection.InspectionFrame.HighlightCurrentItem`                  Draw a highlight rectangle around the item represented by the
:meth:`~wx.lib.inspection.InspectionFrame.LoadSettings`                          
:meth:`~wx.lib.inspection.InspectionFrame.MakeToolBar`                           
:meth:`~wx.lib.inspection.InspectionFrame.OnCaptureLost`                         
:meth:`~wx.lib.inspection.InspectionFrame.OnClose`                               
:meth:`~wx.lib.inspection.InspectionFrame.OnCollapseTree`                        
:meth:`~wx.lib.inspection.InspectionFrame.OnExpandTree`                          
:meth:`~wx.lib.inspection.InspectionFrame.OnFindWidget`                          
:meth:`~wx.lib.inspection.InspectionFrame.OnHighlightItem`                       
:meth:`~wx.lib.inspection.InspectionFrame.OnLeftDown`                            
:meth:`~wx.lib.inspection.InspectionFrame.OnRefreshTree`                         
:meth:`~wx.lib.inspection.InspectionFrame.OnShowSizers`                          
:meth:`~wx.lib.inspection.InspectionFrame.OnShowSizersUI`                        
:meth:`~wx.lib.inspection.InspectionFrame.OnToggleFilling`                       
:meth:`~wx.lib.inspection.InspectionFrame.OnToggleFillingUI`                     
:meth:`~wx.lib.inspection.InspectionFrame.OnWatchEvents`                         
:meth:`~wx.lib.inspection.InspectionFrame.OnWatchEventsUI`                       
:meth:`~wx.lib.inspection.InspectionFrame.RefreshTree`                           
:meth:`~wx.lib.inspection.InspectionFrame.SaveSettings`                          
:meth:`~wx.lib.inspection.InspectionFrame.SetObj`                                
:meth:`~wx.lib.inspection.InspectionFrame.UpdateInfo`                            
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: InspectionFrame(wx.Frame)

   This class is the frame that holds the wxPython inspection tools.
   The toolbar and AUI splitters/floating panes are also managed
   here.  The contents of the tool windows are handled by other
   classes.

   .. method:: __init__(self, wnd=None, locals=None, config=None, app=None, title="wxPython Widget Inspection Tool", \*args, \*\*kw)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: HighlightCurrentItem(self)

      Draw a highlight rectangle around the item represented by the
      current tree selection.


   .. method:: LoadSettings(self, config)


   .. method:: MakeToolBar(self)


   .. method:: OnCaptureLost(self, evt)


   .. method:: OnClose(self, evt)


   .. method:: OnCollapseTree(self, evt)


   .. method:: OnExpandTree(self, evt)


   .. method:: OnFindWidget(self, evt)


   .. method:: OnHighlightItem(self, evt)


   .. method:: OnLeftDown(self, evt)


   .. method:: OnRefreshTree(self, evt)


   .. method:: OnShowSizers(self, evt)


   .. method:: OnShowSizersUI(self, evt)


   .. method:: OnToggleFilling(self, evt)


   .. method:: OnToggleFillingUI(self, evt)


   .. method:: OnWatchEvents(self, evt)


   .. method:: OnWatchEventsUI(self, evt)


   .. method:: RefreshTree(self)


   .. method:: SaveSettings(self, config)


   .. method:: SetObj(self, obj)


   .. method:: UpdateInfo(self)


