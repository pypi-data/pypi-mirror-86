.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.supertooltip

.. highlight:: python



.. _wx.lib.agw.supertooltip.SuperToolTip:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.supertooltip.SuperToolTip**
==========================================================================================================================================

The main class for :class:`SuperToolTip`, which holds all the methods
and setters/getters available to the user.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>SuperToolTip</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.supertooltip.SuperToolTip_inheritance.png" alt="Inheritance diagram of SuperToolTip" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.supertooltip.SuperToolTip.html" title="wx.lib.agw.supertooltip.SuperToolTip" alt="" coords="5,5,265,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.lib.agw.supertooltip.supertooltip.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/../no_appearance.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.lib.agw.supertooltip.supertooltip.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|




|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.__init__`                           Default class constructor.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.ApplyStyle`                         Applies none of the predefined styles.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.DoHideNow`                          Dismiss the :class:`SuperToolTip` window immediately.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.DoShowNow`                          Create the :class:`SuperToolTip` immediately.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.EnableTip`                          Globally (application-wide) enables/disables :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetBodyImage`                       Returns the main body bitmap used in :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetBottomGradientColour`            Returns the bottom gradient colour.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetDrawFooterLine`                  Returns whether the separator line before the footer is drawn or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetDrawHeaderLine`                  Returns whether the separator line after the header is drawn or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetDropShadow`                      Returns whether a shadow below :class:`SuperToolTip` is drawn or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetEndDelay`                        Returns the delay time (in seconds) after which the :class:`SuperToolTip` is destroyed.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetFooter`                          Returns the footer text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetFooterBitmap`                    Returns the footer bitmap.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetFooterFont`                      Returns the font used for the footer text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetHeader`                          Returns the header text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetHeaderBitmap`                    Returns the header bitmap.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetHeaderFont`                      Returns the font used for the header text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetHyperlinkFont`                   Returns the font used for the hyperlink text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetMessage`                         Returns the main body message in :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetMessageFont`                     Returns the font used in the main body message.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetMiddleGradientColour`            Returns the middle gradient colour.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetStartDelay`                      Returns the tim delay (in seconds) after which the :class:`SuperToolTip` is created.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetTarget`                          Returns the target window for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetTextColour`                      Returns the text colour.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetTipWindow`                       Return the TipWindow, will return None if not yet created
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetTopGradientColour`               Returns the top gradient colour.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.GetUseFade`                         Returns whether a fade in/fade out effect is used or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.InitFont`                           Initalizes the fonts for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.IsEnabled`                          Returns ``True`` when :class:`SuperToolTip` is globally enabled, ``False`` otherwise.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.OnDestroy`                          Handles the :class:`SuperToolTip` target destruction.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.OnEndTimer`                         The show time for :class:`SuperToolTip` has expired, destroy the :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.OnStartTimer`                       The creation time has expired, create the :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.OnWidgetEnter`                      Starts the :class:`SuperToolTip` timer for creation, handles the ``wx.EVT_ENTER_WINDOW`` event.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.OnWidgetLeave`                      Handles the ``wx.EVT_LEAVE_WINDOW`` event for the target widgets.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetBodyImage`                       Sets the main body bitmap for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetBottomGradientColour`            Sets the bottom gradient colour for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetDrawFooterLine`                  Sets whether to draw a separator line before the footer or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetDrawHeaderLine`                  Sets whether to draw a separator line after the header or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetDropShadow`                      Whether to draw a shadow below :class:`SuperToolTip` or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetEndDelay`                        Sets the delay time (in seconds) after which the :class:`SuperToolTip` is destroyed.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetFooter`                          Sets the footer text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetFooterBitmap`                    Sets the footer bitmap for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetFooterFont`                      Sets the font for the footer text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetHeader`                          Sets the header text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetHeaderBitmap`                    Sets the header bitmap for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetHeaderFont`                      Sets the font for the header text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetHyperlinkFont`                   Sets the font for the hyperlink text.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetMessage`                         Sets the main body message for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetMessageFont`                     Sets the font for the main body message.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetMiddleGradientColour`            Sets the middle gradient colour for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetStartDelay`                      Sets the time delay (in seconds) after which the :class:`SuperToolTip` is created.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetTarget`                          Sets the target window for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetTextColour`                      Sets the text colour for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetTopGradientColour`               Sets the top gradient colour for :class:`SuperToolTip`.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.SetUseFade`                         Whether to use a fade in/fade out effect or not.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.Show`                               Shows or hides the window.
:meth:`~wx.lib.agw.supertooltip.SuperToolTip.Update`                             Calling this method immediately repaints the invalidated area of the window and all of its
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: SuperToolTip(object)

   The main class for :class:`SuperToolTip`, which holds all the methods
   and setters/getters available to the user.

   .. method:: __init__(self, message, bodyImage=wx.NullBitmap, header="", headerBmp=wx.NullBitmap, footer="", footerBmp=wx.NullBitmap)

      Default class constructor.
      
      :param `message`: the main message in :class:`SuperToolTip` body;
      :param `bodyImage`: the image in the :class:`SuperToolTip` body;
      :param `header`: the header text;
      :param `headerBmp`: the header bitmap;
      :param `footer`: the footer text;
      :param `footerBmp`: the footer bitmap.


   .. method:: ApplyStyle(self, style)

      Applies none of the predefined styles.
      
      :param `style`: one of the predefined styles available at the
       beginning of the module.


   .. method:: DoHideNow(self)

      Dismiss the :class:`SuperToolTip` window immediately.
      
      .. versionadded:: 0.9.6


   .. method:: DoShowNow(self)

      Create the :class:`SuperToolTip` immediately. 


   .. method:: EnableTip(self, enable=True)

      Globally (application-wide) enables/disables :class:`SuperToolTip`.
      
      :param `enable`: ``True`` to enable :class:`SuperToolTip` globally, ``False`` otherwise.


   .. method:: GetBodyImage(self)

      Returns the main body bitmap used in :class:`SuperToolTip`. 


   .. method:: GetBottomGradientColour(self)

      Returns the bottom gradient colour. 


   .. method:: GetDrawFooterLine(self)

      Returns whether the separator line before the footer is drawn or not. 


   .. method:: GetDrawHeaderLine(self)

      Returns whether the separator line after the header is drawn or not. 


   .. method:: GetDropShadow(self)

      Returns whether a shadow below :class:`SuperToolTip` is drawn or not.
      
      :note: This method is available only on Windows and requires Mark Hammond's
       pywin32 package.


   .. method:: GetEndDelay(self)

      Returns the delay time (in seconds) after which the :class:`SuperToolTip` is destroyed.


   .. method:: GetFooter(self)

      Returns the footer text. 


   .. method:: GetFooterBitmap(self)

      Returns the footer bitmap. 


   .. method:: GetFooterFont(self)

      Returns the font used for the footer text. 


   .. method:: GetHeader(self)

      Returns the header text. 


   .. method:: GetHeaderBitmap(self)

      Returns the header bitmap. 


   .. method:: GetHeaderFont(self)

      Returns the font used for the header text. 


   .. method:: GetHyperlinkFont(self)

      Returns the font used for the hyperlink text. 


   .. method:: GetMessage(self)

      Returns the main body message in :class:`SuperToolTip`. 


   .. method:: GetMessageFont(self)

      Returns the font used in the main body message. 


   .. method:: GetMiddleGradientColour(self)

      Returns the middle gradient colour. 


   .. method:: GetStartDelay(self)

      Returns the tim delay (in seconds) after which the :class:`SuperToolTip` is created.


   .. method:: GetTarget(self)

      Returns the target window for :class:`SuperToolTip`. 


   .. method:: GetTextColour(self)

      Returns the text colour. 


   .. method:: GetTipWindow(self)

      Return the TipWindow, will return None if not yet created 


   .. method:: GetTopGradientColour(self)

      Returns the top gradient colour. 


   .. method:: GetUseFade(self)

      Returns whether a fade in/fade out effect is used or not.
      
      :note: This method is available only on Windows and requires Mark Hammond's
       pywin32 package.


   .. method:: InitFont(self)

      Initalizes the fonts for :class:`SuperToolTip`. 


   .. method:: IsEnabled(self)

      Returns ``True`` when :class:`SuperToolTip` is globally enabled, ``False`` otherwise.
      
      .. versionadded:: 0.9.6


   .. method:: OnDestroy(self, event)

      Handles the :class:`SuperToolTip` target destruction. 


   .. method:: OnEndTimer(self)

      The show time for :class:`SuperToolTip` has expired, destroy the :class:`SuperToolTip`. 


   .. method:: OnStartTimer(self)

      The creation time has expired, create the :class:`SuperToolTip`. 


   .. method:: OnWidgetEnter(self, event)

      Starts the :class:`SuperToolTip` timer for creation, handles the ``wx.EVT_ENTER_WINDOW`` event.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnWidgetLeave(self, event)

      Handles the ``wx.EVT_LEAVE_WINDOW`` event for the target widgets.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: SetBodyImage(self, bmp)

      Sets the main body bitmap for :class:`SuperToolTip`.
      
      :param `bmp`: the body bitmap, a valid :class:`wx.Bitmap` object.


   .. method:: SetBottomGradientColour(self, colour)

      Sets the bottom gradient colour for :class:`SuperToolTip`.
      
      :param `colour`: the colour to use as bottom colour, a valid :class:`wx.Colour` object.


   .. method:: SetDrawFooterLine(self, draw)

      Sets whether to draw a separator line before the footer or not.
      
      :param `draw`: ``True`` to draw a separator line before the footer, ``False``
       otherwise.


   .. method:: SetDrawHeaderLine(self, draw)

      Sets whether to draw a separator line after the header or not.
      
      :param `draw`: ``True`` to draw a separator line after the header, ``False``
       otherwise.


   .. method:: SetDropShadow(self, drop)

      Whether to draw a shadow below :class:`SuperToolTip` or not.
      
      :param `drop`: ``True`` to drop a shadow below the control, ``False`` otherwise.
      
      :note: This method is available only on Windows and requires Mark Hammond's
       pywin32 package.


   .. method:: SetEndDelay(self, delay=1e6)

      Sets the delay time (in seconds) after which the :class:`SuperToolTip` is destroyed.
      
      :param `delay`: the delay in seconds.


   .. method:: SetFooter(self, footer)

      Sets the footer text.
      
      :param `footer`: the footer text to display.


   .. method:: SetFooterBitmap(self, bmp)

      Sets the footer bitmap for :class:`SuperToolTip`.
      
      :param `bmp`: the footer bitmap, a valid :class:`wx.Bitmap` object.


   .. method:: SetFooterFont(self, font)

      Sets the font for the footer text.
      
      :param `font`: the font to use for the footer text, a valid :class:`wx.Font`
       object.


   .. method:: SetHeader(self, header)

      Sets the header text.
      
      :param `header`: the header text to display.


   .. method:: SetHeaderBitmap(self, bmp)

      Sets the header bitmap for :class:`SuperToolTip`.
      
      :param `bmp`: the header bitmap, a valid :class:`wx.Bitmap` object.


   .. method:: SetHeaderFont(self, font)

      Sets the font for the header text.
      
      :param `font`: the font to use for the header text, a valid :class:`wx.Font`
       object.


   .. method:: SetHyperlinkFont(self, font)

      Sets the font for the hyperlink text.
      
      :param `font`: the font to use for the hyperlink text, a valid :class:`wx.Font`
       object.


   .. method:: SetMessage(self, message)

      Sets the main body message for :class:`SuperToolTip`.
      
      :param `message`: the message to display in the body.


   .. method:: SetMessageFont(self, font)

      Sets the font for the main body message.
      
      :param `font`: the font to use for the main body message, a valid :class:`wx.Font`
       object.


   .. method:: SetMiddleGradientColour(self, colour)

      Sets the middle gradient colour for :class:`SuperToolTip`.
      
      :param `colour`: the colour to use as middle colour, a valid :class:`wx.Colour` object.


   .. method:: SetStartDelay(self, delay=1)

      Sets the time delay (in seconds) after which the :class:`SuperToolTip` is created.
      
      :param `delay`: the delay in seconds.


   .. method:: SetTarget(self, widget)

      Sets the target window for :class:`SuperToolTip`.
      
      :param `widget`: the widget to which :class:`SuperToolTip` is associated.


   .. method:: SetTextColour(self, colour)

      Sets the text colour for :class:`SuperToolTip`.
      
      :param `colour`: the colour to use as text colour, a valid :class:`wx.Colour` object.


   .. method:: SetTopGradientColour(self, colour)

      Sets the top gradient colour for :class:`SuperToolTip`.
      
      :param `colour`: the colour to use as top colour, a valid :class:`wx.Colour` object.


   .. method:: SetUseFade(self, fade)

      Whether to use a fade in/fade out effect or not.
      
      :param `fade`: ``True`` to use a fade in/fade out effect, ``False`` otherwise.
      
      :note: This method is available only on Windows and requires Mark Hammond's
       pywin32 package.


   .. method:: Show(self, show=True)

      Shows or hides the window.
      
      You may need to call `Raise` for a top level window if you want to bring it to
      top, although this is not needed if :meth:`~SuperToolTip.Show` is called immediately after the frame creation.
      
      :param bool `show`: ``True`` to show the :class:`SuperToolTip` window, ``False`` to hide it.
      
      :return: ``True`` if the window has been shown or hidden or ``False`` if nothing was done
       because it already was in the requested state.
      
      .. note::
      
         Notice that the default state of newly created top level windows is hidden (to allow
         you to create their contents without flicker) unlike for all the other, not derived from
         :class:`TopLevelWindow`, windows that are by default created in the shown state.
      
      
      .. versionadded:: 0.9.5


   .. method:: Update(self)

      Calling this method immediately repaints the invalidated area of the window and all of its
      children recursively (this normally only happens when the flow of control returns to the
      event loop).
      
      :note: Notice that this function doesn't invalidate any area of the window so nothing happens
       if nothing has been invalidated (i.e. marked as requiring a redraw). Use `Refresh` first if
       you want to immediately redraw the window unconditionally.
      
      .. versionadded:: 0.9.5


