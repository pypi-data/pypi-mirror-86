.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.ultimatelistctrl

.. highlight:: python



.. _wx.lib.agw.ultimatelistctrl.UltimateListHeaderData:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.ultimatelistctrl.UltimateListHeaderData**
==========================================================================================================================================

A simple class which holds information about :class:`UltimateListItem` visual
attributes for the header/footer items (client rectangles, positions, etc...).



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>UltimateListHeaderData</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.ultimatelistctrl.UltimateListHeaderData_inheritance.png" alt="Inheritance diagram of UltimateListHeaderData" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.html" title="wx.lib.agw.ultimatelistctrl.UltimateListHeaderData" alt="" coords="5,5,359,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.__init__`             Default class constructor.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.Check`                Checks/unchecks a header item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.CheckFooter`          Checks/unchecks a footer item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetCustomRenderer`    Returns the custom renderer associated with this item (if any).
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetFont`              Returns the header/footer item font.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetFooterFormat`      Returns the footer item format.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetFooterImage`       Returns a Python list with the zero-based indexes of the images associated
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetFooterKind`        Returns the footer item kind.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetFormat`            Returns the header item format.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetImage`             Returns a Python list with the zero-based indexes of the images associated
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetItem`              Returns information about the item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetKind`              Returns the header item kind.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetState`             Returns a bit field representing the state of the item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetText`              Returns the header/footer item text.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetToolTip`           Returns the header/footer item tooltip.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.GetWidth`             Returns the header/footer item width, in pixels.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.HasFooterImage`       Returns ``True`` if the footer item has at least one image associated
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.HasImage`             Returns ``True`` if the header item has at least one image associated
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.HasText`              Returns ``True`` if the currently set text colour is valid.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.Init`                 Initializes the header/footer item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.IsChecked`            Returns whether the header item is checked or not.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.IsFooterChecked`      Returns whether the footer item is checked or not.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.IsHit`                Returns ``True`` if the input position is inside the item client rectangle.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetCustomRenderer`    Associate a custom renderer to this item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetFont`              Sets a new font for the header item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetFooterFont`        Sets a new font for the footer item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetFooterFormat`      Sets the footer item format.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetFooterKind`        Sets the footer item kind.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetFormat`            Sets the header item format.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetHeight`            Sets the header/footer item height, in pixels.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetItem`              Sets information about the header/footer item.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetKind`              Sets the header item kind.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetPosition`          Sets the header/footer item position.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetState`             Sets the item state flags.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetText`              Sets the header/footer item text.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetToolTip`           Sets the header/footer item tooltip.
:meth:`~wx.lib.agw.ultimatelistctrl.UltimateListHeaderData.SetWidth`             Sets the header/footer item width, in pixels.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: UltimateListHeaderData(object)

   A simple class which holds information about :class:`UltimateListItem` visual
   attributes for the header/footer items (client rectangles, positions, etc...).

   .. method:: __init__(self, item=None)

      Default class constructor.
      
      :param `item`: another instance of :class:`UltimateListHeaderData`.


   .. method:: Check(self, checked=True)

      Checks/unchecks a header item.
      
      :param `checked`: ``True`` to check an item, ``False`` to uncheck it.
      
      :note: This method is meaningful only for check and radio header items.


   .. method:: CheckFooter(self, check=True)

      Checks/unchecks a footer item.
      
      :param `checked`: ``True`` to check an item, ``False`` to uncheck it.
      
      :note: This method is meaningful only for check and radio footer items.


   .. method:: GetCustomRenderer(self)

      Returns the custom renderer associated with this item (if any). 


   .. method:: GetFont(self)

      Returns the header/footer item font. 


   .. method:: GetFooterFormat(self)

      Returns the footer item format. 


   .. method:: GetFooterImage(self)

      Returns a Python list with the zero-based indexes of the images associated
      with the footer item into the image list.


   .. method:: GetFooterKind(self)

      Returns the footer item kind.
      
      :see: :meth:`~UltimateListHeaderData.SetKind` for a list of valid item kinds.


   .. method:: GetFormat(self)

      Returns the header item format. 


   .. method:: GetImage(self)

      Returns a Python list with the zero-based indexes of the images associated
      with the header item into the image list.


   .. method:: GetItem(self, item)

      Returns information about the item.
      
      :param `item`: an instance of :class:`UltimateListHeaderData`.


   .. method:: GetKind(self)

      Returns the header item kind.
      
      :see: :meth:`~UltimateListHeaderData.SetKind` for a list of valid item kinds.


   .. method:: GetState(self)

      Returns a bit field representing the state of the item.
      
      :see: :meth:`~UltimateListHeaderData.SetState` for a list of valid item states.


   .. method:: GetText(self)

      Returns the header/footer item text. 


   .. method:: GetToolTip(self)

      Returns the header/footer item tooltip. 


   .. method:: GetWidth(self)

      Returns the header/footer item width, in pixels. 


   .. method:: HasFooterImage(self)

      Returns ``True`` if the footer item has at least one image associated
      with it.


   .. method:: HasImage(self)

      Returns ``True`` if the header item has at least one image associated
      with it.


   .. method:: HasText(self)

      Returns ``True`` if the currently set text colour is valid. 


   .. method:: Init(self)

      Initializes the header/footer item. 


   .. method:: IsChecked(self)

      Returns whether the header item is checked or not. 


   .. method:: IsFooterChecked(self)

      Returns whether the footer item is checked or not. 


   .. method:: IsHit(self, x, y)

      Returns ``True`` if the input position is inside the item client rectangle.
      
      :param `x`: the `x` mouse position;
      :param `y`: the `y` mouse position.


   .. method:: SetCustomRenderer(self, renderer)

      Associate a custom renderer to this item.
      
      :param `renderer`: a class able to correctly render the item.
      
      :note: the renderer class **must** implement the methods `DrawHeaderButton`
       and `GetForegroundColor`.


   .. method:: SetFont(self, font)

      Sets a new font for the header item.
      
      :param `font`: an instance of :class:`wx.Font`.


   .. method:: SetFooterFont(self, font)

      Sets a new font for the footer item.
      
      :param `font`: an instance of :class:`wx.Font`.


   .. method:: SetFooterFormat(self, format)

      Sets the footer item format.
      
      :param `format`: the footer item format.


   .. method:: SetFooterKind(self, kind)

      Sets the footer item kind.
      
      :param `kind`: the footer item kind.
      
      :see: :meth:`~UltimateListHeaderData.SetKind` for a list of valid item kinds.


   .. method:: SetFormat(self, format)

      Sets the header item format.
      
      :param `format`: the header item format.


   .. method:: SetHeight(self, h)

      Sets the header/footer item height, in pixels.
      
      :param `h`: an integer value representing the header/footer height.


   .. method:: SetItem(self, item)

      Sets information about the header/footer item.
      
      :param `info`: an instance of :class:`UltimateListHeaderData`.


   .. method:: SetKind(self, kind)

      Sets the header item kind.
      
      :param `kind`: may be one of the following integers:
      
       =============== ==========================
       Item Kind       Description
       =============== ==========================
              0        A normal item
              1        A checkbox-like item
              2        A radiobutton-type item
       =============== ==========================


   .. method:: SetPosition(self, x, y)

      Sets the header/footer item position.
      
      :param `x`: the item `x` position;
      :param `y`: the item `y` position.


   .. method:: SetState(self, flag)

      Sets the item state flags.
      
      :param `state`: any combination of the following bits:
      
       ============================ ========= ==============================
       State Bits                   Hex Value Description
       ============================ ========= ==============================
       ``ULC_STATE_DONTCARE``             0x0 Don't care what the state is
       ``ULC_STATE_DROPHILITED``          0x1 The item is highlighted to receive a drop event
       ``ULC_STATE_FOCUSED``              0x2 The item has the focus
       ``ULC_STATE_SELECTED``             0x4 The item is selected
       ``ULC_STATE_CUT``                  0x8 The item is in the cut state
       ``ULC_STATE_DISABLED``            0x10 The item is disabled
       ``ULC_STATE_FILTERED``            0x20 The item has been filtered
       ``ULC_STATE_INUSE``               0x40 The item is in use
       ``ULC_STATE_PICKED``              0x80 The item has been picked
       ``ULC_STATE_SOURCE``             0x100 The item is a drag and drop source
       ============================ ========= ==============================


   .. method:: SetText(self, text)

      Sets the header/footer item text.
      
      :param `text`: the new header/footer text.


   .. method:: SetToolTip(self, tip)

      Sets the header/footer item tooltip.
      
      :param `tip`: the new header/footer tooltip.


   .. method:: SetWidth(self, w)

      Sets the header/footer item width, in pixels.
      
      :param `w`: an integer value representing the header/footer width.


