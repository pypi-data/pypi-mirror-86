.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.plot.polyobjects

.. highlight:: python



.. _wx.lib.plot.polyobjects.PolyHistogram:

==========================================================================================================================================
|phoenix_title|  **wx.lib.plot.polyobjects.PolyHistogram**
==========================================================================================================================================

Creates a PolyHistogram object.

:param hist: The histogram data.
:type hist: sequence of ``y`` values that define the heights of the bars
:param binspec: The bin specification.
:type binspec: sequence of ``x`` values that define the edges of the bins
:param **attr: keyword attributes

=================================  =============  =======================
Keyword and Default                Description    Type
=================================  =============  =======================
``edgecolour='black'``             edge color     :class:`wx.Colour`
``edgewidth=3``                    edge width     float
``edgestyle=wx.PENSTYLE_SOLID``    edge style     :class:`wx.PenStyle`
``fillcolour='blue'``              fill color     :class:`wx.Colour`
``fillstyle=wx.BRUSHSTYLE_SOLID``  fill style     :class:`wx.BrushStyle`
``legend=''``                      legend string  str
=================================  =============  =======================

.. tip::

   Use ``np.histogram()`` to easily create your histogram parameters::

     hist_data, binspec = np.histogram(data)
     hist_plot = PolyHistogram(hist_data, binspec)

.. important::

   ``len(binspec)`` must equal ``len(hist) + 1``.

.. warning::

   All methods except ``__init__`` are private.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PolyHistogram</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.plot.polyobjects.PolyHistogram_inheritance.png" alt="Inheritance diagram of PolyHistogram" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.plot.polyobjects.PolyHistogram.html" title="wx.lib.plot.polyobjects.PolyHistogram" alt="" coords="5,160,275,189"/> <area shape="rect" id="node2" href="wx.lib.plot.polyobjects.PolyBarsBase.html" title="wx.lib.plot.polyobjects.PolyBarsBase" alt="" coords="9,83,271,112"/> <area shape="rect" id="node3" href="wx.lib.plot.polyobjects.PolyPoints.html" title="wx.lib.plot.polyobjects.PolyPoints" alt="" coords="19,5,261,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.plot.polyobjects.PolyBarsBase`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.plot.polyobjects.PolyHistogram.__init__`                          
:meth:`~wx.lib.plot.polyobjects.PolyHistogram.calc_rect`                         Calculate the rectangle for plotting.
:meth:`~wx.lib.plot.polyobjects.PolyHistogram.draw`                              Draw the bars
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PolyHistogram(PolyBarsBase)

   Creates a PolyHistogram object.
   
   :param hist: The histogram data.
   :type hist: sequence of ``y`` values that define the heights of the bars
   :param binspec: The bin specification.
   :type binspec: sequence of ``x`` values that define the edges of the bins
   :param **attr: keyword attributes
   
   =================================  =============  =======================
   Keyword and Default                Description    Type
   =================================  =============  =======================
   ``edgecolour='black'``             edge color     :class:`wx.Colour`
   ``edgewidth=3``                    edge width     float
   ``edgestyle=wx.PENSTYLE_SOLID``    edge style     :class:`wx.PenStyle`
   ``fillcolour='blue'``              fill color     :class:`wx.Colour`
   ``fillstyle=wx.BRUSHSTYLE_SOLID``  fill style     :class:`wx.BrushStyle`
   ``legend=''``                      legend string  str
   =================================  =============  =======================
   
   .. tip::
   
      Use ``np.histogram()`` to easily create your histogram parameters::
   
        hist_data, binspec = np.histogram(data)
        hist_plot = PolyHistogram(hist_data, binspec)
   
   .. important::
   
      ``len(binspec)`` must equal ``len(hist) + 1``.
   
   .. warning::
   
      All methods except ``__init__`` are private.

   .. method:: __init__(self, hist, binspec, \*\*attr)


   .. method:: calc_rect(self, y, low, high)

      Calculate the rectangle for plotting. 


   .. method:: draw(self, dc, printerScale, coord=None)

      Draw the bars 


