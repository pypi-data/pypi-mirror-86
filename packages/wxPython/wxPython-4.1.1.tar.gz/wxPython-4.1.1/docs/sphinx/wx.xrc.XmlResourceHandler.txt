.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.xrc.XmlResourceHandler:

==========================================================================================================================================
|phoenix_title|  **wx.xrc.XmlResourceHandler**
==========================================================================================================================================

:ref:`SizerXmlHandler`  is a class for resource handlers capable of creating a :ref:`wx.Sizer`  object from an ``XML`` node.          

:ref:`wx.xrc.XmlResourceHandler`  is an abstract base class for resource handlers capable of creating a control from an ``XML`` node. 







See :ref:`XML Based Resource System <xml based resource system>`   for details. 









.. seealso:: :ref:`wx.xrc.XmlResourceHandler`, :ref:`wx.Sizer`  







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>XmlResourceHandler</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.xrc.XmlResourceHandler_inheritance.png" alt="Inheritance diagram of XmlResourceHandler" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.xrc.XmlResourceHandler.html" title="wx.xrc.XmlResourceHandler" alt="" coords="5,83,211,112"/> <area shape="rect" id="node2" href="wx.Object.html" title="wx.Object" alt="" coords="65,5,151,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`SizerXmlHandler`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.xrc.XmlResourceHandler.__init__`                                      Default constructor.
:meth:`~wx.xrc.XmlResourceHandler.AddStyle`                                      Add a style flag (e.g.
:meth:`~wx.xrc.XmlResourceHandler.AddWindowStyles`                               Add styles common to all Window-derived classes.
:meth:`~wx.xrc.XmlResourceHandler.CanHandle`                                     Returns ``True`` if it understands this node and can create a resource from it, ``False`` otherwise.
:meth:`~wx.xrc.XmlResourceHandler.CreateChildren`                                Creates children.
:meth:`~wx.xrc.XmlResourceHandler.CreateChildrenPrivately`                       Helper function.
:meth:`~wx.xrc.XmlResourceHandler.CreateResFromNode`                             Creates a resource from a node.
:meth:`~wx.xrc.XmlResourceHandler.CreateResource`                                Creates an object (menu, dialog, control, ...) from an ``XML`` node.
:meth:`~wx.xrc.XmlResourceHandler.DoCreateResource`                              Called from CreateResource after variables were filled.
:meth:`~wx.xrc.XmlResourceHandler.GetAnimation`                                  Creates an animation (see :ref:`wx.adv.Animation`) from the filename specified in `param`.
:meth:`~wx.xrc.XmlResourceHandler.GetBitmap`                                     Gets a bitmap.
:meth:`~wx.xrc.XmlResourceHandler.GetBool`                                       Gets a bool flag (1, t, yes, on, ``True`` are ``True``, everything else is ``False``).
:meth:`~wx.xrc.XmlResourceHandler.GetClass`                                      After CreateResource has been called this will return the class name of the ``XML`` resource node being processed.
:meth:`~wx.xrc.XmlResourceHandler.GetColour`                                     Gets colour in HTML syntax (#``RRGGBB``).
:meth:`~wx.xrc.XmlResourceHandler.GetCurFileSystem`                              Returns the current file system.
:meth:`~wx.xrc.XmlResourceHandler.GetDimension`                                  Gets a dimension (may be in dialog units).
:meth:`~wx.xrc.XmlResourceHandler.GetDirection`                                  Gets a direction.
:meth:`~wx.xrc.XmlResourceHandler.GetFloat`                                      Gets a float value from the parameter.
:meth:`~wx.xrc.XmlResourceHandler.GetFont`                                       Gets a font.
:meth:`~wx.xrc.XmlResourceHandler.GetID`                                         Returns the ``wx.xrc.XRCID``.
:meth:`~wx.xrc.XmlResourceHandler.GetIcon`                                       Returns an icon.
:meth:`~wx.xrc.XmlResourceHandler.GetIconBundle`                                 Returns an icon bundle.
:meth:`~wx.xrc.XmlResourceHandler.GetImageList`                                  Creates an image list from the `param`  markup data.
:meth:`~wx.xrc.XmlResourceHandler.GetInstance`                                   After CreateResource has been called this will return the instance that the ``XML`` resource content should be created upon, if it has already been created.
:meth:`~wx.xrc.XmlResourceHandler.GetLong`                                       Gets the integer value from the parameter.
:meth:`~wx.xrc.XmlResourceHandler.GetName`                                       Returns the resource name.
:meth:`~wx.xrc.XmlResourceHandler.GetNode`                                       After CreateResource has been called this will return the ``XML`` node being processed.
:meth:`~wx.xrc.XmlResourceHandler.GetNodeChildren`                               Gets the first child of the given node or ``None``.
:meth:`~wx.xrc.XmlResourceHandler.GetNodeContent`                                Gets node content from ``wx.xml.XML_ENTITY_NODE``.
:meth:`~wx.xrc.XmlResourceHandler.GetNodeNext`                                   Gets the next sibling node related to the given node, possibly ``None``.
:meth:`~wx.xrc.XmlResourceHandler.GetNodeParent`                                 Gets the parent of the node given.
:meth:`~wx.xrc.XmlResourceHandler.GetParamNode`                                  Finds the node or returns ``None``.
:meth:`~wx.xrc.XmlResourceHandler.GetParamValue`                                 Finds the parameter value or returns the empty string.
:meth:`~wx.xrc.XmlResourceHandler.GetParent`                                     After CreateResource has been called this will return the current item's parent, if any.
:meth:`~wx.xrc.XmlResourceHandler.GetParentAsWindow`                             After CreateResource has been called this will return the item's parent as a :ref:`wx.Window`.
:meth:`~wx.xrc.XmlResourceHandler.GetPosition`                                   Gets the position (may be in dialog units).
:meth:`~wx.xrc.XmlResourceHandler.GetResource`                                   After CreateResource has been called this will return the current :ref:`wx.xrc.XmlResource`  object.
:meth:`~wx.xrc.XmlResourceHandler.GetSize`                                       Gets the size (may be in dialog units).
:meth:`~wx.xrc.XmlResourceHandler.GetStyle`                                      Gets style flags from text in form "flag | flag2| flag3 |..." Only understands flags added with :meth:`~XmlResourceHandler.AddStyle` .
:meth:`~wx.xrc.XmlResourceHandler.GetText`                                       Gets text from param and does some conversions
:meth:`~wx.xrc.XmlResourceHandler.HasParam`                                      Check to see if a parameter exists.
:meth:`~wx.xrc.XmlResourceHandler.IsObjectNode`                                  Checks if the given node is an object node.
:meth:`~wx.xrc.XmlResourceHandler.IsOfClass`                                     Convenience function.
:meth:`~wx.xrc.XmlResourceHandler.ReportError`                                   Reports error in ``XRC`` resources to the user.
:meth:`~wx.xrc.XmlResourceHandler.ReportParamError`                              Like :meth:`~XmlResourceHandler.ReportError` , but uses the node of parameter `param`  of the currently processed object as the context.
:meth:`~wx.xrc.XmlResourceHandler.SetParentResource`                             Sets the parent resource.
:meth:`~wx.xrc.XmlResourceHandler.SetupWindow`                                   Sets common window options.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.xrc.XmlResourceHandler.Animation`                                     See :meth:`~wx.xrc.XmlResourceHandler.GetAnimation`
:attr:`~wx.xrc.XmlResourceHandler.Bitmap`                                        See :meth:`~wx.xrc.XmlResourceHandler.GetBitmap`
:attr:`~wx.xrc.XmlResourceHandler.Class`                                         See :meth:`~wx.xrc.XmlResourceHandler.GetClass`
:attr:`~wx.xrc.XmlResourceHandler.CurFileSystem`                                 See :meth:`~wx.xrc.XmlResourceHandler.GetCurFileSystem`
:attr:`~wx.xrc.XmlResourceHandler.Font`                                          See :meth:`~wx.xrc.XmlResourceHandler.GetFont`
:attr:`~wx.xrc.XmlResourceHandler.ID`                                            See :meth:`~wx.xrc.XmlResourceHandler.GetID`
:attr:`~wx.xrc.XmlResourceHandler.Icon`                                          See :meth:`~wx.xrc.XmlResourceHandler.GetIcon`
:attr:`~wx.xrc.XmlResourceHandler.ImageList`                                     See :meth:`~wx.xrc.XmlResourceHandler.GetImageList`
:attr:`~wx.xrc.XmlResourceHandler.Instance`                                      See :meth:`~wx.xrc.XmlResourceHandler.GetInstance`
:attr:`~wx.xrc.XmlResourceHandler.Name`                                          See :meth:`~wx.xrc.XmlResourceHandler.GetName`
:attr:`~wx.xrc.XmlResourceHandler.Node`                                          See :meth:`~wx.xrc.XmlResourceHandler.GetNode`
:attr:`~wx.xrc.XmlResourceHandler.Parent`                                        See :meth:`~wx.xrc.XmlResourceHandler.GetParent`
:attr:`~wx.xrc.XmlResourceHandler.ParentAsWindow`                                See :meth:`~wx.xrc.XmlResourceHandler.GetParentAsWindow`
:attr:`~wx.xrc.XmlResourceHandler.Position`                                      See :meth:`~wx.xrc.XmlResourceHandler.GetPosition`
:attr:`~wx.xrc.XmlResourceHandler.Resource`                                      See :meth:`~wx.xrc.XmlResourceHandler.GetResource`
:attr:`~wx.xrc.XmlResourceHandler.Size`                                          See :meth:`~wx.xrc.XmlResourceHandler.GetSize`
:attr:`~wx.xrc.XmlResourceHandler.Style`                                         See :meth:`~wx.xrc.XmlResourceHandler.GetStyle`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.xrc.XmlResourceHandler(Object)

   **Possible constructors**::

       XmlResourceHandler()
       
   
   SizerXmlHandler is a class for resource handlers capable of creating
   a Sizer object from an ``XML`` node.



   .. method:: __init__(self)

      Default constructor.                   





   .. method:: AddStyle(self, name, value)

      Add a style flag (e.g.                  

       ``MB_DOCKABLE`` ) to the list of flags understood by this handler.                   


      :param `name`: 
      :type `name`: string
      :param `value`: 
      :type `value`: int







   .. method:: AddWindowStyles(self)

      Add styles common to all Window-derived classes.                   





   .. method:: CanHandle(self, node)

      Returns ``True`` if it understands this node and can create a resource from it, ``False`` otherwise.                  

                


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: `bool`







      .. note:: 

         You must not call any :ref:`wx.xrc.XmlResourceHandler`  methods except :meth:`IsOfClass`   from this method! The instance is not yet initialized with node data at the time :meth:`CanHandle`   is called and it is only safe to operate on node directly or to call :meth:`IsOfClass` .   








   .. method:: CreateChildren(self, parent, this_hnd_only=False)

      Creates children.                  


      :param `parent`: 
      :type `parent`: wx.Object
      :param `this_hnd_only`: 
      :type `this_hnd_only`: bool







   .. method:: CreateChildrenPrivately(self, parent, rootnode=None)

      Helper function.                  


      :param `parent`: 
      :type `parent`: wx.Object
      :param `rootnode`: 
      :type `rootnode`: wx.xml.XmlNode







   .. method:: CreateResFromNode(self, node, parent, instance=None)

      Creates a resource from a node.                  


      :param `node`: 
      :type `node`: wx.xml.XmlNode
      :param `parent`: 
      :type `parent`: wx.Object
      :param `instance`: 
      :type `instance`: wx.Object




      :rtype: :ref:`wx.Object`








   .. method:: CreateResource(self, node, parent, instance)

      Creates an object (menu, dialog, control, ...) from an ``XML`` node.                  

      Should check for validity. `parent`  is a higher-level object (usually window, dialog or panel) that is often necessary to create the resource. 

      If **instance**  is non-NULL it should not create a new instance via 'new' but should rather use this one, and call its Create method.                  


      :param `node`: 
      :type `node`: wx.xml.XmlNode
      :param `parent`: 
      :type `parent`: wx.Object
      :param `instance`: 
      :type `instance`: wx.Object




      :rtype: :ref:`wx.Object`








   .. method:: DoCreateResource(self)

      Called from CreateResource after variables were filled.                  

      :rtype: :ref:`wx.Object`








   .. method:: GetAnimation(self, param="animation", ctrl=None)

      Creates an animation (see :ref:`wx.adv.Animation`) from the filename specified in `param`.                  

      It is recommended to provide `ctrl`  argument to this function (which is only available in wxWidgets 3.1.4 or later) to make sure that the created animation is compatible with the specified control, otherwise a :ref:`wx.adv.Animation`  object compatible with the default :ref:`wx.adv.AnimationCtrl`  implementation is created.                  


      :param `param`: 
      :type `param`: string
      :param `ctrl`: 
      :type `ctrl`: wx.adv.AnimationCtrl




      :rtype: :ref:`wx.adv.Animation`








   .. method:: GetBitmap(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **GetBitmap** `(self, param="bitmap", defaultArtClient=ART_OTHER, size=DefaultSize)`
      
      Gets a bitmap.                  
      
      
      :param `param`: 
      :type `param`: string
      :param `defaultArtClient`: 
      :type `defaultArtClient`: wx.ArtClient
      :param `size`: 
      :type `size`: wx.Size
      
      
      
      
      :rtype: :ref:`wx.Bitmap`
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **GetBitmap** `(self, node, defaultArtClient=ART_OTHER, size=DefaultSize)`
      
      Gets a bitmap from an XmlNode.                  
      
                      
      
      
      :param `node`: 
      :type `node`: wx.xml.XmlNode
      :param `defaultArtClient`: 
      :type `defaultArtClient`: wx.ArtClient
      :param `size`: 
      :type `size`: wx.Size
      
      
      
      
      :rtype: :ref:`wx.Bitmap`
      
      
      
      
      
      
      
      .. versionadded:: 2.9.1 
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetBool(self, param, defaultv=False)

      Gets a bool flag (1, t, yes, on, ``True`` are ``True``, everything else is ``False``).                  


      :param `param`: 
      :type `param`: string
      :param `defaultv`: 
      :type `defaultv`: bool




      :rtype: `bool`








   .. method:: GetClass(self)

      After CreateResource has been called this will return the class name of the ``XML`` resource node being processed.                  

                

      :rtype: `string`







      .. versionadded:: 2.9.5 
     








   .. method:: GetColour(self, param, defaultColour=NullColour)

      Gets colour in HTML syntax (#``RRGGBB``).                  


      :param `param`: 
      :type `param`: string
      :param `defaultColour`: 
      :type `defaultColour`: wx.Colour




      :rtype: :ref:`wx.Colour`








   .. method:: GetCurFileSystem(self)

      Returns the current file system.                  

      :rtype: :ref:`wx.FileSystem`








   .. method:: GetDimension(self, param, defaultv=0, windowToUse=0)

      Gets a dimension (may be in dialog units).                  


      :param `param`: 
      :type `param`: string
      :param `defaultv`: 
      :type `defaultv`: int
      :param `windowToUse`: 
      :type `windowToUse`: wx.Window




      :rtype: :ref:`wx.Coord`








   .. method:: GetDirection(self, param, dirDefault=LEFT)

      Gets a direction.                  

      If the given `param`  is not present or has empty value, `dirDefault`  is returned by default. Otherwise the value of the parameter is parsed and a warning is generated if it's not one of  ``LEFT`` ,   ``TOP`` ,   ``RIGHT``   or   ``BOTTOM`` . 

                


      :param `param`: 
      :type `param`: string
      :param `dirDefault`: 
      :type `dirDefault`: wx.DataObject.Direction




      :rtype: :ref:`wx.DataObject.Direction`







      .. versionadded:: 2.9.3 
     








   .. method:: GetFloat(self, param, defaultv=0)

      Gets a float value from the parameter.                  


      :param `param`: 
      :type `param`: string
      :param `defaultv`: 
      :type `defaultv`: float




      :rtype: `float`








   .. method:: GetFont(self, param="font")

      Gets a font.                  


      :param `param`: 
      :type `param`: string




      :rtype: :ref:`wx.Font`








   .. method:: GetID(self)

      Returns the ``wx.xrc.XRCID``.                  

      :rtype: `int`








   .. method:: GetIcon(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **GetIcon** `(self, param="icon", defaultArtClient=ART_OTHER, size=DefaultSize)`
      
      Returns an icon.                  
      
      
      :param `param`: 
      :type `param`: string
      :param `defaultArtClient`: 
      :type `defaultArtClient`: wx.ArtClient
      :param `size`: 
      :type `size`: wx.Size
      
      
      
      
      :rtype: :ref:`wx.Icon`
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **GetIcon** `(self, node, defaultArtClient=ART_OTHER, size=DefaultSize)`
      
      Gets an icon from an XmlNode.                  
      
                      
      
      
      :param `node`: 
      :type `node`: wx.xml.XmlNode
      :param `defaultArtClient`: 
      :type `defaultArtClient`: wx.ArtClient
      :param `size`: 
      :type `size`: wx.Size
      
      
      
      
      :rtype: :ref:`wx.Icon`
      
      
      
      
      
      
      
      .. versionadded:: 2.9.1 
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetIconBundle(self, param, defaultArtClient=ART_OTHER)

      Returns an icon bundle.                  

                


      :param `param`: 
      :type `param`: string
      :param `defaultArtClient`: 
      :type `defaultArtClient`: wx.ArtClient




      :rtype: :ref:`wx.IconBundle`







      .. versionadded:: 2.9.0 
     







      .. note:: 

         Bundles can be loaded either with stock IDs or from files that contain more than one image (e.g. Windows icon files). If a file contains only single image, a bundle with only one icon will be created.  








   .. method:: GetImageList(self, param="imagelist")

      Creates an image list from the `param`  markup data.                  

                


      :param `param`: 
      :type `param`: string




      :rtype: :ref:`wx.ImageList`







      :returns: 

         The new instance of :ref:`wx.ImageList`  or ``None`` if no data is found.  







      .. versionadded:: 2.9.1 
     








   .. method:: GetInstance(self)

      After CreateResource has been called this will return the instance that the ``XML`` resource content should be created upon, if it has already been created.                  

      If ``None`` then the handler should create the object itself. 

                

      :rtype: :ref:`wx.Object`







      .. versionadded:: 2.9.5 
     








   .. method:: GetLong(self, param, defaultv=0)

      Gets the integer value from the parameter.                  


      :param `param`: 
      :type `param`: string
      :param `defaultv`: 
      :type `defaultv`: long




      :rtype: `long`








   .. method:: GetName(self)

      Returns the resource name.                  

      :rtype: `string`








   .. method:: GetNode(self)

      After CreateResource has been called this will return the ``XML`` node being processed.                  

                

      :rtype: :ref:`wx.xml.XmlNode`







      .. versionadded:: 2.9.5 
     








   .. method:: GetNodeChildren(self, node)

      Gets the first child of the given node or ``None``.                  

      This method is safe to call with ``None`` argument, it just returns ``None`` in this case. 

                


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: :ref:`wx.xml.XmlNode`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: GetNodeContent(self, node)

      Gets node content from ``wx.xml.XML_ENTITY_NODE``.                  


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: `string`








   .. method:: GetNodeNext(self, node)

      Gets the next sibling node related to the given node, possibly ``None``.                  

      This method is safe to call with ``None`` argument, it just returns ``None`` in this case. 

                


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: :ref:`wx.xml.XmlNode`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: GetNodeParent(self, node)

      Gets the parent of the node given.                  

      This method is safe to call with ``None`` argument, it just returns ``None`` in this case. 

                


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: :ref:`wx.xml.XmlNode`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: GetParamNode(self, param)

      Finds the node or returns ``None``.                  


      :param `param`: 
      :type `param`: string




      :rtype: :ref:`wx.xml.XmlNode`








   .. method:: GetParamValue(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **GetParamValue** `(self, param)`
      
      Finds the parameter value or returns the empty string.                  
      
      
      :param `param`: 
      :type `param`: string
      
      
      
      
      :rtype: `string`
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **GetParamValue** `(self, node)`
      
      Returns the node parameter value.                  
      
                      
      
      
      :param `node`: 
      :type `node`: wx.xml.XmlNode
      
      
      
      
      :rtype: `string`
      
      
      
      
      
      
      
      .. versionadded:: 2.9.1 
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: GetParent(self)

      After CreateResource has been called this will return the current item's parent, if any.                  

                

      :rtype: :ref:`wx.Object`







      .. versionadded:: 2.9.5 
     








   .. method:: GetParentAsWindow(self)

      After CreateResource has been called this will return the item's parent as a :ref:`wx.Window`.                  

                

      :rtype: :ref:`wx.Window`







      .. versionadded:: 2.9.5 
     








   .. method:: GetPosition(self, param="pos")

      Gets the position (may be in dialog units).                  


      :param `param`: 
      :type `param`: string




      :rtype: :ref:`wx.Point`








   .. method:: GetResource(self)

      After CreateResource has been called this will return the current :ref:`wx.xrc.XmlResource`  object.                  

                

      :rtype: :ref:`wx.xrc.XmlResource`







      .. versionadded:: 2.9.5 
     








   .. method:: GetSize(self, param="size", windowToUse=0)

      Gets the size (may be in dialog units).                  


      :param `param`: 
      :type `param`: string
      :param `windowToUse`: 
      :type `windowToUse`: wx.Window




      :rtype: :ref:`wx.Size`








   .. method:: GetStyle(self, param="style", defaults=0)

      Gets style flags from text in form "flag | flag2| flag3 |..." Only understands flags added with :meth:`AddStyle` .                  


      :param `param`: 
      :type `param`: string
      :param `defaults`: 
      :type `defaults`: int




      :rtype: `int`








   .. method:: GetText(self, param, translate=True)

      Gets text from param and does some conversions:                  



      - replaces \\n, \\r, \\t by respective characters (according to C syntax) 
      - replaces  ``$``   by   ``and``       ``$$``   by   ``$``   (needed for   ``_File``   to   ``File``   translation because of ``XML`` syntax) 
      - calls GetTranslations (unless disabled in :ref:`wx.xrc.XmlResource`)  


                 


      :param `param`: 
      :type `param`: string
      :param `translate`: 
      :type `translate`: bool




      :rtype: `string`








   .. method:: HasParam(self, param)

      Check to see if a parameter exists.                  


      :param `param`: 
      :type `param`: string




      :rtype: `bool`








   .. method:: IsObjectNode(self, node)

      Checks if the given node is an object node.                  

      Object nodes are those named "object" or "object_ref". 

                


      :param `node`: 
      :type `node`: wx.xml.XmlNode




      :rtype: `bool`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: IsOfClass(self, node, classname)

      Convenience function.                  

      Returns ``True`` if the node has a property class equal to classname, e.g. object class="wxDialog".                  


      :param `node`: 
      :type `node`: wx.xml.XmlNode
      :param `classname`: 
      :type `classname`: string




      :rtype: `bool`








   .. method:: ReportError(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **ReportError** `(self, context, message)`
      
      Reports error in ``XRC`` resources to the user.                  
      
      See :meth:`wx.xrc.XmlResource.ReportError`   for more information. 
      
                      
      
      
      :param `context`: 
      :type `context`: wx.xml.XmlNode
      :param `message`: 
      :type `message`: string
      
      
      
      
      
      
      .. versionadded:: 2.9.0 
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **ReportError** `(self, message)`
      
      Like :meth:`ReportError` , but uses the node of currently processed object (m_node) as the context.                  
      
                      
      
      
      :param `message`: 
      :type `message`: string
      
      
      
      
      
      
      .. versionadded:: 2.9.0 
           
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: ReportParamError(self, param, message)

      Like :meth:`ReportError` , but uses the node of parameter `param`  of the currently processed object as the context.                  

      This is convenience function for reporting errors in particular parameters. 

                


      :param `param`: 
      :type `param`: string
      :param `message`: 
      :type `message`: string






      .. versionadded:: 2.9.0 
     








   .. method:: SetParentResource(self, res)

      Sets the parent resource.                  


      :param `res`: 
      :type `res`: wx.xrc.XmlResource







   .. method:: SetupWindow(self, wnd)

      Sets common window options.                  


      :param `wnd`: 
      :type `wnd`: wx.Window







   .. attribute:: Animation

      See :meth:`~wx.xrc.XmlResourceHandler.GetAnimation`


   .. attribute:: Bitmap

      See :meth:`~wx.xrc.XmlResourceHandler.GetBitmap`


   .. attribute:: Class

      See :meth:`~wx.xrc.XmlResourceHandler.GetClass`


   .. attribute:: CurFileSystem

      See :meth:`~wx.xrc.XmlResourceHandler.GetCurFileSystem`


   .. attribute:: Font

      See :meth:`~wx.xrc.XmlResourceHandler.GetFont`


   .. attribute:: ID

      See :meth:`~wx.xrc.XmlResourceHandler.GetID`


   .. attribute:: Icon

      See :meth:`~wx.xrc.XmlResourceHandler.GetIcon`


   .. attribute:: ImageList

      See :meth:`~wx.xrc.XmlResourceHandler.GetImageList`


   .. attribute:: Instance

      See :meth:`~wx.xrc.XmlResourceHandler.GetInstance`


   .. attribute:: Name

      See :meth:`~wx.xrc.XmlResourceHandler.GetName`


   .. attribute:: Node

      See :meth:`~wx.xrc.XmlResourceHandler.GetNode`


   .. attribute:: Parent

      See :meth:`~wx.xrc.XmlResourceHandler.GetParent`


   .. attribute:: ParentAsWindow

      See :meth:`~wx.xrc.XmlResourceHandler.GetParentAsWindow`


   .. attribute:: Position

      See :meth:`~wx.xrc.XmlResourceHandler.GetPosition`


   .. attribute:: Resource

      See :meth:`~wx.xrc.XmlResourceHandler.GetResource`


   .. attribute:: Size

      See :meth:`~wx.xrc.XmlResourceHandler.GetSize`


   .. attribute:: Style

      See :meth:`~wx.xrc.XmlResourceHandler.GetStyle`

