.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.artmanager

.. highlight:: python



.. _wx.lib.agw.artmanager.RendererXP:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.artmanager.RendererXP**
==========================================================================================================================================

Xp-Style renderer. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>RendererXP</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.artmanager.RendererXP_inheritance.png" alt="Inheritance diagram of RendererXP" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.artmanager.RendererXP.html" title="wx.lib.agw.artmanager.RendererXP" alt="" coords="13,83,262,112"/> <area shape="rect" id="node2" href="wx.lib.agw.artmanager.RendererBase.html" title="wx.lib.agw.artmanager.RendererBase" alt="" coords="5,5,269,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.lib.agw.artmanager.RendererBase`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.artmanager.RendererXP.__init__`                               Default class constructor.
:meth:`~wx.lib.agw.artmanager.RendererXP.DrawButton`                             Draws a button using the XP theme.
:meth:`~wx.lib.agw.artmanager.RendererXP.DrawButtonColour`                       Draws a button using the XP theme.
:meth:`~wx.lib.agw.artmanager.RendererXP.DrawButtonTheme`                        Draws a button using the XP theme.
:meth:`~wx.lib.agw.artmanager.RendererXP.DrawMenuBarBg`                          Draws the menu bar background according to the active theme.
:meth:`~wx.lib.agw.artmanager.RendererXP.DrawToolBarBg`                          Draws the toolbar background according to the active theme.
:meth:`~wx.lib.agw.artmanager.RendererXP.GetTextColourEnable`                    Returns the colour used for text colour when enabled.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: RendererXP(RendererBase)

   Xp-Style renderer. 

   .. method:: __init__(self)

      Default class constructor. 


   .. method:: DrawButton(self, dc, rect, state, input=None)

      Draws a button using the XP theme.
      
      :param `dc`: an instance of :class:`wx.DC`;
      :param wx.Rect `rect`: the button's client rectangle;
      :param integer `state`: the button state;
      :param `input`: a flag used to call the right method.


   .. method:: DrawButtonColour(self, dc, rect, state, colour)

      Draws a button using the XP theme.
      
      :param `dc`: an instance of :class:`wx.DC`;
      :param wx.Rect `rect`: the button's client rectangle;
      :param integer `state`: the button state;
      :param `colour`: a valid :class:`wx.Colour` instance.


   .. method:: DrawButtonTheme(self, dc, rect, state, useLightColours=None)

      Draws a button using the XP theme.
      
      :param `dc`: an instance of :class:`wx.DC`;
      :param wx.Rect `rect`: the button's client rectangle;
      :param integer `state`: the button state;
      :param bool `useLightColours`: ``True`` to use light colours, ``False`` otherwise.


   .. method:: DrawMenuBarBg(self, dc, rect)

      Draws the menu bar background according to the active theme.
      
      :param `dc`: an instance of :class:`wx.DC`;
      :param wx.Rect `rect`: the menu bar's client rectangle.


   .. method:: DrawToolBarBg(self, dc, rect)

      Draws the toolbar background according to the active theme.
      
      :param `dc`: an instance of :class:`wx.DC`;
      :param wx.Rect `rect`: the toolbar's client rectangle.


   .. method:: GetTextColourEnable(self)

      Returns the colour used for text colour when enabled.
      
      :return: An instance of :class:`wx.Colour`.


