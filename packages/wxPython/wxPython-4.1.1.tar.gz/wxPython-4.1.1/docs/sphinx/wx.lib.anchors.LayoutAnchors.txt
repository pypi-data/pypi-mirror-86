.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.anchors

.. highlight:: python



.. _wx.lib.anchors.LayoutAnchors:

==========================================================================================================================================
|phoenix_title|  **wx.lib.anchors.LayoutAnchors**
==========================================================================================================================================

A class that implements Delphi's Anchors with :class:`wx.LayoutConstraints`.

Anchored sides maintain the distance from the edge of the control
to the same edge of the parent.  When neither side is selected,
the control keeps the same relative position to both sides.

The current position and size of the control and it's parent is
used when setting up the constraints. To change the size or
position of an already anchored control, set the constraints to
None, reposition or resize and reapply the anchors.

Examples::

    Let's anchor the right and bottom edge of a control and
    resize it's parent.

    ctrl.SetConstraints(LayoutAnchors(ctrl, left=0, top=0, right=1, bottom=1))

    +=========+         +===================+
    | +-----+ |         |                   |
    | |     * |   ->    |                   |
    | +--*--+ |         |           +-----+ |
    +---------+         |           |     * |
                        |           +--*--+ |
                        +-------------------+
    * = anchored edge

    When anchored on both sides the control will stretch horizontally.

    ctrl.SetConstraints(LayoutAnchors(ctrl, 1, 0, 1, 1))

    +=========+         +===================+
    | +-----+ |         |                   |
    | *     * |   ->    |                   |
    | +--*--+ |         | +---------------+ |
    +---------+         | *     ctrl      * |
                        | +-------*-------+ |
                        +-------------------+
    * = anchored edge



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>LayoutAnchors</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.anchors.LayoutAnchors_inheritance.png" alt="Inheritance diagram of LayoutAnchors" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.anchors.LayoutAnchors.html" title="wx.lib.anchors.LayoutAnchors" alt="" coords="5,160,221,189"/> <area shape="rect" id="node2" href="wx.LayoutConstraints.html" title="wx.LayoutConstraints" alt="" coords="32,83,195,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="70,5,157,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.LayoutConstraints`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.anchors.LayoutAnchors.__init__`                                   Initialize self.  See help(type(self)) for accurate signature.
:meth:`~wx.lib.anchors.LayoutAnchors.setConstraintSides`                         
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: LayoutAnchors(wx.LayoutConstraints)

   A class that implements Delphi's Anchors with :class:`wx.LayoutConstraints`.
   
   Anchored sides maintain the distance from the edge of the control
   to the same edge of the parent.  When neither side is selected,
   the control keeps the same relative position to both sides.
   
   The current position and size of the control and it's parent is
   used when setting up the constraints. To change the size or
   position of an already anchored control, set the constraints to
   None, reposition or resize and reapply the anchors.
   
   Examples::
   
       Let's anchor the right and bottom edge of a control and
       resize it's parent.
   
       ctrl.SetConstraints(LayoutAnchors(ctrl, left=0, top=0, right=1, bottom=1))
   
       +=========+         +===================+
       | +-----+ |         |                   |
       | |     * |   ->    |                   |
       | +--*--+ |         |           +-----+ |
       +---------+         |           |     * |
                           |           +--*--+ |
                           +-------------------+
       * = anchored edge
   
       When anchored on both sides the control will stretch horizontally.
   
       ctrl.SetConstraints(LayoutAnchors(ctrl, 1, 0, 1, 1))
   
       +=========+         +===================+
       | +-----+ |         |                   |
       | *     * |   ->    |                   |
       | +--*--+ |         | +---------------+ |
       +---------+         | *     ctrl      * |
                           | +-------*-------+ |
                           +-------------------+
       * = anchored edge

   .. method:: __init__(self, control, left=1, top=1, right=0, bottom=0)

      Initialize self.  See help(type(self)) for accurate signature.


   .. method:: setConstraintSides(self, side1, side1Edge, side1Anchor, side2, side2Edge, side2Anchor, size, sizeEdge, centre, cPos, cSize, pSize, parent)


