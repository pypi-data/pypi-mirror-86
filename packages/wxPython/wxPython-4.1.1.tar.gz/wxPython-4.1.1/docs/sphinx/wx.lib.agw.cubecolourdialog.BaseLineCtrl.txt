.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.cubecolourdialog

.. highlight:: python



.. _wx.lib.agw.cubecolourdialog.BaseLineCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.cubecolourdialog.BaseLineCtrl**
==========================================================================================================================================

Base class used to hold common code for the Alpha channel control and the
brightness palette control.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>BaseLineCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.cubecolourdialog.BaseLineCtrl_inheritance.png" alt="Inheritance diagram of BaseLineCtrl" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.cubecolourdialog.BaseLineCtrl.html" title="wx.lib.agw.cubecolourdialog.BaseLineCtrl" alt="" coords="5,392,297,421"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="105,315,197,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="103,237,200,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="87,160,216,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="93,83,210,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="48,5,135,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="159,5,266,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.agw.cubecolourdialog.AlphaCtrl`, :class:`wx.lib.agw.cubecolourdialog.BrightCtrl`

|


|super_classes| Known Superclasses
==================================

:class:`wx.Control`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.__init__`                       Default class constructor.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.AcceptsFocus`                   Can this window be given focus by mouse click?
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.AcceptsFocusFromKeyboard`       Can this window be given focus by keyboard navigation? If not, the
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.BuildRect`                      Internal method.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.DoGetBestSize`                  Overridden base class virtual. Determines the best size of the control.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.OnEraseBackground`              Handles the ``wx.EVT_ERASE_BACKGROUND`` for :class:`BaseLineCtrl`.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.OnLeftDown`                     Handles the ``wx.EVT_LEFT_DOWN`` for :class:`BaseLineCtrl`.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.OnLeftUp`                       Handles the ``wx.EVT_LEFT_UP`` for :class:`BaseLineCtrl`.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.OnMotion`                       Handles the ``wx.EVT_MOTION`` for :class:`BaseLineCtrl`.
:meth:`~wx.lib.agw.cubecolourdialog.BaseLineCtrl.OnSize`                         Handles the ``wx.EVT_SIZE`` for :class:`BaseLineCtrl`.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: BaseLineCtrl(wx.Control)

   Base class used to hold common code for the Alpha channel control and the
   brightness palette control.

   .. method:: __init__(self, parent)

      Default class constructor.
      Used internally. Do not call it in your code!
      
      :param `parent`: the control parent window.


   .. method:: AcceptsFocus(self)

      Can this window be given focus by mouse click?
      
      :note: This method always returns ``False`` as we do not accept focus from
       mouse click.
      
      :note: Overridden from :class:`wx.Control`.


   .. method:: AcceptsFocusFromKeyboard(self)

      Can this window be given focus by keyboard navigation? If not, the
      only way to give it focus (provided it accepts it at all) is to click
      it.
      
      :note: This method always returns ``False`` as we do not accept focus from
       the keyboard.
      
      :note: Overridden from :class:`wx.Control`.


   .. method:: BuildRect(self)

      Internal method. 


   .. method:: DoGetBestSize(self)

      Overridden base class virtual. Determines the best size of the control.
      
      :note: Overridden from :class:`wx.Control`.


   .. method:: OnEraseBackground(self, event)

      Handles the ``wx.EVT_ERASE_BACKGROUND`` for :class:`BaseLineCtrl`.
      
      :param `event`: a :class:`EraseEvent` event to be processed.
      
      :note: This is intentionally empty to reduce flicker.


   .. method:: OnLeftDown(self, event)

      Handles the ``wx.EVT_LEFT_DOWN`` for :class:`BaseLineCtrl`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnLeftUp(self, event)

      Handles the ``wx.EVT_LEFT_UP`` for :class:`BaseLineCtrl`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnMotion(self, event)

      Handles the ``wx.EVT_MOTION`` for :class:`BaseLineCtrl`.
      
      :param `event`: a :class:`MouseEvent` event to be processed.


   .. method:: OnSize(self, event)

      Handles the ``wx.EVT_SIZE`` for :class:`BaseLineCtrl`.
      
      :param `event`: a :class:`wx.SizeEvent` event to be processed.


