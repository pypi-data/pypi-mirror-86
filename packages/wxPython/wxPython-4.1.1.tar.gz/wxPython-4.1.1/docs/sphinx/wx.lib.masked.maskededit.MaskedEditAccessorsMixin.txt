.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.masked.maskededit

.. highlight:: python



.. _wx.lib.masked.maskededit.MaskedEditAccessorsMixin:

==========================================================================================================================================
|phoenix_title|  **wx.lib.masked.maskededit.MaskedEditAccessorsMixin**
==========================================================================================================================================

To avoid a ton of boiler-plate, and to automate the getter/setter generation
for each valid control parameter so we never forget to add the functions when
adding parameters, this class programmatically adds the masked edit mixin
parameters to itself.
(This makes it easier for Designers like Boa to deal with masked controls.)

To further complicate matters, this is done with an extra level of inheritance,
so that "general" classes like masked.TextCtrl can have all possible attributes,
while derived classes, like masked.TimeCtrl and masked.NumCtrl can prevent
exposure of those optional attributes of their base class that do not make
sense for their derivation.

Therefore, we define:
    BaseMaskedTextCtrl(TextCtrl, MaskedEditMixin)
and
    masked.TextCtrl(BaseMaskedTextCtrl, MaskedEditAccessorsMixin).

This allows us to then derive:
    masked.NumCtrl( BaseMaskedTextCtrl )

and not have to expose all the same accessor functions for the
derived control when they don't all make sense for it.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>MaskedEditAccessorsMixin</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.masked.maskededit.MaskedEditAccessorsMixin_inheritance.png" alt="Inheritance diagram of MaskedEditAccessorsMixin" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.masked.maskededit.MaskedEditAccessorsMixin.html" title="wx.lib.masked.maskededit.MaskedEditAccessorsMixin" alt="" coords="5,5,383,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.lib.masked.combobox.ComboBox`, :class:`wx.lib.masked.combobox.PreMaskedComboBox`, :class:`wx.lib.masked.textctrl.PreMaskedTextCtrl`, :class:`wx.lib.masked.textctrl.TextCtrl`

|


|method_summary| Methods Summary
================================

====================================================================================== ================================================================================
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetAutoCompleteKeycodes`     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetAutoformat`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetAutoSelect`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetChoiceRequired`           
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetChoices`                  
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetCompareNoCase`            
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDatestyle`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDecimalChar`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDefaultEncoding`          
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDefaultValue`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDemo`                     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetDescription`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetEmptyBackgroundColour`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetEmptyInvalid`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetExcludeChars`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetFields`                   
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetFillChar`                 
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetFormatcodes`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetGroupChar`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetIncludeChars`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetInvalidBackgroundColour`  
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetMask`                     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetRaiseOnInvalidPaste`      
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetRetainFieldValidation`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetShiftDecimalChar`         
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetSignedForegroundColour`   
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetStopFieldChangeIfInvalid` 
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetUseFixedWidthFont`        
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetUseParensForNegatives`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetValidBackgroundColour`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetValidFunc`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetValidRange`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetValidRegex`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.GetValidRequired`            
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetAutoCompleteKeycodes`     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetAutoformat`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetAutoSelect`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetChoiceRequired`           
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetChoices`                  
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetCompareNoCase`            
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDatestyle`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDecimalChar`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDefaultEncoding`          
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDefaultValue`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDemo`                     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetDescription`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetEmptyBackgroundColour`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetEmptyInvalid`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetExcludeChars`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetFields`                   
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetFillChar`                 
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetFormatcodes`              
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetGroupChar`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetIncludeChars`             
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetInvalidBackgroundColour`  
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetMask`                     
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetRaiseOnInvalidPaste`      
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetRetainFieldValidation`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetShiftDecimalChar`         
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetSignedForegroundColour`   
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetStopFieldChangeIfInvalid` 
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetUseFixedWidthFont`        
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetUseParensForNegatives`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetValidBackgroundColour`    
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetValidFunc`                
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetValidRange`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetValidRegex`               
:meth:`~wx.lib.masked.maskededit.MaskedEditAccessorsMixin.SetValidRequired`            
====================================================================================== ================================================================================


|


|api| Class API
===============


.. class:: MaskedEditAccessorsMixin

   To avoid a ton of boiler-plate, and to automate the getter/setter generation
   for each valid control parameter so we never forget to add the functions when
   adding parameters, this class programmatically adds the masked edit mixin
   parameters to itself.
   (This makes it easier for Designers like Boa to deal with masked controls.)
   
   To further complicate matters, this is done with an extra level of inheritance,
   so that "general" classes like masked.TextCtrl can have all possible attributes,
   while derived classes, like masked.TimeCtrl and masked.NumCtrl can prevent
   exposure of those optional attributes of their base class that do not make
   sense for their derivation.
   
   Therefore, we define:
       BaseMaskedTextCtrl(TextCtrl, MaskedEditMixin)
   and
       masked.TextCtrl(BaseMaskedTextCtrl, MaskedEditAccessorsMixin).
   
   This allows us to then derive:
       masked.NumCtrl( BaseMaskedTextCtrl )
   
   and not have to expose all the same accessor functions for the
   derived control when they don't all make sense for it.

   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


   .. method:: 


