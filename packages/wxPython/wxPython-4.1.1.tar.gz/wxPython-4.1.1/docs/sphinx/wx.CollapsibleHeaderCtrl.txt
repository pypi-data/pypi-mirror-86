.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.CollapsibleHeaderCtrl:

==========================================================================================================================================
|phoenix_title|  **wx.CollapsibleHeaderCtrl**
==========================================================================================================================================

Header control above a collapsible pane.          

The collapsible header usually consists of a small indicator of the collapsed state and the label text beside it. This class is used by the generic implementation of :ref:`wx.CollapsiblePane`  but maybe used in more complex layouts for other uses. 







.. _CollapsibleHeaderCtrl-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive a :ref:`wx.CommandEvent` parameter.

Event macros: 

- EVT_COLLAPSIBLEHEADER_CHANGED: User changed the collapsed state.  








         



.. versionadded:: 4.1/wxWidgets-3.1.0  
    







.. seealso:: :ref:`wx.CollapsiblePane`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>CollapsibleHeaderCtrl</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.CollapsibleHeaderCtrl_inheritance.png" alt="Inheritance diagram of CollapsibleHeaderCtrl" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.CollapsibleHeaderCtrl.html" title="wx.CollapsibleHeaderCtrl" alt="" coords="15,315,202,344"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.CollapsibleHeaderCtrl.__init__`                                       
:meth:`~wx.CollapsibleHeaderCtrl.Create`                                         Create the control initialized using the default constructor.
:meth:`~wx.CollapsibleHeaderCtrl.GetClassDefaultAttributes`                      
:meth:`~wx.CollapsibleHeaderCtrl.IsCollapsed`                                    Returns  ``true``   if the control is collapsed.
:meth:`~wx.CollapsibleHeaderCtrl.SetCollapsed`                                   Set collapsed state of the header.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.CollapsibleHeaderCtrl(Control)

   **Possible constructors**::

       CollapsibleHeaderCtrl()
       
       CollapsibleHeaderCtrl(parent, id=ID_ANY, label="", pos=DefaultPosition,
                             size=DefaultSize, style=BORDER_NONE, validator=DefaultValidator,
                             name=CollapsibleHeaderCtrlNameStr)
       
   
   Header control above a collapsible pane.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, label="", pos=DefaultPosition, size=DefaultSize, style=BORDER_NONE, validator=DefaultValidator, name=CollapsibleHeaderCtrlNameStr)`
      
      Constructor fully creating the control.                  
      
      The arguments have the usual meanings and only `parent`  is typically required.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `label`: 
      :type `label`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `validator`: 
      :type `validator`: wx.Validator
      :param `name`: 
      :type `name`: string
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, id=ID_ANY, label="", pos=DefaultPosition, size=DefaultSize, style=BORDER_NONE, validator=DefaultValidator, name=CollapsibleHeaderCtrlNameStr)

      Create the control initialized using the default constructor.                  

      This method can be used to finish the control creation if it hadn't been done already by using the non-default constructor.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `label`: 
      :type `label`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `validator`: 
      :type `validator`: wx.Validator
      :param `name`: 
      :type `name`: string




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: IsCollapsed(self)

      Returns  ``true``   if the control is collapsed.                   

                

      :rtype: `bool`







      .. seealso:: :meth:`SetCollapsed`     








   .. method:: SetCollapsed(self, collapsed=True)

      Set collapsed state of the header.                  


      :param `collapsed`: 
      :type `collapsed`: bool






