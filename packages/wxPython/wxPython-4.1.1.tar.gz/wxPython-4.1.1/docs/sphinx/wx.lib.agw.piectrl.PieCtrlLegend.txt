.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.piectrl

.. highlight:: python



.. _wx.lib.agw.piectrl.PieCtrlLegend:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.piectrl.PieCtrlLegend**
==========================================================================================================================================

This class displays a legend window for the classic :class:`PieCtrl`.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PieCtrlLegend</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.piectrl.PieCtrlLegend_inheritance.png" alt="Inheritance diagram of PieCtrlLegend" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.piectrl.PieCtrlLegend.html" title="wx.lib.agw.piectrl.PieCtrlLegend" alt="" coords="5,315,236,344"/> <area shape="rect" id="node2" href="wx.Window.html" title="wx.Window" alt="" coords="72,237,169,267"/> <area shape="rect" id="node3" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="56,160,185,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="62,83,179,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="17,5,104,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="129,5,235,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Window`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.__init__`                               Default class constructor.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.GetBackColour`                          Returns the legend background colour.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.GetHorizontalBorder`                    Returns the legend's horizontal border, in pixels.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.GetLabelColour`                         Returns the legend label colour.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.GetLabelFont`                           Returns the legend label font.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.GetVerticalBorder`                      Returns the legend's vertical border, in pixels.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.IsTransparent`                          Returns whether the legend background is transparent or not.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.OnPaint`                                Handles the ``wx.EVT_PAINT`` event for :class:`PieCtrlLegend`.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.RecreateBackground`                     Recreates the legend background.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetBackColour`                          Sets the legend background colour.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetHorizontalBorder`                    Sets the legend's horizontal border.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetLabelColour`                         Sets the legend label colour.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetLabelFont`                           Sets the legend label font.
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetTransparent`                         Toggles the legend transparency (visibility).
:meth:`~wx.lib.agw.piectrl.PieCtrlLegend.SetVerticalBorder`                      Sets the legend's vertical border.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: PieCtrlLegend(wx.Window)

   This class displays a legend window for the classic :class:`PieCtrl`.

   .. method:: __init__(self, parent, title, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0)

      Default class constructor.
      
      :param `parent`: the :class:`PieCtrlLegend` parent;
      :param `title`: the legend title;
      :param `id`: window identifier. A value of -1 indicates a default value;
      :param `pos`: the control position. A value of (-1, -1) indicates a default position,
       chosen by either the windowing system or wxPython, depending on platform;
      :param `size`: the control size. A value of (-1, -1) indicates a default size,
       chosen by either the windowing system or wxPython, depending on platform;
      :param `style`: the window style (unused).


   .. method:: GetBackColour(self)

      Returns the legend background colour. 


   .. method:: GetHorizontalBorder(self)

      Returns the legend's horizontal border, in pixels. 


   .. method:: GetLabelColour(self)

      Returns the legend label colour. 


   .. method:: GetLabelFont(self)

      Returns the legend label font. 


   .. method:: GetVerticalBorder(self)

      Returns the legend's vertical border, in pixels. 


   .. method:: IsTransparent(self)

      Returns whether the legend background is transparent or not. 


   .. method:: OnPaint(self, event)

      Handles the ``wx.EVT_PAINT`` event for :class:`PieCtrlLegend`.
      
      :param `event`: a :class:`PaintEvent` event to be processed.


   .. method:: RecreateBackground(self, parentdc)

      Recreates the legend background.
      
      :param `parentdc`: an instance of :class:`wx.DC`.


   .. method:: SetBackColour(self, colour)

      Sets the legend background colour.
      
      :param `colour`: a valid :class:`wx.Colour` object.


   .. method:: SetHorizontalBorder(self, value)

      Sets the legend's horizontal border.
      
      :param `value`: the horizontal border thickness, in pixels.


   .. method:: SetLabelColour(self, colour)

      Sets the legend label colour.
      
      :param `colour`: a valid :class:`wx.Colour` object.


   .. method:: SetLabelFont(self, font)

      Sets the legend label font.
      
      :param `font`: a valid :class:`wx.Font` object.


   .. method:: SetTransparent(self, value=False)

      Toggles the legend transparency (visibility).
      
      :param `value`: ``True`` to set the legend as transparent, ``False`` otherwise.


   .. method:: SetVerticalBorder(self, value)

      Sets the legend's vertical border.
      
      :param `value`: the horizontal border thickness, in pixels.


