.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.xlsgrid

.. highlight:: python



.. _wx.lib.agw.xlsgrid.XLSRenderer:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.xlsgrid.XLSRenderer**
==========================================================================================================================================

This class is responsible for actually drawing the cell in the grid.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>XLSRenderer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.xlsgrid.XLSRenderer_inheritance.png" alt="Inheritance diagram of XLSRenderer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.xlsgrid.XLSRenderer.html" title="wx.lib.agw.xlsgrid.XLSRenderer" alt="" coords="67,160,292,189"/> <area shape="rect" id="node3" href="wx.ClientDataContainer.html" title="wx.ClientDataContainer" alt="" coords="5,5,183,35"/> <area shape="rect" id="node4" href="wx.RefCounter.html" title="wx.RefCounter" alt="" coords="207,5,325,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.grid.GridCellRenderer`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.xlsgrid.XLSRenderer.__init__`                                 Default class constructor.
:meth:`~wx.lib.agw.xlsgrid.XLSRenderer.Draw`                                     Draw the given cell on the provided `dc` inside the given rectangle using
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: XLSRenderer(gridlib.GridCellRenderer)

   This class is responsible for actually drawing the cell in the grid.

   .. method:: __init__(self, cell)

      Default class constructor.
      
      :param `cell`: an instance of :class:`XLSCell`.


   .. method:: Draw(self, grid, attr, dc, rect, row, col, isSelected)

      Draw the given cell on the provided `dc` inside the given rectangle using
      default or selected state corresponding to the `isSelected` value.
      
      :param `grid`: an instance of :class:`grid.Grid`;
      :param `attr`: an instance of :class:`grid.GridCellAttr`;
      :param `dc`: an instance of :class:`wx.DC`;
      :param `rect`: an instance of :class:`wx.Rect`, representing the cell rectangle;
      :param `row`: the row in which this cell lives;
      :param `col`: the column in which this cell lives;
      :param `isSelected`: ``True`` if the cell is selected, ``False`` otherwise.


