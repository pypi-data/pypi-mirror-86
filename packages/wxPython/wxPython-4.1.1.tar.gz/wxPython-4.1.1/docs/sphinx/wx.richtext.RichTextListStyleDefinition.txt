.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.richtext.RichTextListStyleDefinition:

==========================================================================================================================================
|phoenix_title|  **wx.richtext.RichTextListStyleDefinition**
==========================================================================================================================================

This class represents a list style definition, usually added to a :ref:`wx.richtext.RichTextStyleSheet`.          

The class inherits paragraph attributes from RichTextStyleParagraphDefinition, and adds 10 further attribute objects, one for each level of a list. When applying a list style to a paragraph, the list style's base and appropriate level attributes are merged with the paragraph's existing attributes. 

You can apply a list style to one or more paragraphs using :meth:`wx.richtext.RichTextCtrl.SetListStyle` . You can also use the functions :meth:`wx.richtext.RichTextCtrl.NumberList` , :meth:`wx.richtext.RichTextCtrl.PromoteList`   and :meth:`wx.richtext.RichTextCtrl.ClearListStyle` . 

As usual, there are :ref:`wx.richtext.RichTextBuffer`  versions of these functions so that you can apply them directly to a buffer without requiring a control. 









|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>RichTextListStyleDefinition</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.richtext.RichTextListStyleDefinition_inheritance.png" alt="Inheritance diagram of RichTextListStyleDefinition" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.richtext.RichTextListStyleDefinition.html" title="wx.richtext.RichTextListStyleDefinition" alt="" coords="26,237,299,267"/> <area shape="rect" id="node2" href="wx.richtext.RichTextParagraphStyleDefinition.html" title="wx.richtext.RichTextParagraphStyleDefinition" alt="" coords="5,160,320,189"/> <area shape="rect" id="node3" href="wx.richtext.RichTextStyleDefinition.html" title="wx.richtext.RichTextStyleDefinition" alt="" coords="37,83,288,112"/> <area shape="rect" id="node4" href="wx.Object.html" title="wx.Object" alt="" coords="119,5,206,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.richtext.RichTextListStyleDefinition.__init__`                        Constructor.
:meth:`~wx.richtext.RichTextListStyleDefinition.CombineWithParagraphStyle`       This function combines the given paragraph style with the list style's base attributes and level style matching the given indent, returning the combined attributes.
:meth:`~wx.richtext.RichTextListStyleDefinition.FindLevelForIndent`              This function finds the level (from 0 to 9) whose indentation attribute mostly closely matches `indent`  (expressed in tenths of a millimetre).
:meth:`~wx.richtext.RichTextListStyleDefinition.GetCombinedStyle`                This function combines the list style's base attributes and the level style matching the given indent, returning the combined attributes.
:meth:`~wx.richtext.RichTextListStyleDefinition.GetCombinedStyleForLevel`        This function combines the list style's base attributes and the style for the specified level, returning the combined attributes.
:meth:`~wx.richtext.RichTextListStyleDefinition.GetLevelAttributes`              Returns the style for the given level.
:meth:`~wx.richtext.RichTextListStyleDefinition.GetLevelCount`                   Returns the number of levels.
:meth:`~wx.richtext.RichTextListStyleDefinition.IsNumbered`                      Returns ``True`` if the given level has numbered list attributes.
:meth:`~wx.richtext.RichTextListStyleDefinition.SetLevelAttributes`              Sets the style for the given level.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.richtext.RichTextListStyleDefinition.LevelCount`                      See :meth:`~wx.richtext.RichTextListStyleDefinition.GetLevelCount`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.richtext.RichTextListStyleDefinition(RichTextParagraphStyleDefinition)

   **Possible constructors**::

       RichTextListStyleDefinition(name="")
       
   
   This class represents a list style definition, usually added to a
   RichTextStyleSheet.



   .. method:: __init__(self, name=EmptyString)

      Constructor.                  


      :param `name`: 
      :type `name`: string







   .. method:: CombineWithParagraphStyle(self, indent, paraStyle, styleSheet=None)

      This function combines the given paragraph style with the list style's base attributes and level style matching the given indent, returning the combined attributes.                  

      If `styleSheet`  is specified, the base style for this definition will also be included in the result.                  


      :param `indent`: 
      :type `indent`: int
      :param `paraStyle`: 
      :type `paraStyle`: wx.richtext.RichTextAttr
      :param `styleSheet`: 
      :type `styleSheet`: wx.richtext.RichTextStyleSheet




      :rtype: :ref:`wx.richtext.RichTextAttr`








   .. method:: FindLevelForIndent(self, indent)

      This function finds the level (from 0 to 9) whose indentation attribute mostly closely matches `indent`  (expressed in tenths of a millimetre).                  


      :param `indent`: 
      :type `indent`: int




      :rtype: `int`








   .. method:: GetCombinedStyle(self, indent, styleSheet=None)

      This function combines the list style's base attributes and the level style matching the given indent, returning the combined attributes.                  

      If `styleSheet`  is specified, the base style for this definition will also be included in the result.                  


      :param `indent`: 
      :type `indent`: int
      :param `styleSheet`: 
      :type `styleSheet`: wx.richtext.RichTextStyleSheet




      :rtype: :ref:`wx.richtext.RichTextAttr`








   .. method:: GetCombinedStyleForLevel(self, level, styleSheet=None)

      This function combines the list style's base attributes and the style for the specified level, returning the combined attributes.                  

      If `styleSheet`  is specified, the base style for this definition will also be included in the result.                  


      :param `level`: 
      :type `level`: int
      :param `styleSheet`: 
      :type `styleSheet`: wx.richtext.RichTextStyleSheet




      :rtype: :ref:`wx.richtext.RichTextAttr`








   .. method:: GetLevelAttributes(self, level)

      Returns the style for the given level.                  

      `level`  is a number between 0 and 9.                  


      :param `level`: 
      :type `level`: int




      :rtype: :ref:`wx.richtext.RichTextAttr`








   .. method:: GetLevelCount(self)

      Returns the number of levels.                  

      This is hard-wired to 10. Returns the style for the given level. `level`  is a number between 0 and 9.                  

      :rtype: `int`








   .. method:: IsNumbered(self, level)

      Returns ``True`` if the given level has numbered list attributes.                  


      :param `level`: 
      :type `level`: int




      :rtype: `bool`








   .. method:: SetLevelAttributes(self, level, attr)

      Sets the style for the given level.                  

      `level`  is a number between 0 and 9. The first and most flexible form uses a :ref:`wx.TextAttr`  object, while the second form is for convenient setting of the most commonly-used attributes.                  


      :param `level`: 
      :type `level`: int
      :param `attr`: 
      :type `attr`: wx.richtext.RichTextAttr







   .. attribute:: LevelCount

      See :meth:`~wx.richtext.RichTextListStyleDefinition.GetLevelCount`

