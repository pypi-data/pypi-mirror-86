.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.PopupWindow:

==========================================================================================================================================
|phoenix_title|  **wx.PopupWindow**
==========================================================================================================================================

A special kind of top level window used for popup menus, combobox popups and such.          





.. _PopupWindow-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.PU_CONTAINS_CONTROLS``: By default in wxMSW, a popup window will not take focus from its parent window. However many standard controls, including common ones such as :ref:`wx.TextCtrl`, need focus to function correctly and will not work when placed on a default popup. This flag can be used to make the popup take focus and let all controls work but at the price of not allowing the parent window to keep focus while the popup is shown, which can also be sometimes desirable. This style is currently only implemented in MSW and simply does nothing under the other platforms (it's new since wxWidgets 3.1.3).  








         



.. seealso:: :ref:`wx.Dialog`, :ref:`wx.Frame`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PopupWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.PopupWindow_inheritance.png" alt="Inheritance diagram of PopupWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.PopupWindow.html" title="wx.PopupWindow" alt="" coords="40,315,177,344"/> <area shape="rect" id="node2" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,237,193,267"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.PopupTransientWindow`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.PopupWindow.__init__`                                                 Default constructor.
:meth:`~wx.PopupWindow.Create`                                                   Create method for two-step creation.
:meth:`~wx.PopupWindow.GetClassDefaultAttributes`                                
:meth:`~wx.PopupWindow.Position`                                                 Move the popup window to the right position, i.e. such that it is entirely visible.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.PopupWindow(NonOwnedWindow)

   **Possible constructors**::

       PopupWindow()
       
       PopupWindow(parent, flags=BORDER_NONE)
       
   
   A special kind of top level window used for popup menus, combobox
   popups and such.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, flags=BORDER_NONE)`
      
      Constructor.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `flags`: 
      :type `flags`: int
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Create(self, parent, flags=BORDER_NONE)

      Create method for two-step creation.                  


      :param `parent`: 
      :type `parent`: wx.Window
      :param `flags`: 
      :type `flags`: int




      :rtype: `bool`








   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: Position(self, ptOrigin, sizePopup)

      Move the popup window to the right position, i.e. such that it is entirely visible.                  

      The popup is positioned at ptOrigin + size if it opens below and to the right (default), at ptOrigin - sizePopup if it opens above and to the left etc. 




      :param `ptOrigin`: Must be given in screen coordinates!   
      :type `ptOrigin`: wx.Point
      :param `sizePopup`: The size of the popup window   
      :type `sizePopup`: wx.Size






                  




