.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. module:: wx.lib.imageutils

.. currentmodule:: wx.lib.imageutils

.. highlight:: python



.. _wx.lib.imageutils:

==========================================================================================================================================
|phoenix_title|  **wx.lib.imageutils**
==========================================================================================================================================

This module contains a collection of functions for simple image manipulations.


Description
===========

This module contains a collection of functions for simple image manipulations.
The 2 functions defined here (:func:`grayOut`, :func:`makeGray` and :func:`stepColour`)
can be used to convert a given image into a grey-scale representation and to
darken/lighten a specific wxPython :class:`wx.Colour`.


Usage
=====

Sample usage::

    import wx
    from wx.lib.imageutils import grayOut, stepColour

    app = wx.App(0)

    bmp = wx.ArtProvider.GetBitmap(wx.ART_INFORMATION, wx.ART_OTHER, (32, 32))
    disabled_bmp = wx.Bitmap(grayOut(bmp.ConvertToImage()))

    colour = wx.Colour(100, 120, 130)

    # Darker
    dark_colour = stepColour(colour, 50)

    # Lighter
    light_colour = stepColour(colour, 120)

    app.MainLoop()


|function_summary| Functions Summary
====================================

================================================================================ ================================================================================
:func:`~wx.lib.imageutils.grayOut`                                               Convert the given image (in place) to a grayed-out
:func:`~wx.lib.imageutils.makeGray`                                              Make a pixel grayed-out. If the pixel matches the maskColor, it won't be
:func:`~wx.lib.imageutils.stepColour`                                            An utility function that simply darkens or lightens a
================================================================================ ================================================================================


|



Functions
------------

.. function:: grayOut(anImage)

   Convert the given image (in place) to a grayed-out
   version, appropriate for a 'disabled' appearance.
   
   :param wx.Image `anImage`: the image we want to convert to gray-scale.
   
   :rtype: :class:`wx.Image`
   :returns: The modified (greyed out) image.
   
   .. note:: the image is converted in place, i.e. the input image will
      be modified to a greyed out version.


.. function:: makeGray(rgb, factor, maskColor)

   Make a pixel grayed-out. If the pixel matches the maskColor, it won't be
   changed.
   
   :param tuple `rgb`: a tuple of red, green, blue integers, defining the pixel :class:`wx.Colour`;
   :param float `factor`: the amount for which we want to grey out a pixel colour;
   :param `maskColor`: the mask colour.
   
   :type `maskColor`: tuple or :class:`wx.Colour`.
   
   :rtype: tuple
   :returns: An RGB tuple with the greyed out pixel colour.


.. function:: stepColour(c, step)

   An utility function that simply darkens or lightens a
   color, based on the specified step value.  A step of 0 is
   completely black and a step of 200 is totally white, and 100
   results in the same color as was passed in.
   
   :param wx.Colour `c`: the input colour to be modified (darkened or lightened);
   :param integer `step`: the step value.
   
   :rtype: :class:`wx.Colour`
   :returns: A new colour, darkened or lightened depending on the input `step` value.


