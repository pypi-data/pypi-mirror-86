.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.BusyInfoFlags:

==========================================================================================================================================
|phoenix_title|  **wx.BusyInfoFlags**
==========================================================================================================================================

Parameters for :ref:`wx.BusyInfo`.          

This class exists only in order to make passing attributes to :ref:`wx.BusyInfo`  constructor easier and the code doing it more readable. 

All methods of this class return the reference to the object on which they are called, making it possible to chain them together, e.g. typically you would just create a temporary :ref:`wx.BusyInfoFlags`  object and then call the methods corresponding to the attributes you want to set, before finally passing the result to :ref:`wx.BusyInfo`  constructor, e.g.: ::

    info = wx.BusyInfo(
            wx.BusyInfoFlags()
                .Parent(window)
                .Icon(icon)
                .Title("Some text")
                .Text("Some more text")
                .Foreground(wx.Colour(...))
                .Background(wx.Colour(...))
       )



         



.. versionadded:: 4.1/wxWidgets-3.1.0  
     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>BusyInfoFlags</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.BusyInfoFlags_inheritance.png" alt="Inheritance diagram of BusyInfoFlags" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.BusyInfoFlags.html" title="wx.BusyInfoFlags" alt="" coords="5,5,141,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.BusyInfoFlags.__init__`                                               Default constructor initializes all attributes to default values.
:meth:`~wx.BusyInfoFlags.Background`                                             Sets the background colour of :ref:`wx.BusyInfo`  window.
:meth:`~wx.BusyInfoFlags.Foreground`                                             Sets the foreground colour of the title and text strings.
:meth:`~wx.BusyInfoFlags.Icon`                                                   Sets the icon to show in :ref:`wx.BusyInfo`.
:meth:`~wx.BusyInfoFlags.Label`                                                  Same as :meth:`~BusyInfoFlags.Text`   but doesn't interpret the string as containing markup.
:meth:`~wx.BusyInfoFlags.Parent`                                                 Sets the parent for :ref:`wx.BusyInfo`.
:meth:`~wx.BusyInfoFlags.Text`                                                   Sets the more detailed text, shown under the title, if any.
:meth:`~wx.BusyInfoFlags.Title`                                                  Sets the title, shown prominently in :ref:`wx.BusyInfo`  window.
:meth:`~wx.BusyInfoFlags.Transparency`                                           Sets the transparency of :ref:`wx.BusyInfo`  window.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.BusyInfoFlags(object)

   **Possible constructors**::

       BusyInfoFlags()
       
   
   Parameters for BusyInfo.



   .. method:: __init__(self)

      Default constructor initializes all attributes to default values.                  

      Call the other methods to really fill in the object.                   





   .. method:: Background(self, background)

      Sets the background colour of :ref:`wx.BusyInfo`  window.                  


      :param `background`: 
      :type `background`: wx.Colour




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Foreground(self, foreground)

      Sets the foreground colour of the title and text strings.                  


      :param `foreground`: 
      :type `foreground`: wx.Colour




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Icon(self, icon)

      Sets the icon to show in :ref:`wx.BusyInfo`.                  


      :param `icon`: 
      :type `icon`: wx.Icon




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Label(self, label)

      Same as :meth:`Text`   but doesn't interpret the string as containing markup.                  

      This method should be used if the text shown in :ref:`wx.BusyInfo`  comes from external source and so may contain characters having special meaning in simple markup, e.g. '<'.                  


      :param `label`: 
      :type `label`: string




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Parent(self, parent)

      Sets the parent for :ref:`wx.BusyInfo`.                  


      :param `parent`: 
      :type `parent`: wx.Window




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Text(self, text)

      Sets the more detailed text, shown under the title, if any.                  

      The `text`  string may contain markup as described in :meth:`wx.Control.SetLabelMarkup` .                  


      :param `text`: 
      :type `text`: string




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Title(self, title)

      Sets the title, shown prominently in :ref:`wx.BusyInfo`  window.                  

      The `title`  string may contain markup as described in :meth:`wx.Control.SetLabelMarkup` .                  


      :param `title`: 
      :type `title`: string




      :rtype: :ref:`wx.BusyInfoFlags`








   .. method:: Transparency(self, alpha)

      Sets the transparency of :ref:`wx.BusyInfo`  window.                  




      :param `alpha`: Value in ``wx.ALPHA_TRANSPARENT`` (0) to ``wx.ALPHA_OPAQUE`` (255) range.  
      :type `alpha`: wx.Byte






      :rtype: :ref:`wx.BusyInfoFlags`



                  



      .. seealso:: :meth:`wx.TopLevelWindow.SetTransparent`     







