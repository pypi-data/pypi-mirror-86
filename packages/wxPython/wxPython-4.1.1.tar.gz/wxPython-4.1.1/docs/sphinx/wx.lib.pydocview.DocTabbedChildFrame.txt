.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.pydocview

.. highlight:: python



.. _wx.lib.pydocview.DocTabbedChildFrame:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pydocview.DocTabbedChildFrame**
==========================================================================================================================================

The wxDocMDIChildFrame class provides a default frame for displaying
documents on separate windows. This class can only be used for MDI child
frames.

The class is part of the document/view framework supported by wxWindows,
and cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
classes.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DocTabbedChildFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.pydocview.DocTabbedChildFrame_inheritance.png" alt="Inheritance diagram of DocTabbedChildFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.pydocview.DocTabbedChildFrame.html" title="wx.lib.pydocview.DocTabbedChildFrame" alt="" coords="5,392,288,421"/> <area shape="rect" id="node2" href="wx.Panel.html" title="wx.Panel" alt="" coords="107,315,187,344"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="98,237,195,267"/> <area shape="rect" id="node4" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="82,160,211,189"/> <area shape="rect" id="node5" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="88,83,205,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="43,5,130,35"/> <area shape="rect" id="node7" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="155,5,261,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.Panel`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.__init__`                           Constructor.  Note that the event table must be rebuilt for the
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.Activate`                           Activates the current view.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.Destroy`                            Removes the current notebook page.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.GetDocument`                        Returns the document associated with this frame.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.GetIcon`                            Dummy method since the icon of tabbed frames are managed by the notebook.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.GetTitle`                           Returns the frame's title.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.GetView`                            Returns the view associated with this frame.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.OnTitleIsModified`                  Add/remove to the frame's title an indication that the document is dirty.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.ProcessEvent`                       Processes an event, searching event tables and calling zero or more
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.SetDocument`                        Sets the document for this frame.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.SetFocus`                           Activates the current notebook page.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.SetIcon`                            Dummy method since the icon of tabbed frames are managed by the notebook.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.SetTitle`                           Sets the frame's title.
:meth:`~wx.lib.pydocview.DocTabbedChildFrame.SetView`                            Sets the view for this frame.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: DocTabbedChildFrame(wx.Panel)

   The wxDocMDIChildFrame class provides a default frame for displaying
   documents on separate windows. This class can only be used for MDI child
   frames.
   
   The class is part of the document/view framework supported by wxWindows,
   and cooperates with the wxView, wxDocument, wxDocManager and wxDocTemplate
   classes.

   .. method:: __init__(self, doc, view, frame, id, title, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.DEFAULT_FRAME_STYLE, name="frame")

      Constructor.  Note that the event table must be rebuilt for the
      frame since the EvtHandler is not virtual.


   .. method:: Activate(self)

      Activates the current view.


   .. method:: Destroy(self)

      Removes the current notebook page.


   .. method:: GetDocument(self)

      Returns the document associated with this frame.


   .. method:: GetIcon(self)

      Dummy method since the icon of tabbed frames are managed by the notebook.


   .. method:: GetTitle(self)

      Returns the frame's title.


   .. method:: GetView(self)

      Returns the view associated with this frame.


   .. method:: OnTitleIsModified(self)

      Add/remove to the frame's title an indication that the document is dirty.
      If the document is dirty, an '*' is appended to the title


   .. method:: ProcessEvent(event)

      Processes an event, searching event tables and calling zero or more
      suitable event handler function(s).  Note that the ProcessEvent
      method is called from the wxPython docview framework directly since
      wxPython does not have a virtual ProcessEvent function.


   .. method:: SetDocument(self, document)

      Sets the document for this frame.


   .. method:: SetFocus(self)

      Activates the current notebook page.


   .. method:: SetIcon(self, icon)

      Dummy method since the icon of tabbed frames are managed by the notebook.


   .. method:: SetTitle(self, title)

      Sets the frame's title.


   .. method:: SetView(self, view)

      Sets the view for this frame.


