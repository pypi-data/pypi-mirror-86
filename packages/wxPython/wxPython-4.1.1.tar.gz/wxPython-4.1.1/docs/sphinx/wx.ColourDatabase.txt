.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.ColourDatabase:

==========================================================================================================================================
|phoenix_title|  **wx.ColourDatabase**
==========================================================================================================================================

wxWidgets maintains a database of standard ``RGB`` colours for a predefined set of named colours.          

The application may add to this set if desired by using :meth:`~wx.ColourDatabase.AddColour`  and may use it to look up colours by names using :meth:`~wx.ColourDatabase.Find`  or find the names for the standard colour using :meth:`~wx.ColourDatabase.FindName`. 

There is one predefined, global instance of this class called :ref:`wx.TheColourDatabase`. 

The standard database contains at least the following colours: 



.. include:: rest_substitutions/tables/wx.ColourDatabase.1.rst









         



.. seealso:: :ref:`wx.Colour`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>ColourDatabase</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.ColourDatabase_inheritance.png" alt="Inheritance diagram of ColourDatabase" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.ColourDatabase.html" title="wx.ColourDatabase" alt="" coords="5,5,155,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.ColourDatabase.__init__`                                              Constructs the colour database.
:meth:`~wx.ColourDatabase.AddColour`                                             Adds a colour to the database.
:meth:`~wx.ColourDatabase.Find`                                                  Finds a colour given the name.
:meth:`~wx.ColourDatabase.FindColour`                                            
:meth:`~wx.ColourDatabase.FindName`                                              Finds a colour name given the colour.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.ColourDatabase(object)

   **Possible constructors**::

       ColourDatabase()
       
   
   wxWidgets maintains a database of standard ``RGB`` colours for a
   predefined set of named colours.



   .. method:: __init__(self)

      Constructs the colour database.                  

      It will be initialized at the first use.                   





   .. method:: AddColour(self, colourName, colour)

      Adds a colour to the database.                  

      If a colour with the same name already exists, it is replaced.                  


      :param `colourName`: 
      :type `colourName`: string
      :param `colour`: 
      :type `colour`: wx.Colour







   .. method:: Find(self, colourName)

      Finds a colour given the name.                  

      Returns an invalid colour object (that is, :meth:`wx.Colour.IsOk`   will return ``False``) if the colour wasn't found in the database.                  


      :param `colourName`: 
      :type `colourName`: string




      :rtype: :ref:`wx.Colour`








   .. method:: FindColour(self, colour)




   .. method:: FindName(self, colour)

      Finds a colour name given the colour.                  

      Returns an empty string if the colour is not found in the database.                  


      :param `colour`: 
      :type `colour`: wx.Colour




      :rtype: `string`







