.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.PreviewFrame:

==========================================================================================================================================
|phoenix_title|  **wx.PreviewFrame**
==========================================================================================================================================

This class provides the default method of managing the print preview interface.          

Member functions may be overridden to replace functionality, or the class may be used without derivation. 







         



.. seealso:: :ref:`wx.PreviewCanvas`, :ref:`wx.PreviewControlBar`, :ref:`wx.PrintPreview`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>PreviewFrame</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.PreviewFrame_inheritance.png" alt="Inheritance diagram of PreviewFrame" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.PreviewFrame.html" title="wx.PreviewFrame" alt="" coords="40,469,177,499"/> <area shape="rect" id="node2" href="wx.Frame.html" title="wx.Frame" alt="" coords="66,392,151,421"/> <area shape="rect" id="node3" href="wx.TopLevelWindow.html" title="wx.TopLevelWindow" alt="" coords="31,315,186,344"/> <area shape="rect" id="node4" href="wx.NonOwnedWindow.html" title="wx.NonOwnedWindow" alt="" coords="25,237,193,267"/> <area shape="rect" id="node5" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.PreviewFrame.__init__`                                                Constructor.
:meth:`~wx.PreviewFrame.CreateCanvas`                                            Creates a :ref:`wx.PreviewCanvas`.
:meth:`~wx.PreviewFrame.CreateControlBar`                                        Creates a :ref:`wx.PreviewControlBar`.
:meth:`~wx.PreviewFrame.GetClassDefaultAttributes`                               
:meth:`~wx.PreviewFrame.Initialize`                                              Initializes the frame elements and prepares for showing it.
:meth:`~wx.PreviewFrame.InitializeWithModality`                                  Initializes the frame elements and prepares for showing it with the given modality kind.
:meth:`~wx.PreviewFrame.OnCloseWindow`                                           Enables any disabled frames in the application, and deletes the print preview object, implicitly deleting any printout objects associated with the print preview object.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.PreviewFrame(Frame)

   **Possible constructors**::

       PreviewFrame(preview, parent, title="PrintPreview", pos=DefaultPosition,
                    size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)
       
   
   This class provides the default method of managing the print preview
   interface.



   .. method:: __init__(self, preview, parent, title="PrintPreview", pos=DefaultPosition, size=DefaultSize, style=DEFAULT_FRAME_STYLE, name=FrameNameStr)

      Constructor.                  

      Pass a print preview object plus other normal frame arguments. The print preview object will be destroyed by the frame when it closes.                  


      :param `preview`: 
      :type `preview`: wx.PrintPreview
      :param `parent`: 
      :type `parent`: wx.Window
      :param `title`: 
      :type `title`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `name`: 
      :type `name`: string







   .. method:: CreateCanvas(self)

      Creates a :ref:`wx.PreviewCanvas`.                  

      Override this function to allow a user-defined preview canvas object to be created.                   





   .. method:: CreateControlBar(self)

      Creates a :ref:`wx.PreviewControlBar`.                  

      Override this function to allow a user-defined preview control bar object to be created.                   





   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: Initialize(self)

      Initializes the frame elements and prepares for showing it.                  

      Calling this method is equivalent to calling :meth:`InitializeWithModality`   with PreviewFrame_AppModal argument, please see its documentation for more details. 

      Please notice that this function is virtual mostly for backwards compatibility only, there is no real need to override it as it's never called by wxWidgets itself.                   





   .. method:: InitializeWithModality(self, kind)

      Initializes the frame elements and prepares for showing it with the given modality kind.                  

      This method creates the frame elements by calling :meth:`CreateCanvas`   and :meth:`CreateControlBar`   methods (which may be overridden to customize them) and prepares to show the frame according to the value of `kind`  parameter:

      - If it is PreviewFrame_AppModal, all the other application windows will be disabled when this frame is shown. This is the same behaviour as that of simple :ref:`wx.Initialize`. 
      - If it is PreviewFrame_WindowModal, only the parent window of the preview frame will be disabled when it is shown. 
      - And if it is PreviewFrame_NonModal, no windows at all will be disabled while the preview is shown. 




      Notice that this function (or :ref:`wx.Initialize`) must be called by the application prior to showing the frame but you still must call  ``Show(true)``   to actually show it afterwards. 




      :param `kind`: The modality kind of preview frame.  
      :type `kind`: wx.PreviewFrameModalityKind




                  



      .. versionadded:: 2.9.2 
     








   .. method:: OnCloseWindow(self, event)

      Enables any disabled frames in the application, and deletes the print preview object, implicitly deleting any printout objects associated with the print preview object.                  


      :param `event`: 
      :type `event`: wx.CloseEvent






