.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.py.editwindow

.. highlight:: python



.. _wx.py.editwindow.EditWindow:

==========================================================================================================================================
|phoenix_title|  **wx.py.editwindow.EditWindow**
==========================================================================================================================================

EditWindow based on StyledTextCtrl.



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>EditWindow</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.py.editwindow.EditWindow_inheritance.png" alt="Inheritance diagram of EditWindow" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.py.editwindow.EditWindow.html" title="wx.py.editwindow.EditWindow" alt="" coords="5,469,224,499"/> <area shape="rect" id="node3" href="wx.Control.html" title="wx.Control" alt="" coords="69,315,161,344"/> <area shape="rect" id="node4" href="wx.Window.html" title="wx.Window" alt="" coords="66,237,163,267"/> <area shape="rect" id="node5" href="wx.WindowBase.html" title="wx.WindowBase" alt="" coords="50,160,179,189"/> <area shape="rect" id="node6" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="56,83,173,112"/> <area shape="rect" id="node7" href="wx.Object.html" title="wx.Object" alt="" coords="11,5,98,35"/> <area shape="rect" id="node8" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="123,5,229,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:class:`wx.py.crust.Display`, :class:`wx.py.editor.EditWindow`, :class:`wx.py.filling.FillingText`, :class:`wx.py.shell.Shell`, :class:`wx.py.sliceshell.SlicesShell`

|


|super_classes| Known Superclasses
==================================

:class:`wx.stc.StyledTextCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.py.editwindow.EditWindow.__init__`                                    Create EditWindow instance.
:meth:`~wx.py.editwindow.EditWindow.CanCopy`                                     Return ``True`` if text is selected and can be copied.
:meth:`~wx.py.editwindow.EditWindow.CanCut`                                      Return ``True`` if text is selected and can be cut.
:meth:`~wx.py.editwindow.EditWindow.CanEdit`                                     Return ``True`` if editing should succeed.
:meth:`~wx.py.editwindow.EditWindow.CanPaste`                                    Return ``True`` if pasting should succeed.
:meth:`~wx.py.editwindow.EditWindow.DoFindNext`                                  
:meth:`~wx.py.editwindow.EditWindow.GetLastPosition`                             GetLastPosition() -> long
:meth:`~wx.py.editwindow.EditWindow.GetRange`                                    GetRange(from_, to_) -> String
:meth:`~wx.py.editwindow.EditWindow.GetSelection`                                GetSelection() -> (from_, to_)
:meth:`~wx.py.editwindow.EditWindow.OnUpdateUI`                                  Check for matching braces.
:meth:`~wx.py.editwindow.EditWindow.setDisplayLineNumbers`                       
:meth:`~wx.py.editwindow.EditWindow.setStyles`                                   Configure font size, typeface and color for lexer.
:meth:`~wx.py.editwindow.EditWindow.ShowPosition`                                ShowPosition(pos)
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: EditWindow(stc.StyledTextCtrl)

   EditWindow based on StyledTextCtrl.

   .. method:: __init__(self, parent, id=-1, pos=wx.DefaultPosition, size=wx.DefaultSize, style=wx.CLIP_CHILDREN | wx.SUNKEN_BORDER)

      Create EditWindow instance.


   .. method:: CanCopy(self)

      Return ``True`` if text is selected and can be copied.


   .. method:: CanCut(self)

      Return ``True`` if text is selected and can be cut.


   .. method:: CanEdit(self)

      Return ``True`` if editing should succeed.


   .. method:: CanPaste(self)

      Return ``True`` if pasting should succeed.


   .. method:: DoFindNext(self, findData, findDlg=None)


   .. method:: GetLastPosition(self)

      GetLastPosition() -> long
      
      Returns the zero based index of the last position in the text control,
      which is equal to the number of characters in the control.


   .. method:: GetRange(self, start, end)

      GetRange(from_, to_) -> String
      
      Returns the string containing the text starting in the positions from
      and up to to in the control.


   .. method:: GetSelection(self)

      GetSelection() -> (from_, to_)
      
      Gets the current selection span.


   .. method:: OnUpdateUI(self, event)

      Check for matching braces.


   .. method:: setDisplayLineNumbers(self, state)


   .. method:: setStyles(self, faces)

      Configure font size, typeface and color for lexer.


   .. method:: ShowPosition(self, pos)

      ShowPosition(pos)
      
      Makes the line containing the given position visible.


