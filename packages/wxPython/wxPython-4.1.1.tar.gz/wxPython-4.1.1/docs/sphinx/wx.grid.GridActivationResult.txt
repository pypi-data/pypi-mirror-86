.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.grid.GridActivationResult:

==========================================================================================================================================
|phoenix_title|  **wx.grid.GridActivationResult**
==========================================================================================================================================

Represents the result of :meth:`wx.grid.GridCellEditor.TryActivate` .          

Editors overriding :meth:`wx.grid.GridCellEditor.TryActivate`   must use one of :meth:`~wx.grid.GridActivationResult.DoNothing`, :meth:`~wx.grid.GridActivationResult.DoChange`  or :meth:`~wx.grid.GridActivationResult.DoEdit`  methods to return an object of this type corresponding to the desired action. 

         



.. versionadded:: 4.1/wxWidgets-3.1.4  
     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>GridActivationResult</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.grid.GridActivationResult_inheritance.png" alt="Inheritance diagram of GridActivationResult" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.grid.GridActivationResult.html" title="wx.grid.GridActivationResult" alt="" coords="5,5,212,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.grid.GridActivationResult.DoChange`                                   Indicate that activating the cell is possible and would change its value to the given one.
:meth:`~wx.grid.GridActivationResult.DoEdit`                                     Indicate that the editor control should be shown and the cell should be edited normally.
:meth:`~wx.grid.GridActivationResult.DoNothing`                                  Indicate that nothing should be done and the cell shouldn't be edited at all.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.grid.GridActivationResult(object)

   Represents the result of `GridCellEditor.TryActivate().`



   .. staticmethod:: DoChange(newval)

      Indicate that activating the cell is possible and would change its value to the given one.                  

      This is the method to call for activatable editors, using it will result in changing the value of the cell to `newval`  without showing the editor control at all. 

      Note that the change may still be vetoed by wxEVT_GRID_CELL_CHANGING handler.                  


      :param `newval`: 
      :type `newval`: string




      :rtype: :ref:`wx.grid.GridActivationResult`








   .. staticmethod:: DoEdit()

      Indicate that the editor control should be shown and the cell should be edited normally.                  

      This is the default return value of :meth:`wx.grid.GridCellEditor.TryActivate` .                  

      :rtype: :ref:`wx.grid.GridActivationResult`








   .. staticmethod:: DoNothing()

      Indicate that nothing should be done and the cell shouldn't be edited at all.                  

      Note that this is different from :meth:`DoEdit`   and may be useful when the value of the cell wouldn't change if it were activated anyhow, e.g. because the key or mouse event carried by :ref:`wx.grid.GridActivationSource`  would leave the cell value unchanged.                  

      :rtype: :ref:`wx.grid.GridActivationResult`







