.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.HelpProvider:

==========================================================================================================================================
|phoenix_title|  **wx.HelpProvider**
==========================================================================================================================================

:ref:`wx.HelpProvider`  is an abstract class used by a program implementing context-sensitive help to show the help text for the given window.          

The current help provider must be explicitly set by the application using :meth:`~wx.HelpProvider.Set`. 







         



.. seealso:: :ref:`wx.ContextHelp`, :ref:`wx.ContextHelpButton`, :ref:`wx.SimpleHelpProvider`, :ref:`wx.HelpControllerHelpProvider`, :meth:`wx.Window.SetHelpText` , :meth:`wx.Window.GetHelpTextAtPoint`     







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>HelpProvider</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.HelpProvider_inheritance.png" alt="Inheritance diagram of HelpProvider" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.HelpProvider.html" title="wx.HelpProvider" alt="" coords="5,5,135,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.SimpleHelpProvider`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.HelpProvider.AddHelp`                                                 Associates the text with the given window.
:meth:`~wx.HelpProvider.Get`                                                     Returns pointer to help provider instance.
:meth:`~wx.HelpProvider.GetHelp`                                                 This version associates the given text with all windows with this id.
:meth:`~wx.HelpProvider.RemoveHelp`                                              Removes the association between the window pointer and the help text.
:meth:`~wx.HelpProvider.Set`                                                     Set the current, application-wide help provider.
:meth:`~wx.HelpProvider.ShowHelp`                                                Shows help for the given window.
:meth:`~wx.HelpProvider.ShowHelpAtPoint`                                         This function may be overridden to show help for the window when it should depend on the position inside the window, By default this method forwards to :meth:`~HelpProvider.ShowHelp` , so it is enough to only implement the latter if the help doesn't depend on the position.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.HelpProvider(object)

   HelpProvider is an abstract class used by a program implementing
   context-sensitive help to show the help text for the given window.



   .. method:: AddHelp(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **AddHelp** `(self, window, text)`
      
      Associates the text with the given window.                  
      
                      
      
      
      :param `window`: 
      :type `window`: wx.WindowBase
      :param `text`: 
      :type `text`: string
      
      
      
      
      
      
      .. note:: 
      
         Although all help providers have these functions to allow making :meth:`wx.Window.SetHelpText`   work, not all of them implement the functions.   
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **AddHelp** `(self, id, text)`
      
      Associates the text with the given ``ID``.                  
      
      This help text will be shown for all windows with ``ID`` `id`, unless they have more specific help text associated using the other :meth:`AddHelp`   prototype. May be used to set the same help string for all Cancel buttons in the application, for example. 
      
                      
      
      
      :param `id`: 
      :type `id`: wx.WindowID
      :param `text`: 
      :type `text`: string
      
      
      
      
      
      
      .. note:: 
      
         Although all help providers have these functions to allow making :meth:`wx.Window.SetHelpText`   work, not all of them implement the functions.   
      
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. staticmethod:: Get()

      Returns pointer to help provider instance.                  

      Unlike some other classes, the help provider is not created on demand. This must be explicitly done by the application using :meth:`Set` .                  

      :rtype: :ref:`wx.HelpProvider`








   .. method:: GetHelp(self, window)

      This version associates the given text with all windows with this id.                  

      May be used to set the same help string for all Cancel buttons in the application, for example.                  


      :param `window`: 
      :type `window`: wx.Window




      :rtype: `string`








   .. method:: RemoveHelp(self, window)

      Removes the association between the window pointer and the help text.                  

      This is called by the :ref:`wx.Window`  destructor. Without this, the table of help strings will fill up and when window pointers are reused, the wrong help string will be found.                  


      :param `window`: 
      :type `window`: wx.WindowBase







   .. staticmethod:: Set(helpProvider)

      Set the current, application-wide help provider.                  

                


      :param `helpProvider`: 
      :type `helpProvider`: wx.HelpProvider




      :rtype: :ref:`wx.HelpProvider`







      :returns: 

         Pointer to previous help provider or ``None`` if there wasn't any.   








   .. method:: ShowHelp(self, window)

      Shows help for the given window.                  

      Override this function if the help doesn't depend on the exact position inside the window, otherwise you need to override :meth:`ShowHelpAtPoint` . Returns ``True`` if help was shown, or ``False`` if no help was available for this window.                  


      :param `window`: 
      :type `window`: wx.WindowBase




      :rtype: `bool`








   .. method:: ShowHelpAtPoint(self, window, point, origin)

      This function may be overridden to show help for the window when it should depend on the position inside the window, By default this method forwards to :meth:`ShowHelp` , so it is enough to only implement the latter if the help doesn't depend on the position.                  




      :param `window`: Window to show help text for.   
      :type `window`: wx.WindowBase
      :param `point`: Coordinates of the mouse at the moment of help event emission.   
      :type `point`: wx.Point
      :param `origin`: Help event origin, see :meth:`wx.HelpEvent.GetOrigin` .  
      :type `origin`: HelpEvent.Origin










      :rtype: `bool`



                  



      :returns: 

         ``True`` if help was shown, or ``False`` if no help was available for this window.  







      .. versionadded:: 2.7.0 
     







