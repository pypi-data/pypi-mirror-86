.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.AutoBufferedPaintDC:

==========================================================================================================================================
|phoenix_title|  **wx.AutoBufferedPaintDC**
==========================================================================================================================================

This :ref:`wx.DC`  derivative can be used inside of an  ``EVT_PAINT()``   event handler to achieve double-buffered drawing.           

Just use this class instead of :ref:`wx.PaintDC`  and make sure :meth:`wx.Window.SetBackgroundStyle`   is called with ``wx.BG_STYLE_PAINT`` somewhere in the class initialization code, and that's all you have to do to (mostly) avoid flicker. 

The difference between :ref:`wx.BufferedPaintDC`  and this class is that this class won't double-buffer on platforms which have native double-buffering already, avoiding any unnecessary buffering to avoid flicker. 

:ref:`wx.AutoBufferedPaintDC`  is simply a typedef of :ref:`wx.PaintDC`  on platforms that have native double-buffering, otherwise, it is a typedef of :ref:`wx.BufferedPaintDC`. 







         



.. seealso:: :ref:`wx.DC`, :ref:`wx.BufferedPaintDC`, :ref:`wx.PaintDC`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AutoBufferedPaintDC</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.AutoBufferedPaintDC_inheritance.png" alt="Inheritance diagram of AutoBufferedPaintDC" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.AutoBufferedPaintDC.html" title="wx.AutoBufferedPaintDC" alt="" coords="5,392,187,421"/> <area shape="rect" id="node2" href="wx.BufferedPaintDC.html" title="wx.BufferedPaintDC" alt="" coords="21,315,171,344"/> <area shape="rect" id="node3" href="wx.BufferedDC.html" title="wx.BufferedDC" alt="" coords="37,237,155,267"/> <area shape="rect" id="node4" href="wx.MemoryDC.html" title="wx.MemoryDC" alt="" coords="37,160,155,189"/> <area shape="rect" id="node5" href="wx.DC.html" title="wx.DC" alt="" coords="60,83,132,112"/> <area shape="rect" id="node6" href="wx.Object.html" title="wx.Object" alt="" coords="53,5,139,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.AutoBufferedPaintDC.__init__`                                         Constructor.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.AutoBufferedPaintDC(DC)

   **Possible constructors**::

       AutoBufferedPaintDC(window)
       
   
   This DC derivative can be used inside of an EVT_PAINT() event
   handler to achieve double-buffered drawing.



   .. method:: __init__(self, window)

      Constructor.                  

      Pass a pointer to the window on which you wish to paint.                  


      :param `window`: 
      :type `window`: wx.Window






