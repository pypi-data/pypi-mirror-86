.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.CollapsiblePane:

==========================================================================================================================================
|phoenix_title|  **wx.CollapsiblePane**
==========================================================================================================================================

A collapsible pane is a container with an embedded button-like control which can be used by the user to collapse or expand the pane's contents.          

Once constructed you should use the :meth:`~wx.CollapsiblePane.GetPane`  function to access the pane and add your controls inside it (i.e. use the returned pointer from :meth:`~wx.CollapsiblePane.GetPane`  as parent for the controls which must go in the pane, **not**  the :ref:`wx.CollapsiblePane`  itself!). 

Note that because of its nature of control which can dynamically (and drastically) change its size at run-time under user-input, when putting :ref:`wx.CollapsiblePane`  inside a :ref:`wx.Sizer`  you should be careful to add it with a proportion value of zero; this is because otherwise all other windows with non-null proportion values will automatically resize each time the user expands or collapse the pane window usually resulting in a weird, flickering effect. 

Usage sample: 

::

        collpane = wx.CollapsiblePane(self, wx.ID_ANY, "Details:")

        # add the pane with a zero proportion value to the 'sz' sizer which contains it
        sz.Add(collpane, 0, wx.GROW | wx.ALL, 5)

        # now add a test label in the collapsible pane using a sizer to layout it:
        win = collpane.GetPane()
        paneSz = wx.BoxSizer(wx.VERTICAL)
        paneSz.Add(wx.StaticText(win, wx.ID_ANY, "test!"), 1, wx.GROW | wx.ALL, 2)
        win.SetSizer(paneSz)
        paneSz.SetSizeHints(win)



It is only available if  ``USE_COLLPANE``   is set to 1 (the default). 





.. _CollapsiblePane-styles:

|styles| Window Styles
================================

This class supports the following styles: 

  

- ``wx.CP_DEFAULT_STYLE``: The default style. It includes ``wx.TAB_TRAVERSAL`` and ``wx.BORDER_NONE``.  
- ``wx.CP_NO_TLW_RESIZE``: By default :ref:`wx.CollapsiblePane`  resizes the top level window containing it when its own size changes. This allows easily implementing dialogs containing an optionally shown part, for example, and so is the default behaviour but can be inconvenient in some specific cases â€“ 








.. _CollapsiblePane-events:

|events| Events Emitted by this Class
=====================================

Handlers bound for the following event types will receive one of the :ref:`wx.CollapsiblePaneEvent`:ref:`wx.NavigationKeyEvent` parameters.


- EVT_COLLAPSIBLEPANE_CHANGED: The user expanded or collapsed the collapsible pane.  
- EVT_NAVIGATION_KEY: Process a navigation key event.  








         



.. seealso:: :ref:`wx.Panel`, :ref:`wx.CollapsiblePaneEvent`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>CollapsiblePane</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.CollapsiblePane_inheritance.png" alt="Inheritance diagram of CollapsiblePane" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.CollapsiblePane.html" title="wx.CollapsiblePane" alt="" coords="35,315,183,344"/> <area shape="rect" id="node2" href="wx.Control.html" title="wx.Control" alt="" coords="63,237,155,267"/> <area shape="rect" id="node3" href="wx.Window.html" title="wx.Window" alt="" coords="60,160,157,189"/> <area shape="rect" id="node4" href="wx.EvtHandler.html" title="wx.EvtHandler" alt="" coords="50,83,167,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="5,5,92,35"/> <area shape="rect" id="node6" href="wx.Trackable.html" title="wx.Trackable" alt="" coords="117,5,223,35"/> </map> 
   </p>
   </div>

|


|appearance| Control Appearance
===============================

|

.. figure:: _static/images/widgets/fullsize/wxmsw/wx.collapsiblepane.png
   :alt: wxMSW
   :figclass: floatleft

   **wxMSW**


.. figure:: _static/images/widgets/fullsize/wxmac/wx.collapsiblepane.png
   :alt: wxMAC
   :figclass: floatright

   **wxMAC**


.. figure:: _static/images/widgets/fullsize/wxgtk/wx.collapsiblepane.png
   :alt: wxGTK
   :figclass: floatcenter

   **wxGTK**


|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.CollapsiblePane.__init__`                                             Default constructor.
:meth:`~wx.CollapsiblePane.Collapse`                                             Collapses or expands the pane window.
:meth:`~wx.CollapsiblePane.Create`                                               
:meth:`~wx.CollapsiblePane.Expand`                                               Same as calling Collapse(false).
:meth:`~wx.CollapsiblePane.GetClassDefaultAttributes`                            
:meth:`~wx.CollapsiblePane.GetPane`                                              Returns a pointer to the pane window.
:meth:`~wx.CollapsiblePane.IsCollapsed`                                          Returns ``True`` if the pane window is currently hidden.
:meth:`~wx.CollapsiblePane.IsExpanded`                                           Returns ``True`` if the pane window is currently shown.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.CollapsiblePane.Pane`                                                 See :meth:`~wx.CollapsiblePane.GetPane`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.CollapsiblePane(Control)

   **Possible constructors**::

       CollapsiblePane()
       
       CollapsiblePane(parent, id=ID_ANY, label=EmptyString,
                       pos=DefaultPosition, size=DefaultSize, style=CP_DEFAULT_STYLE,
                       validator=DefaultValidator, name=CollapsiblePaneNameStr)
       
   
   A collapsible pane is a container with an embedded button-like control
   which can be used by the user to collapse or expand the pane's
   contents.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self)`
      
      Default constructor.                   
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, parent, id=ID_ANY, label=EmptyString, pos=DefaultPosition, size=DefaultSize, style=CP_DEFAULT_STYLE, validator=DefaultValidator, name=CollapsiblePaneNameStr)`
      
      Initializes the object and calls :meth:`Create`   with all the parameters.                  
      
      
      :param `parent`: 
      :type `parent`: wx.Window
      :param `id`: 
      :type `id`: wx.WindowID
      :param `label`: 
      :type `label`: string
      :param `pos`: 
      :type `pos`: wx.Point
      :param `size`: 
      :type `size`: wx.Size
      :param `style`: 
      :type `style`: long
      :param `validator`: 
      :type `validator`: wx.Validator
      :param `name`: 
      :type `name`: string
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Collapse(self, collapse=True)

      Collapses or expands the pane window.                  


      :param `collapse`: 
      :type `collapse`: bool







   .. method:: Create(self, parent, id=ID_ANY, label=EmptyString, pos=DefaultPosition, size=DefaultSize, style=CP_DEFAULT_STYLE, validator=DefaultValidator, name=CollapsiblePaneNameStr)






      :param `parent`: Parent window, must not be non-NULL.   
      :type `parent`: wx.Window
      :param `id`: The identifier for the control.   
      :type `id`: wx.WindowID
      :param `label`: The initial label shown in the button which allows the user to expand or collapse the pane window.   
      :type `label`: string
      :param `pos`: Initial position.   
      :type `pos`: wx.Point
      :param `size`: Initial size.   
      :type `size`: wx.Size
      :param `style`: The window style, see ``CP_`` flags.   
      :type `style`: long
      :param `validator`: Validator which can be used for additional date checks.   
      :type `validator`: wx.Validator
      :param `name`: Control name.  
      :type `name`: string




















      :rtype: `bool`



                  



      :returns: 

         ``True`` if the control was successfully created or ``False`` if creation failed.   








   .. method:: Expand(self)

      Same as calling Collapse(false).                   





   .. staticmethod:: GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL)




      :param `variant`: 
      :type `variant`: wx.WindowVariant




      :rtype: :ref:`wx.VisualAttributes`








   .. method:: GetPane(self)

      Returns a pointer to the pane window.                  

      Add controls to the returned :ref:`wx.Window`  to make them collapsible.                  

      :rtype: :ref:`wx.Window`








   .. method:: IsCollapsed(self)

      Returns ``True`` if the pane window is currently hidden.                  

      :rtype: `bool`








   .. method:: IsExpanded(self)

      Returns ``True`` if the pane window is currently shown.                  

      :rtype: `bool`








   .. attribute:: Pane

      See :meth:`~wx.CollapsiblePane.GetPane`

