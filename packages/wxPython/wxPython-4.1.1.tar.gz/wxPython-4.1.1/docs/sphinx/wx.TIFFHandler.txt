.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.TIFFHandler:

==========================================================================================================================================
|phoenix_title|  **wx.TIFFHandler**
==========================================================================================================================================

This is the image handler for the ``TIFF`` format.          







         



.. seealso:: :ref:`wx.Image`, :ref:`wx.ImageHandler`, :ref:`wx.InitAllImageHandlers`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>TIFFHandler</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.TIFFHandler_inheritance.png" alt="Inheritance diagram of TIFFHandler" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.TIFFHandler.html" title="wx.TIFFHandler" alt="" coords="13,160,135,189"/> <area shape="rect" id="node2" href="wx.ImageHandler.html" title="wx.ImageHandler" alt="" coords="5,83,143,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="31,5,117,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.TIFFHandler.__init__`                                                 Default constructor for :ref:`wx.TIFFHandler`.
:meth:`~wx.TIFFHandler.DoCanRead`                                                Called to test if this handler can read an image from the given stream.
:meth:`~wx.TIFFHandler.LoadFile`                                                 Loads an image from a stream, putting the resulting data into `image`.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.TIFFHandler(ImageHandler)

   **Possible constructors**::

       TIFFHandler()
       
   
   This is the image handler for the ``TIFF`` format.



   .. method:: __init__(self)

      Default constructor for :ref:`wx.TIFFHandler`.                   





   .. method:: DoCanRead(self, stream)

      Called to test if this handler can read an image from the given stream.                  

      ``NOTE``: this function is allowed to change the current stream position since CallDoCanRead() will take care of restoring it later                  


      :param `stream`: 
      :type `stream`: wx.InputStream




      :rtype: `bool`








   .. method:: LoadFile(self, image, stream, verbose=True, index=-1)

      Loads an image from a stream, putting the resulting data into `image`.                  

      If the image file contains more than one image and the image handler is capable of retrieving these individually, `index`  indicates which image to read from the stream. 




      :param `image`: The image object which is to be affected by this operation.   
      :type `image`: wx.Image
      :param `stream`: Opened input stream for reading image data.   
      :type `stream`: wx.InputStream
      :param `verbose`: If set to ``True``, errors reported by the image handler will produce LogMessages.   
      :type `verbose`: bool
      :param `index`: The index of the image in the file (starting from zero).  
      :type `index`: int












      :rtype: `bool`



                  



      :returns: 

         ``True`` if the operation succeeded, ``False`` otherwise.  







      .. seealso:: :meth:`wx.Image.LoadFile` , :meth:`wx.Image.SaveFile` , :meth:`SaveFile`     







