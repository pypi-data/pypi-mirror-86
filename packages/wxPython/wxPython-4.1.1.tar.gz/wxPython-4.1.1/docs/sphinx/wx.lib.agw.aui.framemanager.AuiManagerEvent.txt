.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. currentmodule:: wx.lib.agw.aui.framemanager

.. highlight:: python



.. _wx.lib.agw.aui.framemanager.AuiManagerEvent:

==========================================================================================================================================
|phoenix_title|  **wx.lib.agw.aui.framemanager.AuiManagerEvent**
==========================================================================================================================================

A specialized command event class for events sent by :class:`AuiManager`. 



|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>AuiManagerEvent</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.lib.agw.aui.framemanager.AuiManagerEvent_inheritance.png" alt="Inheritance diagram of AuiManagerEvent" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.lib.agw.aui.framemanager.AuiManagerEvent.html" title="wx.lib.agw.aui.framemanager.AuiManagerEvent" alt="" coords="5,315,339,344"/> <area shape="rect" id="node2" href="wx.PyCommandEvent.html" title="wx.PyCommandEvent" alt="" coords="89,237,255,267"/> <area shape="rect" id="node3" href="wx.CommandEvent.html" title="wx.CommandEvent" alt="" coords="97,160,247,189"/> <area shape="rect" id="node4" href="wx.Event.html" title="wx.Event" alt="" coords="131,83,213,112"/> <area shape="rect" id="node5" href="wx.Object.html" title="wx.Object" alt="" coords="129,5,215,35"/> </map> 
   </p>
   </div>

|


|super_classes| Known Superclasses
==================================

:class:`wx.PyCommandEvent`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.__init__`                    Default class constructor.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.CanVeto`                     Returns whether the event can be vetoed and has been vetoed.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.GetButton`                   Returns the associated :class:`AuiPaneButton` instance (if any).
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.GetDC`                       Returns the associated :class:`wx.DC` device context (if any).
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.GetManager`                  Returns the associated :class:`AuiManager` (if any).
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.GetPane`                     Returns the associated :class:`AuiPaneInfo` structure (if any).
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.GetVeto`                     Returns whether the event has been vetoed or not.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.SetButton`                   Associates a :class:`AuiPaneButton` instance to this event.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.SetCanVeto`                  Sets whether the event can be vetoed or not.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.SetDC`                       Associates a :class:`wx.DC` device context to this event.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.SetManager`                  Associates a :class:`AuiManager` to the current event.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.SetPane`                     Associates a :class:`AuiPaneInfo` instance to this event.
:meth:`~wx.lib.agw.aui.framemanager.AuiManagerEvent.Veto`                        Prevents the change announced by this event from happening.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: AuiManagerEvent(wx.PyCommandEvent)

   A specialized command event class for events sent by :class:`AuiManager`. 

   .. method:: __init__(self, eventType, id=1)

      Default class constructor.
      
      :param integer `eventType`: the event kind;
      :param integer `id`: the event identification number.


   .. method:: CanVeto(self)

      Returns whether the event can be vetoed and has been vetoed. 


   .. method:: GetButton(self)

      Returns the associated :class:`AuiPaneButton` instance (if any). 


   .. method:: GetDC(self)

      Returns the associated :class:`wx.DC` device context (if any). 


   .. method:: GetManager(self)

      Returns the associated :class:`AuiManager` (if any). 


   .. method:: GetPane(self)

      Returns the associated :class:`AuiPaneInfo` structure (if any). 


   .. method:: GetVeto(self)

      Returns whether the event has been vetoed or not. 


   .. method:: SetButton(self, b)

      Associates a :class:`AuiPaneButton` instance to this event.
      
      :param `b`: a :class:`AuiPaneButton` instance.


   .. method:: SetCanVeto(self, can_veto)

      Sets whether the event can be vetoed or not.
      
      :param bool `can_veto`: ``True`` if the event can be vetoed, ``False`` otherwise.


   .. method:: SetDC(self, pdc)

      Associates a :class:`wx.DC` device context to this event.
      
      :param `pdc`: a :class:`wx.DC` device context object.


   .. method:: SetManager(self, mgr)

      Associates a :class:`AuiManager` to the current event.
      
      :param `mgr`: an instance of :class:`AuiManager`.


   .. method:: SetPane(self, p)

      Associates a :class:`AuiPaneInfo` instance to this event.
      
      :param `p`: a :class:`AuiPaneInfo` instance.


   .. method:: Veto(self, veto=True)

      Prevents the change announced by this event from happening.
      
      It is in general a good idea to notify the user about the reasons for
      vetoing the change because otherwise the applications behaviour (which
      just refuses to do what the user wants) might be quite surprising.
      
      :param bool `veto`: ``True`` to veto the event, ``False`` otherwise.


