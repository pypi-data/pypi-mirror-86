.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc

.. module:: wx.lib.pubsub.core.topicdefnprovider

.. currentmodule:: wx.lib.pubsub.core.topicdefnprovider

.. highlight:: python



.. _wx.lib.pubsub.core.topicdefnprovider:

==========================================================================================================================================
|phoenix_title|  **wx.lib.pubsub.core.topicdefnprovider**
==========================================================================================================================================

:copyright: Copyright since 2006 by Oliver Schoenborn, all rights reserved.
:license: BSD, see LICENSE_BSD_Simple.txt for details.


|function_summary| Functions Summary
====================================

================================================================================ ================================================================================
:func:`~wx.lib.pubsub.core.topicdefnprovider.exportTopicTreeSpec`                Using TopicTreeSpecPrinter, exports the topic tree rooted at rootTopic to a
================================================================================ ================================================================================


|


|class_summary| Classes Summary
===============================

================================================================================ ================================================================================
:ref:`~wx.lib.pubsub.core.topicdefnprovider.ITopicDefnDeserializer`              Interface class for all topic definition de-serializers that can be
:ref:`~wx.lib.pubsub.core.topicdefnprovider.ITopicDefnDeserializer.TopicDefn`    Encapsulate date for a topic definition. Used by
:ref:`~wx.lib.pubsub.core.topicdefnprovider.ITopicDefnProvider`                  All topic definition providers added via pub.addTopicDefnProvider()
:ref:`~wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialClass`              Convert a nested class tree as a topic definition tree. Format: the class
:ref:`~wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialModule`             Deserialize a module containing Python source code defining a topic tree.
:ref:`~wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialString`             Deserialize a string containing Python source code defining a topic tree.
:ref:`~wx.lib.pubsub.core.topicdefnprovider.TopicDefnProvider`                   Default implementation of the ITopicDefnProvider API. This
:ref:`~wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter`                Helper class to print the topic tree using the Python class
================================================================================ ================================================================================


|


.. toctree::
   :maxdepth: 1
   :hidden:

   wx.lib.pubsub.core.topicdefnprovider.ITopicDefnDeserializer
   wx.lib.pubsub.core.topicdefnprovider.ITopicDefnDeserializer.TopicDefn
   wx.lib.pubsub.core.topicdefnprovider.ITopicDefnProvider
   wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialClass
   wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialModule
   wx.lib.pubsub.core.topicdefnprovider.TopicDefnDeserialString
   wx.lib.pubsub.core.topicdefnprovider.TopicDefnProvider
   wx.lib.pubsub.core.topicdefnprovider.TopicTreeSpecPrinter





Functions
------------

.. function:: exportTopicTreeSpec(moduleName = None, rootTopic=None, bak='bak', moduleDoc=None)

   Using TopicTreeSpecPrinter, exports the topic tree rooted at rootTopic to a
   Python module (.py) file. This module will define module-level classes
   representing root topics, nested classes for subtopics etc. Returns a string
   representing the contents of the file. Parameters:
   
       - If moduleName is given, the topic tree is written to moduleName.py in
         os.getcwd(). By default, it is first backed up, it it already exists,
         using bak as the filename extension. If bak is None, existing module file
         gets overwritten.
       - If rootTopic is specified, the export only traverses tree from
         corresponding topic. Otherwise, complete tree, using
         pub.getDefaultTopicTreeRoot() as starting  point.
       - The moduleDoc is the doc string for the module ie topic tree.


