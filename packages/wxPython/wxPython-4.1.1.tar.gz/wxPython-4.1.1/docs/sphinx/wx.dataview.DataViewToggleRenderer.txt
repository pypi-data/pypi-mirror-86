.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.dataview.DataViewToggleRenderer:

==========================================================================================================================================
|phoenix_title|  **wx.dataview.DataViewToggleRenderer**
==========================================================================================================================================

This class is used by :ref:`wx.dataview.DataViewCtrl`  to render toggle controls.          

Note that "toggles" can be represented either by check boxes (default) or radio buttons. 

:ref:`Core` 





.. seealso:: :ref:`wx.dataview.DataViewCheckIconTextRenderer`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DataViewToggleRenderer</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.dataview.DataViewToggleRenderer_inheritance.png" alt="Inheritance diagram of DataViewToggleRenderer" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.dataview.DataViewToggleRenderer.html" title="wx.dataview.DataViewToggleRenderer" alt="" coords="5,160,276,189"/> <area shape="rect" id="node2" href="wx.dataview.DataViewRenderer.html" title="wx.dataview.DataViewRenderer" alt="" coords="26,83,255,112"/> <area shape="rect" id="node3" href="wx.Object.html" title="wx.Object" alt="" coords="97,5,184,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.dataview.DataViewToggleRenderer.__init__`                             The constructor.
:meth:`~wx.dataview.DataViewToggleRenderer.GetDefaultType`                       Returns the :ref:`Variant`  type used with this renderer.
:meth:`~wx.dataview.DataViewToggleRenderer.ShowAsRadio`                          Switch to using radiobutton-like appearance instead of the default checkbox-like one.
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.dataview.DataViewToggleRenderer(DataViewRenderer)

   **Possible constructors**::

       DataViewToggleRenderer(varianttype=DataViewToggleRenderer.GetDefaultType
                              (), mode=DATAVIEW_CELL_INERT, align=DVR_DEFAULT_ALIGNMENT)
       
   
   This class is used by DataViewCtrl to render toggle controls.



   .. method:: __init__(self, varianttype=DataViewToggleRenderer.GetDefaultType(), mode=DATAVIEW_CELL_INERT, align=DVR_DEFAULT_ALIGNMENT)

      The constructor.                  


      :param `varianttype`: 
      :type `varianttype`: string
      :param `mode`: 
      :type `mode`: wx.dataview.DataViewCellMode
      :param `align`: 
      :type `align`: int







   .. staticmethod:: GetDefaultType()

      Returns the :ref:`Variant`  type used with this renderer.                  

                

      :rtype: `string`







      .. versionadded:: 4.1/wxWidgets-3.1.0  
     








   .. method:: ShowAsRadio(self)

      Switch to using radiobutton-like appearance instead of the default checkbox-like one.                  

      By default, this renderer uses checkboxes to represent the boolean values, but using this method its appearance can be changed to use radio buttons instead. 

      Notice that only the appearance is changed, the cells don't really start behaving as radio buttons after a call to :meth:`ShowAsRadio` , i.e. the application code also needs to react to selecting one of the cells shown by this renderer and clearing all the other ones in the same row or column to actually implement radio button-like behaviour. 

                 



      .. versionadded:: 4.1/wxWidgets-3.1.2  
     







