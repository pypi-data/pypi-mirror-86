.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.DCTextColourChanger:

==========================================================================================================================================
|phoenix_title|  **wx.DCTextColourChanger**
==========================================================================================================================================

:ref:`wx.DCTextColourChanger`  is a small helper class for setting a foreground text colour on a :ref:`wx.DC`  and unsetting it automatically in the destructor, restoring the previous one.          







         



.. seealso:: :meth:`wx.DC.SetTextForeground` , :ref:`wx.DCFontChanger`, :ref:`wx.DCPenChanger`, :ref:`wx.DCBrushChanger`, :ref:`wx.DCClipper`, :ref:`wx.DCTextBgColourChanger`, :ref:`DCBgModeChanger`    







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>DCTextColourChanger</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.DCTextColourChanger_inheritance.png" alt="Inheritance diagram of DCTextColourChanger" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.DCTextColourChanger.html" title="wx.DCTextColourChanger" alt="" coords="5,5,192,35"/> </map> 
   </p>
   </div>

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.DCTextColourChanger.__init__`                                         Trivial constructor not changing anything.
:meth:`~wx.DCTextColourChanger.Set`                                              Set the colour to use.
:meth:`~wx.DCTextColourChanger.__enter__`                                        
:meth:`~wx.DCTextColourChanger.__exit__`                                         
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.DCTextColourChanger(object)

   **Possible constructors**::

       DCTextColourChanger(dc)
       
       DCTextColourChanger(dc, col)
       
   
   DCTextColourChanger is a small helper class for setting a foreground
   text colour on a DC and unsetting it automatically in the
   destructor, restoring the previous one.



   .. method:: __init__(self, *args, **kw)



      |overload| Overloaded Implementations:

      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, dc)`
      
      Trivial constructor not changing anything.                  
      
      This constructor is useful if you don't know beforehand if the colour needs to be changed or not. It simply creates the object which won't do anything in its destructor unless :meth:`Set`   is called â€“  in which case it would reset the previous colour.                  
      
      
      :param `dc`: 
      :type `dc`: wx.DC
      
      
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`

      
      **__init__** `(self, dc, col)`
      
      Sets `col`  on the given `dc`, storing the old one.                  
      
      
      
      
      :param `dc`: The DC where the colour must be temporary set.   
      :type `dc`: wx.DC
      :param `col`: The colour to set.   
      :type `col`: wx.Colour
      
      
      
      
      
      
                        
      
      
      
      
      :html:`<hr class="overloadsep" /><br />`






   .. method:: Set(self, col)

      Set the colour to use.                  

      This method is meant to be called once only and only on the objects created with the constructor overload not taking :ref:`wx.Colour`  argument and has the same effect as the other constructor, i.e. sets the colour to the given `col`  and ensures that the old value is restored when this object is destroyed.                  


      :param `col`: 
      :type `col`: wx.Colour







   .. method:: __enter__(self)




   .. method:: __exit__(self, exc_type, exc_val, exc_tb)



