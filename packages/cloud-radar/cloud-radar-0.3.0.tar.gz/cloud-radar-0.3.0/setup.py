# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['cloud_radar']

package_data = \
{'': ['*']}

install_requires = \
['taskcat>=0.9.20,<0.10.0']

setup_kwargs = {
    'name': 'cloud-radar',
    'version': '0.3.0',
    'description': 'Run functional tests on cloudformation stacks.',
    'long_description': '<!--\n*** Thanks for checking out the cloud-radar. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag "enhancement".\n*** Thanks again! Now go create something AMAZING! :D\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I\'m using markdown "reference style" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![Python][python-shield]][pypi-url]\n[![Latest][version-shield]][pypi-url]\n[![Tests][test-shield]][test-url]\n[![Coverage][codecov-shield]][codecov-url]\n[![License][license-shield]][license-url]\n<!-- [![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url] -->\n\n\n\n<!-- PROJECT LOGO -->\n<br />\n<p align="center">\n  <!-- <a href="https://github.com/DontShaveTheYak/cloud-radar">\n    <img src="images/logo.png" alt="Logo" width="80" height="80">\n  </a> -->\n\n  <h3 align="center">Cloud-Radar</h3>\n\n  <p align="center">\n    Write functional tests for multi-region Cloudformation stacks.\n    <!-- <br />\n    <a href="https://github.com/DontShaveTheYak/cloud-radar"><strong>Explore the docs »</strong></a>\n    <br /> -->\n    <br />\n    <!-- <a href="https://github.com/DontShaveTheYak/cloud-radar">View Demo</a>\n    · -->\n    <a href="https://github.com/DontShaveTheYak/cloud-radar/issues">Report Bug</a>\n    ·\n    <a href="https://github.com/DontShaveTheYak/cloud-radar/issues">Request Feature</a>\n  </p>\n</p>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details open="open">\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href="#about-the-project">About The Project</a>\n      <ul>\n        <li><a href="#built-with">Built With</a></li>\n      </ul>\n    </li>\n    <li>\n      <a href="#getting-started">Getting Started</a>\n      <ul>\n        <li><a href="#prerequisites">Prerequisites</a></li>\n        <li><a href="#installation">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href="#usage">Usage</a></li>\n    <li><a href="#roadmap">Roadmap</a></li>\n    <li><a href="#contributing">Contributing</a></li>\n    <li><a href="#license">License</a></li>\n    <li><a href="#contact">Contact</a></li>\n    <li><a href="#acknowledgements">Acknowledgements</a></li>\n  </ol>\n</details>\n\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\n<!-- [![Product Name Screen Shot][product-screenshot]](https://example.com) -->\n\nThis project is a wrapper around Taskcat. Taskcat is a great tool for ensuring your Cloudformation Template can be deployed in multiple AWS Regions. Cloud-Radar enhances Taskcat by making it easier to write more complete functional tests.\n\nHere\'s How:\n* You can interact with the deployed resources directly with tools you already know like boto3.\n* You can control the lifecycle of the stack. This allows testing if resources were retained after the stacks were deleted.\n* You can dynamically generate taskcat projects, tests and template parameters without hardcoding them in a config file.\n\nThis project is new and it\'s possible not all features or functionality of Taskcat are supported. If you find something missing or have a use case that isn\'t covered then please let me know =)\n\n### Built With\n\n* [Taskcat](https://github.com/aws-quickstart/taskcat)\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nCloud-Radar is available as an easy to install pip package.\n\n### Prerequisites\n\nCloud-Radar requires python >= 3.8\n\n### Installation\n\n1. Install with pip.\n   ```sh\n   pip install cloud-radar\n   ```\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nUsing Cloud-Radar start by importing it into your test file or framework.\n\n```python\nfrom cloud_radar import Test\n\n# Test is a context manager that makes sure your stacks are deleted after testing.\n\n# test-name is the name of your test from your taskcat project file.\n# ./project_dir is the path to the folder that contains your Cloudformation template\n# and taskcat config file.\nwith Test(\'test-name\', \'./project_dir\') as stacks:\n    # Stacks will be created and returned as a list in the stacks variable.\n\n    for stack in stacks:\n        # stack will be an instance of Taskcat\'s Stack class.\n        # It has all the expected properties like parameters, outputs and resources\n\n        print(f"Testing {stack.name}")\n\n        bucket_name = ""\n\n        for output in stack.outputs:\n\n            if output.key == "LogsBucketName":\n                bucket_name = output.value\n                break\n\n        assert "logs" in bucket_name\n\n        assert stack.region.name in bucket_name\n\n        print(f"Created bucket: {bucket_name}")\n\n# Once the test is over then all resources will be cleaned up.\n```\n\nYou can also supply a Taskcat config as a python dictionary.\n\n```python\nconfig = {\n    "project": {\n        "name": "taskcat-test-logbucket",\n        "regions": ["us-west-1", "us-west-2"],\n    },\n    "tests": {\n        "log-bucket": {\n            "template": "./log_bucket.yaml",\n            "parameters": {\n                "BucketPrefix": "taskcat-$[taskcat_random-string]",\n                "KeepBucket": "FALSE",\n            },\n        }\n    },\n}\n\nwith Test(\'log-bucket\', \'./project_dir\', config_input=config) as stacks:\n    for stack in stacks:\n      assert \'us-east\' not in stack.region.name\n```\n\nYou can also skip the context manager. Here is an example for `unittest`\n\n```python\nimport unittest\n\nfrom cloud-radar import TestManager\n\nclass Test(unittest.TestCase):\n    @classmethod\n    def setUpClass(cls):\n        cls.tm = TestManager(\'test-name\',\'./project_dir\')\n        cls.tm.create()\n\n    @classmethod\n    def tearDownClass(cls):\n        cls.tm.delete()\n\n    def test_bucket(self):\n        stacks = self.__class__.tm.stacks\n\n        for stack in stacks:\n            # Test\n```\n\nCalling `help(cloud-radar.Test)`\n\n```\nTest(test_name: str, project_dir: str, config_input: dict = None, config_file: str = \'./.taskcat.yml\', regions: str = \'ALL\', wait_for_delete: bool = False) -> Iterator[taskcat._cfn.stack.Stacks]\n    Create Stacks for a Taskcat test and return the stacks.\n\n    Must pass in a Taskcat configuration as either a dictionary or file.\n\n    Args:\n        test_name (str): The name of the test from the Taskcat config file.\n        project_dir (str): The directory that contains your Taskcat config and cloudformation files.\n        config_input (dict, optional): Taskcat config file in the form of a dictionary. Defaults to None.\n        config_file (str, optional): The name of the Taskcat config file. Defaults to "./.taskcat.yml".\n        regions (str, optional): Overide the regions defined in the config file. Defaults to "ALL".\n        wait_for_delete (bool, optional): Wait until stacks have deleted. Defaults to False.\n\n    Yields:\n        Iterator[Stacks]: The stacks created for the tests.\n```\n\nAll the properties and methods of a [stack instance](https://github.com/aws-quickstart/taskcat/blob/main/taskcat/_cfn/stack.py#L188).\n\n_For more examples, please refer to how we test [Cloud-Radar](./tests/test_e2e.py)_\n\n\n\n<!-- ROADMAP -->\n## Roadmap\n\n- Python 3.7 support\n- Add the ability to update a stack instance to Taskcat.\n- Add logging to Cloud-Radar\n- Add logo\n\nSee the [open issues](https://github.com/DontShaveTheYak/cloud-radar/issues) for a list of proposed features (and known issues).\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nThis project uses poetry to manage dependencies and pre-commit to run formatting, linting and tests. You will need to have both installed to your system as well as python 3.9.\n\n1. Fork the Project\n2. Setup environment (`poetry install`)\n3. Setup commit hooks (`pre-commit install`)\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m \'Add some AmazingFeature\'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the Apache-2.0 License. See [LICENSE.txt](./LICENSE.txt) for more information.\n\n<!-- CONTACT -->\n## Contact\n\nLevi - [@shadycuz_cuz](https://twitter.com/shady_cuz)\n\n<!-- ACKNOWLEDGEMENTS -->\n## Acknowledgements\n* [Taskcat](https://aws-quickstart.github.io/taskcat/)\n* [Hypermodern Python](https://cjolowicz.github.io/posts/hypermodern-python-01-setup/)\n* [Best-README-Template](https://github.com/othneildrew/Best-README-Template)\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[python-shield]: https://img.shields.io/pypi/pyversions/cloud-radar?style=for-the-badge\n[version-shield]: https://img.shields.io/pypi/v/cloud-radar?label=latest&style=for-the-badge\n[pypi-url]: https://pypi.org/project/cloud-radar/\n[test-shield]: https://img.shields.io/github/workflow/status/DontShaveTheYak/cloud-radar/Tests?label=Tests&style=for-the-badge\n[test-url]: https://github.com/DontShaveTheYak/cloud-radar/actions?query=workflow%3ATests+branch%3Amaster\n[codecov-shield]: https://img.shields.io/codecov/c/gh/DontShaveTheYak/cloud-radar?color=green&style=for-the-badge&token=NE5C92139X\n[codecov-url]: https://codecov.io/gh/DontShaveTheYak/cloud-radar\n[contributors-shield]: https://img.shields.io/github/contributors/DontShaveTheYak/cloud-radar.svg?style=for-the-badge\n[contributors-url]: https://github.com/DontShaveTheYak/cloud-radar/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/DontShaveTheYak/cloud-radar.svg?style=for-the-badge\n[forks-url]: https://github.com/DontShaveTheYak/cloud-radar/network/members\n[stars-shield]: https://img.shields.io/github/stars/DontShaveTheYak/cloud-radar.svg?style=for-the-badge\n[stars-url]: https://github.com/DontShaveTheYak/cloud-radar/stargazers\n[issues-shield]: https://img.shields.io/github/issues/DontShaveTheYak/cloud-radar.svg?style=for-the-badge\n[issues-url]: https://github.com/DontShaveTheYak/cloud-radar/issues\n[license-shield]: https://img.shields.io/github/license/DontShaveTheYak/cloud-radar.svg?style=for-the-badge\n[license-url]: https://github.com/DontShaveTheYak/cloud-radar/blob/master/LICENSE.txt\n[product-screenshot]: images/screenshot.png\n',
    'author': 'Levi Blaney',
    'author_email': 'shadycuz@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
