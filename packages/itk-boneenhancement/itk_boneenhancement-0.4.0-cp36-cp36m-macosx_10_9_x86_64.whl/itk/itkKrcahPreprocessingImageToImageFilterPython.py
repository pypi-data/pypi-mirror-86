# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _BoneEnhancementPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkKrcahPreprocessingImageToImageFilterPython
else:
    import _itkKrcahPreprocessingImageToImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkKrcahPreprocessingImageToImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkKrcahPreprocessingImageToImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkFixedArrayPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
class itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass)
itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass)
itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass)
itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass)
itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass)
itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass)
itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass)
itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass)
itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass)
itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass)
itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass)
itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass)
itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass)
itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass)
itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass)
itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass)
itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass)
itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass)
itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass)
itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass)
itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass)
itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass)
itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass)
itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass)
itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass)
itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass)
itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass_cast

class itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_cast)

# Register itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass)
itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass_cast


def itkKrcahPreprocessingImageToImageFilterID2ID2_New():
    return itkKrcahPreprocessingImageToImageFilterID2ID2.New()

class itkKrcahPreprocessingImageToImageFilterID2ID2(itkKrcahPreprocessingImageToImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2ID2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID2ID2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID2ID2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_swigregister(itkKrcahPreprocessingImageToImageFilterID2ID2)
itkKrcahPreprocessingImageToImageFilterID2ID2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2___New_orig__
itkKrcahPreprocessingImageToImageFilterID2ID2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ID2_cast


def itkKrcahPreprocessingImageToImageFilterID2IF2_New():
    return itkKrcahPreprocessingImageToImageFilterID2IF2.New()

class itkKrcahPreprocessingImageToImageFilterID2IF2(itkKrcahPreprocessingImageToImageFilterID2IF2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IF2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID2IF2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID2IF2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_swigregister(itkKrcahPreprocessingImageToImageFilterID2IF2)
itkKrcahPreprocessingImageToImageFilterID2IF2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2___New_orig__
itkKrcahPreprocessingImageToImageFilterID2IF2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IF2_cast


def itkKrcahPreprocessingImageToImageFilterID2ISS2_New():
    return itkKrcahPreprocessingImageToImageFilterID2ISS2.New()

class itkKrcahPreprocessingImageToImageFilterID2ISS2(itkKrcahPreprocessingImageToImageFilterID2ISS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2ISS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID2ISS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID2ISS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_swigregister(itkKrcahPreprocessingImageToImageFilterID2ISS2)
itkKrcahPreprocessingImageToImageFilterID2ISS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2___New_orig__
itkKrcahPreprocessingImageToImageFilterID2ISS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2ISS2_cast


def itkKrcahPreprocessingImageToImageFilterID2IUC2_New():
    return itkKrcahPreprocessingImageToImageFilterID2IUC2.New()

class itkKrcahPreprocessingImageToImageFilterID2IUC2(itkKrcahPreprocessingImageToImageFilterID2IUC2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IUC2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID2IUC2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID2IUC2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_swigregister(itkKrcahPreprocessingImageToImageFilterID2IUC2)
itkKrcahPreprocessingImageToImageFilterID2IUC2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2___New_orig__
itkKrcahPreprocessingImageToImageFilterID2IUC2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUC2_cast


def itkKrcahPreprocessingImageToImageFilterID2IUS2_New():
    return itkKrcahPreprocessingImageToImageFilterID2IUS2.New()

class itkKrcahPreprocessingImageToImageFilterID2IUS2(itkKrcahPreprocessingImageToImageFilterID2IUS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID2IUS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID2IUS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID2IUS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_swigregister(itkKrcahPreprocessingImageToImageFilterID2IUS2)
itkKrcahPreprocessingImageToImageFilterID2IUS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2___New_orig__
itkKrcahPreprocessingImageToImageFilterID2IUS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID2IUS2_cast


def itkKrcahPreprocessingImageToImageFilterID3ID3_New():
    return itkKrcahPreprocessingImageToImageFilterID3ID3.New()

class itkKrcahPreprocessingImageToImageFilterID3ID3(itkKrcahPreprocessingImageToImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3ID3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID3ID3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID3ID3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_swigregister(itkKrcahPreprocessingImageToImageFilterID3ID3)
itkKrcahPreprocessingImageToImageFilterID3ID3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3___New_orig__
itkKrcahPreprocessingImageToImageFilterID3ID3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ID3_cast


def itkKrcahPreprocessingImageToImageFilterID3IF3_New():
    return itkKrcahPreprocessingImageToImageFilterID3IF3.New()

class itkKrcahPreprocessingImageToImageFilterID3IF3(itkKrcahPreprocessingImageToImageFilterID3IF3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IF3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID3IF3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID3IF3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_swigregister(itkKrcahPreprocessingImageToImageFilterID3IF3)
itkKrcahPreprocessingImageToImageFilterID3IF3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3___New_orig__
itkKrcahPreprocessingImageToImageFilterID3IF3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IF3_cast


def itkKrcahPreprocessingImageToImageFilterID3ISS3_New():
    return itkKrcahPreprocessingImageToImageFilterID3ISS3.New()

class itkKrcahPreprocessingImageToImageFilterID3ISS3(itkKrcahPreprocessingImageToImageFilterID3ISS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3ISS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID3ISS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID3ISS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_swigregister(itkKrcahPreprocessingImageToImageFilterID3ISS3)
itkKrcahPreprocessingImageToImageFilterID3ISS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3___New_orig__
itkKrcahPreprocessingImageToImageFilterID3ISS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3ISS3_cast


def itkKrcahPreprocessingImageToImageFilterID3IUC3_New():
    return itkKrcahPreprocessingImageToImageFilterID3IUC3.New()

class itkKrcahPreprocessingImageToImageFilterID3IUC3(itkKrcahPreprocessingImageToImageFilterID3IUC3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IUC3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID3IUC3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID3IUC3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_swigregister(itkKrcahPreprocessingImageToImageFilterID3IUC3)
itkKrcahPreprocessingImageToImageFilterID3IUC3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3___New_orig__
itkKrcahPreprocessingImageToImageFilterID3IUC3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUC3_cast


def itkKrcahPreprocessingImageToImageFilterID3IUS3_New():
    return itkKrcahPreprocessingImageToImageFilterID3IUS3.New()

class itkKrcahPreprocessingImageToImageFilterID3IUS3(itkKrcahPreprocessingImageToImageFilterID3IUS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterID3IUS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterID3IUS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterID3IUS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_swigregister(itkKrcahPreprocessingImageToImageFilterID3IUS3)
itkKrcahPreprocessingImageToImageFilterID3IUS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3___New_orig__
itkKrcahPreprocessingImageToImageFilterID3IUS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterID3IUS3_cast


def itkKrcahPreprocessingImageToImageFilterIF2ID2_New():
    return itkKrcahPreprocessingImageToImageFilterIF2ID2.New()

class itkKrcahPreprocessingImageToImageFilterIF2ID2(itkKrcahPreprocessingImageToImageFilterIF2ID2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2ID2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF2ID2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF2ID2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_swigregister(itkKrcahPreprocessingImageToImageFilterIF2ID2)
itkKrcahPreprocessingImageToImageFilterIF2ID2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2___New_orig__
itkKrcahPreprocessingImageToImageFilterIF2ID2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ID2_cast


def itkKrcahPreprocessingImageToImageFilterIF2IF2_New():
    return itkKrcahPreprocessingImageToImageFilterIF2IF2.New()

class itkKrcahPreprocessingImageToImageFilterIF2IF2(itkKrcahPreprocessingImageToImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IF2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF2IF2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF2IF2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IF2)
itkKrcahPreprocessingImageToImageFilterIF2IF2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2___New_orig__
itkKrcahPreprocessingImageToImageFilterIF2IF2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IF2_cast


def itkKrcahPreprocessingImageToImageFilterIF2ISS2_New():
    return itkKrcahPreprocessingImageToImageFilterIF2ISS2.New()

class itkKrcahPreprocessingImageToImageFilterIF2ISS2(itkKrcahPreprocessingImageToImageFilterIF2ISS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF2ISS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF2ISS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_swigregister(itkKrcahPreprocessingImageToImageFilterIF2ISS2)
itkKrcahPreprocessingImageToImageFilterIF2ISS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIF2ISS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2ISS2_cast


def itkKrcahPreprocessingImageToImageFilterIF2IUC2_New():
    return itkKrcahPreprocessingImageToImageFilterIF2IUC2.New()

class itkKrcahPreprocessingImageToImageFilterIF2IUC2(itkKrcahPreprocessingImageToImageFilterIF2IUC2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF2IUC2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF2IUC2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IUC2)
itkKrcahPreprocessingImageToImageFilterIF2IUC2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2___New_orig__
itkKrcahPreprocessingImageToImageFilterIF2IUC2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUC2_cast


def itkKrcahPreprocessingImageToImageFilterIF2IUS2_New():
    return itkKrcahPreprocessingImageToImageFilterIF2IUS2.New()

class itkKrcahPreprocessingImageToImageFilterIF2IUS2(itkKrcahPreprocessingImageToImageFilterIF2IUS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF2IUS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF2IUS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_swigregister(itkKrcahPreprocessingImageToImageFilterIF2IUS2)
itkKrcahPreprocessingImageToImageFilterIF2IUS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIF2IUS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF2IUS2_cast


def itkKrcahPreprocessingImageToImageFilterIF3ID3_New():
    return itkKrcahPreprocessingImageToImageFilterIF3ID3.New()

class itkKrcahPreprocessingImageToImageFilterIF3ID3(itkKrcahPreprocessingImageToImageFilterIF3ID3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3ID3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF3ID3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF3ID3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_swigregister(itkKrcahPreprocessingImageToImageFilterIF3ID3)
itkKrcahPreprocessingImageToImageFilterIF3ID3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3___New_orig__
itkKrcahPreprocessingImageToImageFilterIF3ID3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ID3_cast


def itkKrcahPreprocessingImageToImageFilterIF3IF3_New():
    return itkKrcahPreprocessingImageToImageFilterIF3IF3.New()

class itkKrcahPreprocessingImageToImageFilterIF3IF3(itkKrcahPreprocessingImageToImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IF3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF3IF3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF3IF3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IF3)
itkKrcahPreprocessingImageToImageFilterIF3IF3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3___New_orig__
itkKrcahPreprocessingImageToImageFilterIF3IF3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IF3_cast


def itkKrcahPreprocessingImageToImageFilterIF3ISS3_New():
    return itkKrcahPreprocessingImageToImageFilterIF3ISS3.New()

class itkKrcahPreprocessingImageToImageFilterIF3ISS3(itkKrcahPreprocessingImageToImageFilterIF3ISS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF3ISS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF3ISS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_swigregister(itkKrcahPreprocessingImageToImageFilterIF3ISS3)
itkKrcahPreprocessingImageToImageFilterIF3ISS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIF3ISS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3ISS3_cast


def itkKrcahPreprocessingImageToImageFilterIF3IUC3_New():
    return itkKrcahPreprocessingImageToImageFilterIF3IUC3.New()

class itkKrcahPreprocessingImageToImageFilterIF3IUC3(itkKrcahPreprocessingImageToImageFilterIF3IUC3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF3IUC3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF3IUC3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IUC3)
itkKrcahPreprocessingImageToImageFilterIF3IUC3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3___New_orig__
itkKrcahPreprocessingImageToImageFilterIF3IUC3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUC3_cast


def itkKrcahPreprocessingImageToImageFilterIF3IUS3_New():
    return itkKrcahPreprocessingImageToImageFilterIF3IUS3.New()

class itkKrcahPreprocessingImageToImageFilterIF3IUS3(itkKrcahPreprocessingImageToImageFilterIF3IUS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIF3IUS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIF3IUS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_swigregister(itkKrcahPreprocessingImageToImageFilterIF3IUS3)
itkKrcahPreprocessingImageToImageFilterIF3IUS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIF3IUS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIF3IUS3_cast


def itkKrcahPreprocessingImageToImageFilterISS2ID2_New():
    return itkKrcahPreprocessingImageToImageFilterISS2ID2.New()

class itkKrcahPreprocessingImageToImageFilterISS2ID2(itkKrcahPreprocessingImageToImageFilterISS2ID2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2ID2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS2ID2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS2ID2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_swigregister(itkKrcahPreprocessingImageToImageFilterISS2ID2)
itkKrcahPreprocessingImageToImageFilterISS2ID2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2___New_orig__
itkKrcahPreprocessingImageToImageFilterISS2ID2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ID2_cast


def itkKrcahPreprocessingImageToImageFilterISS2IF2_New():
    return itkKrcahPreprocessingImageToImageFilterISS2IF2.New()

class itkKrcahPreprocessingImageToImageFilterISS2IF2(itkKrcahPreprocessingImageToImageFilterISS2IF2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IF2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS2IF2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS2IF2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IF2)
itkKrcahPreprocessingImageToImageFilterISS2IF2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2___New_orig__
itkKrcahPreprocessingImageToImageFilterISS2IF2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IF2_cast


def itkKrcahPreprocessingImageToImageFilterISS2ISS2_New():
    return itkKrcahPreprocessingImageToImageFilterISS2ISS2.New()

class itkKrcahPreprocessingImageToImageFilterISS2ISS2(itkKrcahPreprocessingImageToImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS2ISS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS2ISS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_swigregister(itkKrcahPreprocessingImageToImageFilterISS2ISS2)
itkKrcahPreprocessingImageToImageFilterISS2ISS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2___New_orig__
itkKrcahPreprocessingImageToImageFilterISS2ISS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2ISS2_cast


def itkKrcahPreprocessingImageToImageFilterISS2IUC2_New():
    return itkKrcahPreprocessingImageToImageFilterISS2IUC2.New()

class itkKrcahPreprocessingImageToImageFilterISS2IUC2(itkKrcahPreprocessingImageToImageFilterISS2IUC2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS2IUC2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS2IUC2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IUC2)
itkKrcahPreprocessingImageToImageFilterISS2IUC2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2___New_orig__
itkKrcahPreprocessingImageToImageFilterISS2IUC2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUC2_cast


def itkKrcahPreprocessingImageToImageFilterISS2IUS2_New():
    return itkKrcahPreprocessingImageToImageFilterISS2IUS2.New()

class itkKrcahPreprocessingImageToImageFilterISS2IUS2(itkKrcahPreprocessingImageToImageFilterISS2IUS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS2IUS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS2IUS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_swigregister(itkKrcahPreprocessingImageToImageFilterISS2IUS2)
itkKrcahPreprocessingImageToImageFilterISS2IUS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2___New_orig__
itkKrcahPreprocessingImageToImageFilterISS2IUS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS2IUS2_cast


def itkKrcahPreprocessingImageToImageFilterISS3ID3_New():
    return itkKrcahPreprocessingImageToImageFilterISS3ID3.New()

class itkKrcahPreprocessingImageToImageFilterISS3ID3(itkKrcahPreprocessingImageToImageFilterISS3ID3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3ID3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS3ID3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS3ID3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_swigregister(itkKrcahPreprocessingImageToImageFilterISS3ID3)
itkKrcahPreprocessingImageToImageFilterISS3ID3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3___New_orig__
itkKrcahPreprocessingImageToImageFilterISS3ID3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ID3_cast


def itkKrcahPreprocessingImageToImageFilterISS3IF3_New():
    return itkKrcahPreprocessingImageToImageFilterISS3IF3.New()

class itkKrcahPreprocessingImageToImageFilterISS3IF3(itkKrcahPreprocessingImageToImageFilterISS3IF3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IF3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS3IF3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS3IF3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IF3)
itkKrcahPreprocessingImageToImageFilterISS3IF3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3___New_orig__
itkKrcahPreprocessingImageToImageFilterISS3IF3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IF3_cast


def itkKrcahPreprocessingImageToImageFilterISS3ISS3_New():
    return itkKrcahPreprocessingImageToImageFilterISS3ISS3.New()

class itkKrcahPreprocessingImageToImageFilterISS3ISS3(itkKrcahPreprocessingImageToImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS3ISS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS3ISS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_swigregister(itkKrcahPreprocessingImageToImageFilterISS3ISS3)
itkKrcahPreprocessingImageToImageFilterISS3ISS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3___New_orig__
itkKrcahPreprocessingImageToImageFilterISS3ISS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3ISS3_cast


def itkKrcahPreprocessingImageToImageFilterISS3IUC3_New():
    return itkKrcahPreprocessingImageToImageFilterISS3IUC3.New()

class itkKrcahPreprocessingImageToImageFilterISS3IUC3(itkKrcahPreprocessingImageToImageFilterISS3IUC3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS3IUC3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS3IUC3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IUC3)
itkKrcahPreprocessingImageToImageFilterISS3IUC3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3___New_orig__
itkKrcahPreprocessingImageToImageFilterISS3IUC3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUC3_cast


def itkKrcahPreprocessingImageToImageFilterISS3IUS3_New():
    return itkKrcahPreprocessingImageToImageFilterISS3IUS3.New()

class itkKrcahPreprocessingImageToImageFilterISS3IUS3(itkKrcahPreprocessingImageToImageFilterISS3IUS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterISS3IUS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterISS3IUS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_swigregister(itkKrcahPreprocessingImageToImageFilterISS3IUS3)
itkKrcahPreprocessingImageToImageFilterISS3IUS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3___New_orig__
itkKrcahPreprocessingImageToImageFilterISS3IUS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterISS3IUS3_cast


def itkKrcahPreprocessingImageToImageFilterIUC2ID2_New():
    return itkKrcahPreprocessingImageToImageFilterIUC2ID2.New()

class itkKrcahPreprocessingImageToImageFilterIUC2ID2(itkKrcahPreprocessingImageToImageFilterIUC2ID2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC2ID2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC2ID2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2ID2)
itkKrcahPreprocessingImageToImageFilterIUC2ID2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC2ID2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ID2_cast


def itkKrcahPreprocessingImageToImageFilterIUC2IF2_New():
    return itkKrcahPreprocessingImageToImageFilterIUC2IF2.New()

class itkKrcahPreprocessingImageToImageFilterIUC2IF2(itkKrcahPreprocessingImageToImageFilterIUC2IF2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC2IF2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC2IF2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IF2)
itkKrcahPreprocessingImageToImageFilterIUC2IF2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC2IF2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IF2_cast


def itkKrcahPreprocessingImageToImageFilterIUC2ISS2_New():
    return itkKrcahPreprocessingImageToImageFilterIUC2ISS2.New()

class itkKrcahPreprocessingImageToImageFilterIUC2ISS2(itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC2ISS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC2ISS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2ISS2)
itkKrcahPreprocessingImageToImageFilterIUC2ISS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC2ISS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2ISS2_cast


def itkKrcahPreprocessingImageToImageFilterIUC2IUC2_New():
    return itkKrcahPreprocessingImageToImageFilterIUC2IUC2.New()

class itkKrcahPreprocessingImageToImageFilterIUC2IUC2(itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC2IUC2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC2IUC2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IUC2)
itkKrcahPreprocessingImageToImageFilterIUC2IUC2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC2IUC2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUC2_cast


def itkKrcahPreprocessingImageToImageFilterIUC2IUS2_New():
    return itkKrcahPreprocessingImageToImageFilterIUC2IUS2.New()

class itkKrcahPreprocessingImageToImageFilterIUC2IUS2(itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC2IUS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC2IUS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_swigregister(itkKrcahPreprocessingImageToImageFilterIUC2IUS2)
itkKrcahPreprocessingImageToImageFilterIUC2IUS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC2IUS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC2IUS2_cast


def itkKrcahPreprocessingImageToImageFilterIUC3ID3_New():
    return itkKrcahPreprocessingImageToImageFilterIUC3ID3.New()

class itkKrcahPreprocessingImageToImageFilterIUC3ID3(itkKrcahPreprocessingImageToImageFilterIUC3ID3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC3ID3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC3ID3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3ID3)
itkKrcahPreprocessingImageToImageFilterIUC3ID3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC3ID3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ID3_cast


def itkKrcahPreprocessingImageToImageFilterIUC3IF3_New():
    return itkKrcahPreprocessingImageToImageFilterIUC3IF3.New()

class itkKrcahPreprocessingImageToImageFilterIUC3IF3(itkKrcahPreprocessingImageToImageFilterIUC3IF3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC3IF3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC3IF3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IF3)
itkKrcahPreprocessingImageToImageFilterIUC3IF3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC3IF3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IF3_cast


def itkKrcahPreprocessingImageToImageFilterIUC3ISS3_New():
    return itkKrcahPreprocessingImageToImageFilterIUC3ISS3.New()

class itkKrcahPreprocessingImageToImageFilterIUC3ISS3(itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC3ISS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC3ISS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3ISS3)
itkKrcahPreprocessingImageToImageFilterIUC3ISS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC3ISS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3ISS3_cast


def itkKrcahPreprocessingImageToImageFilterIUC3IUC3_New():
    return itkKrcahPreprocessingImageToImageFilterIUC3IUC3.New()

class itkKrcahPreprocessingImageToImageFilterIUC3IUC3(itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC3IUC3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC3IUC3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IUC3)
itkKrcahPreprocessingImageToImageFilterIUC3IUC3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC3IUC3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUC3_cast


def itkKrcahPreprocessingImageToImageFilterIUC3IUS3_New():
    return itkKrcahPreprocessingImageToImageFilterIUC3IUS3.New()

class itkKrcahPreprocessingImageToImageFilterIUC3IUS3(itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUC3IUS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUC3IUS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_swigregister(itkKrcahPreprocessingImageToImageFilterIUC3IUS3)
itkKrcahPreprocessingImageToImageFilterIUC3IUS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUC3IUS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUC3IUS3_cast


def itkKrcahPreprocessingImageToImageFilterIUS2ID2_New():
    return itkKrcahPreprocessingImageToImageFilterIUS2ID2.New()

class itkKrcahPreprocessingImageToImageFilterIUS2ID2(itkKrcahPreprocessingImageToImageFilterIUS2ID2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS2ID2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS2ID2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2ID2)
itkKrcahPreprocessingImageToImageFilterIUS2ID2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS2ID2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ID2_cast


def itkKrcahPreprocessingImageToImageFilterIUS2IF2_New():
    return itkKrcahPreprocessingImageToImageFilterIUS2IF2.New()

class itkKrcahPreprocessingImageToImageFilterIUS2IF2(itkKrcahPreprocessingImageToImageFilterIUS2IF2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS2IF2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS2IF2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IF2)
itkKrcahPreprocessingImageToImageFilterIUS2IF2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS2IF2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IF2_cast


def itkKrcahPreprocessingImageToImageFilterIUS2ISS2_New():
    return itkKrcahPreprocessingImageToImageFilterIUS2ISS2.New()

class itkKrcahPreprocessingImageToImageFilterIUS2ISS2(itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS2ISS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS2ISS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2ISS2)
itkKrcahPreprocessingImageToImageFilterIUS2ISS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS2ISS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2ISS2_cast


def itkKrcahPreprocessingImageToImageFilterIUS2IUC2_New():
    return itkKrcahPreprocessingImageToImageFilterIUS2IUC2.New()

class itkKrcahPreprocessingImageToImageFilterIUS2IUC2(itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS2IUC2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS2IUC2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IUC2)
itkKrcahPreprocessingImageToImageFilterIUS2IUC2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS2IUC2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUC2_cast


def itkKrcahPreprocessingImageToImageFilterIUS2IUS2_New():
    return itkKrcahPreprocessingImageToImageFilterIUS2IUS2.New()

class itkKrcahPreprocessingImageToImageFilterIUS2IUS2(itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS2IUS2

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS2IUS2 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_swigregister(itkKrcahPreprocessingImageToImageFilterIUS2IUS2)
itkKrcahPreprocessingImageToImageFilterIUS2IUS2___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS2IUS2_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS2IUS2_cast


def itkKrcahPreprocessingImageToImageFilterIUS3ID3_New():
    return itkKrcahPreprocessingImageToImageFilterIUS3ID3.New()

class itkKrcahPreprocessingImageToImageFilterIUS3ID3(itkKrcahPreprocessingImageToImageFilterIUS3ID3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS3ID3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS3ID3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3ID3)
itkKrcahPreprocessingImageToImageFilterIUS3ID3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS3ID3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ID3_cast


def itkKrcahPreprocessingImageToImageFilterIUS3IF3_New():
    return itkKrcahPreprocessingImageToImageFilterIUS3IF3.New()

class itkKrcahPreprocessingImageToImageFilterIUS3IF3(itkKrcahPreprocessingImageToImageFilterIUS3IF3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS3IF3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS3IF3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IF3)
itkKrcahPreprocessingImageToImageFilterIUS3IF3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS3IF3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IF3_cast


def itkKrcahPreprocessingImageToImageFilterIUS3ISS3_New():
    return itkKrcahPreprocessingImageToImageFilterIUS3ISS3.New()

class itkKrcahPreprocessingImageToImageFilterIUS3ISS3(itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS3ISS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS3ISS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3ISS3)
itkKrcahPreprocessingImageToImageFilterIUS3ISS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS3ISS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3ISS3_cast


def itkKrcahPreprocessingImageToImageFilterIUS3IUC3_New():
    return itkKrcahPreprocessingImageToImageFilterIUS3IUC3.New()

class itkKrcahPreprocessingImageToImageFilterIUS3IUC3(itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS3IUC3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS3IUC3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IUC3)
itkKrcahPreprocessingImageToImageFilterIUS3IUC3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS3IUC3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUC3_cast


def itkKrcahPreprocessingImageToImageFilterIUS3IUS3_New():
    return itkKrcahPreprocessingImageToImageFilterIUS3IUS3.New()

class itkKrcahPreprocessingImageToImageFilterIUS3IUS3(itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkKrcahPreprocessingImageToImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_Clone)
    SetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_SetReleaseInternalFilterData)
    GetReleaseInternalFilterData = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_GetReleaseInternalFilterData)
    ReleaseInternalFilterDataOn = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_ReleaseInternalFilterDataOn)
    ReleaseInternalFilterDataOff = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_ReleaseInternalFilterDataOff)
    SetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_GetSigma)
    SetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_SetScalingConstant)
    GetScalingConstant = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_GetScalingConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_GenerateInputRequestedRegion)
    InputOutputHaveSamePixelDimensionCheck = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkKrcahPreprocessingImageToImageFilterPython.delete_itkKrcahPreprocessingImageToImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKrcahPreprocessingImageToImageFilterIUS3IUS3

        Create a new object of the class itkKrcahPreprocessingImageToImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKrcahPreprocessingImageToImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKrcahPreprocessingImageToImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKrcahPreprocessingImageToImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKrcahPreprocessingImageToImageFilterIUS3IUS3 in _itkKrcahPreprocessingImageToImageFilterPython:
_itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_swigregister(itkKrcahPreprocessingImageToImageFilterIUS3IUS3)
itkKrcahPreprocessingImageToImageFilterIUS3IUS3___New_orig__ = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3___New_orig__
itkKrcahPreprocessingImageToImageFilterIUS3IUS3_cast = _itkKrcahPreprocessingImageToImageFilterPython.itkKrcahPreprocessingImageToImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def krcah_preprocessing_image_to_image_filter(*args, **kwargs):
    """Procedural interface for KrcahPreprocessingImageToImageFilter"""
    import itk
    instance = itk.KrcahPreprocessingImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def krcah_preprocessing_image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.KrcahPreprocessingImageToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.KrcahPreprocessingImageToImageFilter.values()[0]
    else:
        filter_object = itk.KrcahPreprocessingImageToImageFilter

    krcah_preprocessing_image_to_image_filter.__doc__ = filter_object.__doc__
    krcah_preprocessing_image_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    krcah_preprocessing_image_to_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.KrcahPreprocessingImageToImageFilter, itkTemplate.itkTemplate):
        krcah_preprocessing_image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        krcah_preprocessing_image_to_image_filter.__doc__ += "\n"
        krcah_preprocessing_image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        krcah_preprocessing_image_to_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_image_filter(*args, **kwargs):
    """Procedural interface for ImageToImageFilter"""
    import itk
    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ImageToImageFilter.values()[0]
    else:
        filter_object = itk.ImageToImageFilter

    image_to_image_filter.__doc__ = filter_object.__doc__
    image_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_to_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_to_image_filter.__doc__ += "\n"
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_to_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



