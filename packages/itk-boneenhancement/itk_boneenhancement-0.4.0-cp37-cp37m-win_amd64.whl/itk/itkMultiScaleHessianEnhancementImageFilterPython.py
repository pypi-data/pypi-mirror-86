# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _BoneEnhancementPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiScaleHessianEnhancementImageFilterPython
else:
    import _itkMultiScaleHessianEnhancementImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMultiScaleHessianEnhancementImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMultiScaleHessianEnhancementImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkSymmetricEigenAnalysisImageFilterPython
import itk.itkImageToImageFilterBPython
import itk.itkEigenToMeasureImageFilterPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkSpatialObjectPropertyPython
import itk.itkStreamingImageFilterPython
import itk.itkSimpleDataObjectDecoratorPython

def itkMultiScaleHessianEnhancementImageFilterID3ID3_New():
    return itkMultiScaleHessianEnhancementImageFilterID3ID3.New()

class itkMultiScaleHessianEnhancementImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterID3ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterID3ID3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterID3ID3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_swigregister(itkMultiScaleHessianEnhancementImageFilterID3ID3)
itkMultiScaleHessianEnhancementImageFilterID3ID3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3___New_orig__
itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3ID3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3ID3_cast


def itkMultiScaleHessianEnhancementImageFilterID3IF3_New():
    return itkMultiScaleHessianEnhancementImageFilterID3IF3.New()

class itkMultiScaleHessianEnhancementImageFilterID3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterID3IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterID3IF3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterID3IF3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_swigregister(itkMultiScaleHessianEnhancementImageFilterID3IF3)
itkMultiScaleHessianEnhancementImageFilterID3IF3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3___New_orig__
itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterID3IF3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterID3IF3_cast


def itkMultiScaleHessianEnhancementImageFilterIF3ID3_New():
    return itkMultiScaleHessianEnhancementImageFilterIF3ID3.New()

class itkMultiScaleHessianEnhancementImageFilterIF3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIF3ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIF3ID3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIF3ID3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_swigregister(itkMultiScaleHessianEnhancementImageFilterIF3ID3)
itkMultiScaleHessianEnhancementImageFilterIF3ID3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3ID3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3ID3_cast


def itkMultiScaleHessianEnhancementImageFilterIF3IF3_New():
    return itkMultiScaleHessianEnhancementImageFilterIF3IF3.New()

class itkMultiScaleHessianEnhancementImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIF3IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIF3IF3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIF3IF3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_swigregister(itkMultiScaleHessianEnhancementImageFilterIF3IF3)
itkMultiScaleHessianEnhancementImageFilterIF3IF3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIF3IF3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIF3IF3_cast


def itkMultiScaleHessianEnhancementImageFilterISS3ID3_New():
    return itkMultiScaleHessianEnhancementImageFilterISS3ID3.New()

class itkMultiScaleHessianEnhancementImageFilterISS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterISS3ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterISS3ID3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterISS3ID3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_swigregister(itkMultiScaleHessianEnhancementImageFilterISS3ID3)
itkMultiScaleHessianEnhancementImageFilterISS3ID3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3___New_orig__
itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3ID3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3ID3_cast


def itkMultiScaleHessianEnhancementImageFilterISS3IF3_New():
    return itkMultiScaleHessianEnhancementImageFilterISS3IF3.New()

class itkMultiScaleHessianEnhancementImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterISS3IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterISS3IF3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterISS3IF3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_swigregister(itkMultiScaleHessianEnhancementImageFilterISS3IF3)
itkMultiScaleHessianEnhancementImageFilterISS3IF3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3___New_orig__
itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterISS3IF3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterISS3IF3_cast


def itkMultiScaleHessianEnhancementImageFilterIUC3ID3_New():
    return itkMultiScaleHessianEnhancementImageFilterIUC3ID3.New()

class itkMultiScaleHessianEnhancementImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIUC3ID3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIUC3ID3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_swigregister(itkMultiScaleHessianEnhancementImageFilterIUC3ID3)
itkMultiScaleHessianEnhancementImageFilterIUC3ID3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3ID3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3ID3_cast


def itkMultiScaleHessianEnhancementImageFilterIUC3IF3_New():
    return itkMultiScaleHessianEnhancementImageFilterIUC3IF3.New()

class itkMultiScaleHessianEnhancementImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIUC3IF3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIUC3IF3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_swigregister(itkMultiScaleHessianEnhancementImageFilterIUC3IF3)
itkMultiScaleHessianEnhancementImageFilterIUC3IF3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUC3IF3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUC3IF3_cast


def itkMultiScaleHessianEnhancementImageFilterIUS3ID3_New():
    return itkMultiScaleHessianEnhancementImageFilterIUS3ID3.New()

class itkMultiScaleHessianEnhancementImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIUS3ID3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIUS3ID3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_swigregister(itkMultiScaleHessianEnhancementImageFilterIUS3ID3)
itkMultiScaleHessianEnhancementImageFilterIUS3ID3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3ID3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3ID3_cast


def itkMultiScaleHessianEnhancementImageFilterIUS3IF3_New():
    return itkMultiScaleHessianEnhancementImageFilterIUS3IF3.New()

class itkMultiScaleHessianEnhancementImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkMultiScaleHessianEnhancementImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_Clone)
    SetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_SetImageMask)
    GetImageMask = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetImageMask)
    SetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_SetEigenToMeasureImageFilter)
    GetModifiableEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetModifiableEigenToMeasureImageFilter)
    GetEigenToMeasureImageFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetEigenToMeasureImageFilter)
    SetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_SetEigenToMeasureParameterEstimationFilter)
    GetModifiableEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetModifiableEigenToMeasureParameterEstimationFilter)
    GetEigenToMeasureParameterEstimationFilter = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetEigenToMeasureParameterEstimationFilter)
    SetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_SetSigmaArray)
    GetSigmaArray = _swig_new_instance_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GetSigmaArray)
    GenerateSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateSigmaArray)
    GenerateEquispacedSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateEquispacedSigmaArray)
    GenerateLogarithmicSigmaArray = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateLogarithmicSigmaArray)
    InputOutputHaveSamePixelDimensionCheck = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_InputOutputHaveSamePixelDimensionCheck
    
    __swig_destroy__ = _itkMultiScaleHessianEnhancementImageFilterPython.delete_itkMultiScaleHessianEnhancementImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianEnhancementImageFilterIUS3IF3

        Create a new object of the class itkMultiScaleHessianEnhancementImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianEnhancementImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianEnhancementImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianEnhancementImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianEnhancementImageFilterIUS3IF3 in _itkMultiScaleHessianEnhancementImageFilterPython:
_itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_swigregister(itkMultiScaleHessianEnhancementImageFilterIUS3IF3)
itkMultiScaleHessianEnhancementImageFilterIUS3IF3___New_orig__ = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3___New_orig__
itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateEquispacedSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateEquispacedSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateLogarithmicSigmaArray = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_GenerateLogarithmicSigmaArray
itkMultiScaleHessianEnhancementImageFilterIUS3IF3_cast = _itkMultiScaleHessianEnhancementImageFilterPython.itkMultiScaleHessianEnhancementImageFilterIUS3IF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def multi_scale_hessian_enhancement_image_filter(*args, **kwargs):
    """Procedural interface for MultiScaleHessianEnhancementImageFilter"""
    import itk
    instance = itk.MultiScaleHessianEnhancementImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def multi_scale_hessian_enhancement_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MultiScaleHessianEnhancementImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MultiScaleHessianEnhancementImageFilter.values()[0]
    else:
        filter_object = itk.MultiScaleHessianEnhancementImageFilter

    multi_scale_hessian_enhancement_image_filter.__doc__ = filter_object.__doc__
    multi_scale_hessian_enhancement_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    multi_scale_hessian_enhancement_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MultiScaleHessianEnhancementImageFilter, itkTemplate.itkTemplate):
        multi_scale_hessian_enhancement_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        multi_scale_hessian_enhancement_image_filter.__doc__ += "\n"
        multi_scale_hessian_enhancement_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        multi_scale_hessian_enhancement_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



