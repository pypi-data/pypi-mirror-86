# We set the language to c because python isn't supported on the MacOS X and Windows nodes
# on Travis. However, the language ends up being irrelevant anyway.
language: c

compiler: gcc

# Cache can be cleared from the travis settings menu, see docs currently at
# https://docs.travis-ci.com/user/caching#Clearing-Caches
cache:
  - ccache
  - .hypothesis

notifications:
  slack:
    on_success: always
    on_failure: always
    secure: gLrQgrHNqHs0lOPsfvjlh0v8k56mJifPNpht0BX55YV0n1u5alKCrKOVcKTFNFY0gOldhwFNFq4oy3o5EaZkDx+CO71qiwwJr7ex7zT70EjHzWxEG8l2Bww9J3xVzhGgQw6tMq57HHiuOoJ07TJPvVxL+E/WZmkxRAdlzUhcab4=
    if: type = cron

os:
    - linux

# We need a full clone to make sure setuptools_scm works properly
git:
    depth: false


addons:
    apt:
        packages:
            # We include the german language pack because we use the
            # de_DE locale in some of the io.ascii tests.
            - language-pack-de
            # tzdata is included to ensure system leap seconds are up to date.
            - tzdata

env:
    global:

        # Set defaults to avoid repeating in most cases
        # By default, we run our jobs with tox,
        # but a method using 'apt' is used for a few cases.
        - SETUP_METHOD='tox'

        # The following three variables are for tox. TOXENV is a standard
        # variable that tox uses to determine the environment to run,
        # TOXARGS are arguments passed to tox, and TOXPOSARGS are arguments
        # that tox passes through to the {posargs} indicator in tox.ini.
        # The latter can be used for example to pass arguments to pytest.
        - TOXENV='test'
        - TOXARGS='-v'
        - TOXPOSARGS=''

        # The following is needed to avoid issues if e.g. Matplotlib tries
        # to open a GUI window.
        - SETUP_XVFB=True

stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Do the rest of the tests
   - name: Comprehensive tests
   - name: Final tests
   - name: Cron tests
     if: type = cron

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Also regularly try the big-endian s390 architecture, in the
        # process checking that installing dependencies with apt works,
        # and that astropy can properly use the system libraries,
        # i.e., runs properly with ASTROPY_USE_SYSTEM_ALL=1.
        - name: big-endian s390x architecture with apt
          arch: s390x
          language: c
          dist: focal
          stage: Cron tests
          env: SETUP_METHOD='apt'
               ASTROPY_USE_SYSTEM_ALL=1
          addons:
              apt:
                  packages:
                      - python3-venv  # build dependencies
                      - cython3
                      - wcslib-dev  # also pulls in libwcs7
                      - libcfitsio-dev  # also pulls in libcfitsio9
                      - liberfa1  # required dependencies
                      - python3-configobj
                      - python3-numpy
                      - python3-ply
                      - python3-pytest-astropy

        # And with an arm64 processor, again with apt for convenience.
        - name: arm64 architecture with apt
          arch: arm64
          language: c
          dist: focal
          stage: Cron tests
          env: SETUP_METHOD='apt'
               ASTROPY_USE_SYSTEM_ALL=1
          addons:
              apt:
                  packages:
                      - python3-venv
                      - cython3
                      - wcslib-dev
                      - libcfitsio-dev
                      - liberfa1
                      - python3-configobj
                      - python3-numpy
                      - python3-ply
                      - python3-pytest-astropy
                      - python3-astropy

before_install:

    # We need to use CCOMPILER otherwise Travis overwrites CC if we define it
    # in env: above.
    - if [ ! -z $CCOMPILER ]; then
        export CC=$CCOMPILER;
      fi

     # Check CC variable
    - echo "CC="$CC

    - if [[ $TOXENV == *-cov ]]; then
        export TOXPOSARGS=$TOXPOSARGS" --cov-report=xml:"$TRAVIS_BUILD_DIR"/coverage.xml";
      fi

    - echo "TOXENV="$TOXENV
    - echo "TOXARGS="$TOXARGS
    - echo "TOXPOSARGS="$TOXPOSARGS

install:
    # language: python is only available for Linux, so for OSX
    # we need to use ci-helpers to set up Python.
    - if [[ $TRAVIS_OS_NAME == osx || $TRAVIS_OS_NAME == windows ]]; then
        git clone git://github.com/astropy/ci-helpers.git;
        source ci-helpers/travis/setup_python.sh;
      fi

script:
    # for apt, doctestplus on focal is rather out of date, so get new version.
    - if [ $SETUP_METHOD == 'tox' ]; then
        pip install tox;
        tox $TOXARGS -- $TOXPOSARGS;
      else
        python3 -m venv --system-site-packages tests;
        source tests/bin/activate;
        pip3 install -e .[test];
        pip3 install -U pytest-doctestplus;
        python3 -m pytest;
      fi

after_success:
    - if [[ $TOXENV == *-cov ]]; then
        pip install codecov;
        codecov --gcov-glob "*cextern*";
      fi
