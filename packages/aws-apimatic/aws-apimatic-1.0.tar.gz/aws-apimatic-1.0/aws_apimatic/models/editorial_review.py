# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class EditorialReview(object):

    """Implementation of the 'EditorialReview' model.

    TODO: type model description here.

    Attributes:
        source (string): TODO: type description here.
        content (string): TODO: type description here.
        is_link_suppressed (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "source":'Source',
        "content":'Content',
        "is_link_suppressed":'IsLinkSuppressed'
    }

    def __init__(self,
                 source=None,
                 content=None,
                 is_link_suppressed=None):
        """Constructor for the EditorialReview class"""

        # Initialize members of the class
        self.source = source
        self.content = content
        self.is_link_suppressed = is_link_suppressed


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        source = dictionary.get('Source')
        content = dictionary.get('Content')
        is_link_suppressed = dictionary.get('IsLinkSuppressed')

        # Return an object of this model
        return cls(source,
                   content,
                   is_link_suppressed)


