# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class AlternateVersion(object):

    """Implementation of the 'AlternateVersion' model.

    TODO: type model description here.

    Attributes:
        asin (string): TODO: type description here.
        title (string): TODO: type description here.
        binding (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "asin":'ASIN',
        "title":'Title',
        "binding":'Binding'
    }

    def __init__(self,
                 asin=None,
                 title=None,
                 binding=None):
        """Constructor for the AlternateVersion class"""

        # Initialize members of the class
        self.asin = asin
        self.title = title
        self.binding = binding


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        asin = dictionary.get('ASIN')
        title = dictionary.get('Title')
        binding = dictionary.get('Binding')

        # Return an object of this model
        return cls(asin,
                   title,
                   binding)


