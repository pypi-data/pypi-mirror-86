# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import aws_apimatic.models.browse_node_lookup_request
import aws_apimatic.models.item_search_request
import aws_apimatic.models.item_lookup_request
import aws_apimatic.models.similarity_lookup_request
import aws_apimatic.models.cart_get_request
import aws_apimatic.models.cart_add_request
import aws_apimatic.models.cart_create_request
import aws_apimatic.models.cart_modify_request
import aws_apimatic.models.cart_clear_request
import aws_apimatic.models.errors

class Request(object):

    """Implementation of the 'Request' model.

    TODO: type model description here.

    Attributes:
        is_valid (string): TODO: type description here.
        browse_node_lookup_request (BrowseNodeLookupRequest): TODO: type
            description here.
        item_search_request (ItemSearchRequest): TODO: type description here.
        item_lookup_request (ItemLookupRequest): TODO: type description here.
        similarity_lookup_request (SimilarityLookupRequest): TODO: type
            description here.
        cart_get_request (CartGetRequest): TODO: type description here.
        cart_add_request (CartAddRequest): TODO: type description here.
        cart_create_request (CartCreateRequest): TODO: type description here.
        cart_modify_request (CartModifyRequest): TODO: type description here.
        cart_clear_request (CartClearRequest): TODO: type description here.
        errors (Errors): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "is_valid":'IsValid',
        "browse_node_lookup_request":'BrowseNodeLookupRequest',
        "item_search_request":'ItemSearchRequest',
        "item_lookup_request":'ItemLookupRequest',
        "similarity_lookup_request":'SimilarityLookupRequest',
        "cart_get_request":'CartGetRequest',
        "cart_add_request":'CartAddRequest',
        "cart_create_request":'CartCreateRequest',
        "cart_modify_request":'CartModifyRequest',
        "cart_clear_request":'CartClearRequest',
        "errors":'Errors'
    }

    def __init__(self,
                 is_valid=None,
                 browse_node_lookup_request=None,
                 item_search_request=None,
                 item_lookup_request=None,
                 similarity_lookup_request=None,
                 cart_get_request=None,
                 cart_add_request=None,
                 cart_create_request=None,
                 cart_modify_request=None,
                 cart_clear_request=None,
                 errors=None):
        """Constructor for the Request class"""

        # Initialize members of the class
        self.is_valid = is_valid
        self.browse_node_lookup_request = browse_node_lookup_request
        self.item_search_request = item_search_request
        self.item_lookup_request = item_lookup_request
        self.similarity_lookup_request = similarity_lookup_request
        self.cart_get_request = cart_get_request
        self.cart_add_request = cart_add_request
        self.cart_create_request = cart_create_request
        self.cart_modify_request = cart_modify_request
        self.cart_clear_request = cart_clear_request
        self.errors = errors


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        is_valid = dictionary.get('IsValid')
        browse_node_lookup_request = aws_apimatic.models.browse_node_lookup_request.BrowseNodeLookupRequest.from_dictionary(dictionary.get('BrowseNodeLookupRequest')) if dictionary.get('BrowseNodeLookupRequest') else None
        item_search_request = aws_apimatic.models.item_search_request.ItemSearchRequest.from_dictionary(dictionary.get('ItemSearchRequest')) if dictionary.get('ItemSearchRequest') else None
        item_lookup_request = aws_apimatic.models.item_lookup_request.ItemLookupRequest.from_dictionary(dictionary.get('ItemLookupRequest')) if dictionary.get('ItemLookupRequest') else None
        similarity_lookup_request = aws_apimatic.models.similarity_lookup_request.SimilarityLookupRequest.from_dictionary(dictionary.get('SimilarityLookupRequest')) if dictionary.get('SimilarityLookupRequest') else None
        cart_get_request = aws_apimatic.models.cart_get_request.CartGetRequest.from_dictionary(dictionary.get('CartGetRequest')) if dictionary.get('CartGetRequest') else None
        cart_add_request = aws_apimatic.models.cart_add_request.CartAddRequest.from_dictionary(dictionary.get('CartAddRequest')) if dictionary.get('CartAddRequest') else None
        cart_create_request = aws_apimatic.models.cart_create_request.CartCreateRequest.from_dictionary(dictionary.get('CartCreateRequest')) if dictionary.get('CartCreateRequest') else None
        cart_modify_request = aws_apimatic.models.cart_modify_request.CartModifyRequest.from_dictionary(dictionary.get('CartModifyRequest')) if dictionary.get('CartModifyRequest') else None
        cart_clear_request = aws_apimatic.models.cart_clear_request.CartClearRequest.from_dictionary(dictionary.get('CartClearRequest')) if dictionary.get('CartClearRequest') else None
        errors = aws_apimatic.models.errors.Errors.from_dictionary(dictionary.get('Errors')) if dictionary.get('Errors') else None

        # Return an object of this model
        return cls(is_valid,
                   browse_node_lookup_request,
                   item_search_request,
                   item_lookup_request,
                   similarity_lookup_request,
                   cart_get_request,
                   cart_add_request,
                   cart_create_request,
                   cart_modify_request,
                   cart_clear_request,
                   errors)


