# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Summary(object):

    """Implementation of the 'Summary' model.

    TODO: type model description here.

    Attributes:
        promotion_id (string): TODO: type description here.
        category (string): TODO: type description here.
        start_date (string): TODO: type description here.
        end_date (string): TODO: type description here.
        eligibility_requirement_description (string): TODO: type description
            here.
        benefit_description (string): TODO: type description here.
        terms_and_conditions (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "promotion_id":'PromotionId',
        "category":'Category',
        "start_date":'StartDate',
        "end_date":'EndDate',
        "eligibility_requirement_description":'EligibilityRequirementDescription',
        "benefit_description":'BenefitDescription',
        "terms_and_conditions":'TermsAndConditions'
    }

    def __init__(self,
                 promotion_id=None,
                 category=None,
                 start_date=None,
                 end_date=None,
                 eligibility_requirement_description=None,
                 benefit_description=None,
                 terms_and_conditions=None):
        """Constructor for the Summary class"""

        # Initialize members of the class
        self.promotion_id = promotion_id
        self.category = category
        self.start_date = start_date
        self.end_date = end_date
        self.eligibility_requirement_description = eligibility_requirement_description
        self.benefit_description = benefit_description
        self.terms_and_conditions = terms_and_conditions


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        promotion_id = dictionary.get('PromotionId')
        category = dictionary.get('Category')
        start_date = dictionary.get('StartDate')
        end_date = dictionary.get('EndDate')
        eligibility_requirement_description = dictionary.get('EligibilityRequirementDescription')
        benefit_description = dictionary.get('BenefitDescription')
        terms_and_conditions = dictionary.get('TermsAndConditions')

        # Return an object of this model
        return cls(promotion_id,
                   category,
                   start_date,
                   end_date,
                   eligibility_requirement_description,
                   benefit_description,
                   terms_and_conditions)


