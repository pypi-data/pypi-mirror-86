# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from aws_apimatic.api_helper import APIHelper
from aws_apimatic.configuration import Configuration
from aws_apimatic.controllers.base_controller import BaseController
from aws_apimatic.models.item_search_response_msg import ItemSearchResponseMsg

class AWSECommerceServiceBindingController(BaseController):

    """A Controller to access Endpoints in the aws_apimatic API."""


    def create_item_search(self,
                           body):
        """Does a POST request to /ItemSearch.

        TODO: type endpoint description here.

        Args:
            body (ItemSearchRequestMsg): TODO: type description here. Example:
                
        Returns:
            ItemSearchResponseMsg: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/ItemSearch'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json',
            'content-type': 'application/json; charset=utf-8'
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, headers=_headers, parameters=APIHelper.json_serialize(body))
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, ItemSearchResponseMsg.from_dictionary)
