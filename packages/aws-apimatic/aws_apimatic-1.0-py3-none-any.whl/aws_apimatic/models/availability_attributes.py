# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class AvailabilityAttributes(object):

    """Implementation of the 'AvailabilityAttributes' model.

    TODO: type model description here.

    Attributes:
        availability_type (string): TODO: type description here.
        is_preorder (bool): TODO: type description here.
        minimum_hours (int): TODO: type description here.
        maximum_hours (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "availability_type":'AvailabilityType',
        "is_preorder":'IsPreorder',
        "minimum_hours":'MinimumHours',
        "maximum_hours":'MaximumHours'
    }

    def __init__(self,
                 availability_type=None,
                 is_preorder=None,
                 minimum_hours=None,
                 maximum_hours=None):
        """Constructor for the AvailabilityAttributes class"""

        # Initialize members of the class
        self.availability_type = availability_type
        self.is_preorder = is_preorder
        self.minimum_hours = minimum_hours
        self.maximum_hours = maximum_hours


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        availability_type = dictionary.get('AvailabilityType')
        is_preorder = dictionary.get('IsPreorder')
        minimum_hours = dictionary.get('MinimumHours')
        maximum_hours = dictionary.get('MaximumHours')

        # Return an object of this model
        return cls(availability_type,
                   is_preorder,
                   minimum_hours,
                   maximum_hours)


