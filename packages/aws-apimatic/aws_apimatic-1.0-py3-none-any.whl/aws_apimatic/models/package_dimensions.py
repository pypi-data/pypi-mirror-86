# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import aws_apimatic.models.decimal_with_units

class PackageDimensions(object):

    """Implementation of the 'PackageDimensions' model.

    TODO: type model description here.

    Attributes:
        height (DecimalWithUnits): TODO: type description here.
        length (DecimalWithUnits): TODO: type description here.
        weight (DecimalWithUnits): TODO: type description here.
        width (DecimalWithUnits): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "height":'Height',
        "length":'Length',
        "weight":'Weight',
        "width":'Width'
    }

    def __init__(self,
                 height=None,
                 length=None,
                 weight=None,
                 width=None):
        """Constructor for the PackageDimensions class"""

        # Initialize members of the class
        self.height = height
        self.length = length
        self.weight = weight
        self.width = width


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        height = aws_apimatic.models.decimal_with_units.DecimalWithUnits.from_dictionary(dictionary.get('Height')) if dictionary.get('Height') else None
        length = aws_apimatic.models.decimal_with_units.DecimalWithUnits.from_dictionary(dictionary.get('Length')) if dictionary.get('Length') else None
        weight = aws_apimatic.models.decimal_with_units.DecimalWithUnits.from_dictionary(dictionary.get('Weight')) if dictionary.get('Weight') else None
        width = aws_apimatic.models.decimal_with_units.DecimalWithUnits.from_dictionary(dictionary.get('Width')) if dictionary.get('Width') else None

        # Return an object of this model
        return cls(height,
                   length,
                   weight,
                   width)


