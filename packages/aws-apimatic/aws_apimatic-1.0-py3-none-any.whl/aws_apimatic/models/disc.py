# -*- coding: utf-8 -*-

"""
    aws_apimatic

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import aws_apimatic.models.track

class Disc(object):

    """Implementation of the 'Disc' model.

    TODO: type model description here.

    Attributes:
        number (int): TODO: type description here.
        track (list of Track): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "number":'Number',
        "track":'Track'
    }

    def __init__(self,
                 number=None,
                 track=None):
        """Constructor for the Disc class"""

        # Initialize members of the class
        self.number = number
        self.track = track


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        number = dictionary.get('Number')
        track = None
        if dictionary.get('Track') != None:
            track = list()
            for structure in dictionary.get('Track'):
                track.append(aws_apimatic.models.track.Track.from_dictionary(structure))

        # Return an object of this model
        return cls(number,
                   track)


