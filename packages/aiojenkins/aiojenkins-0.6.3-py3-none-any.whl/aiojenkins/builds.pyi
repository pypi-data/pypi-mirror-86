from .exceptions import JenkinsNotFoundError as JenkinsNotFoundError
from .utils import parse_build_url as parse_build_url
from typing import Any, Optional, Tuple

class Builds:
    jenkins: Any = ...
    def __init__(self, jenkins: Any) -> None: ...
    @staticmethod
    def parse_url(build_url: str) -> Tuple[str, int]: ...
    async def get_all(self, name: str) -> list: ...
    async def get_info(self, name: str, build_id: int) -> dict: ...
    async def get_url_info(self, build_url: str) -> dict: ...
    async def get_output(self, name: str, build_id: int) -> str: ...
    async def is_exists(self, name: str, build_id: int) -> bool: ...
    async def get_queue_id_info(self, queue_id: int) -> dict: ...
    async def start(self, name: str, parameters: Optional[dict]=..., delay: int=...) -> Optional[int]: ...
    async def stop(self, name: str, build_id: int) -> None: ...
    async def delete(self, name: str, build_id: int) -> None: ...
