<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

<metal:javascript_head_slot fill-slot="javascript_head_slot">
</metal:javascript_head_slot>

<body>
<metal:content-core fill-slot="content-core">
<metal:block define-macro="content-core">
<metal:block use-macro="context/standard_view/macros/content-core">
<metal:entries fill-slot="entries">
  <tal:def tal:define="results python: view.getResults(content, with_sticky=False);
                       has_category python: view.see_categories(content);
                       show_image python: view.show_image(content);
                       show_carousel python: view.show_carousel(content);
                       config nocall:context/@@slick_config_view">
  <div class="titre-slider"
       tal:define="hide_title python: getattr(context, 'hide_title', False);"
       tal:condition="not: hide_title">
    <a tal:omit-tag='python: view.hide_see_all_link(context)'
       href=""
       tal:attributes="href string:${context/absolute_url}">
      <h2 tal:content="content/Title"></h2>
    </a>
  </div>
  <div id=""
       class="slider slick"
       data-slick=''
       tal:define="bloc_class python: view.get_block_class(content)"
       tal:attributes="id string:slider-${context/id};
                       data-slick python:config(context)">
    <tal:entry tal:repeat="item results">
    <tal:block tal:define="item_url item/getURL;
                           slider_scale python: getattr(context, 'slider_image_scale', 'slider');
                           item_id item/getId;
                           item_description item/Description;
                           item_type item/Type;
                           item_start python:(item.start) if item_type == 'Event' else None;
                           item_end python:(item.end) if item_type == 'Event' else None;
                           item_modified item/ModificationDate;
                           item_sametime python: item_start == item_end;
                           item_samedate python: (item_end - item_start &lt; 1) if item_type == 'Event' else False">

      <div tal:define="obj item/getObject;
                    scale_func obj/@@images;
                    scaled_image python: getattr(obj, 'image', False) and scale_func.scale('image', scale=slider_scale)">

        <a href="#"
           class="linkimg"
           tal:condition="python: show_image and scaled_image and item_type != 'Media Link'"
           tal:attributes="href item_url">

          <img tal:replace="structure python: scaled_image.tag(css_class='flexsliderimg')" />

        </a>


        <a href="#"
           class="linkimg"
           tal:condition="python: item_type == 'Media Link'"
           tal:define="video python: view.get_video(item)"
           tal:attributes="href item_url">
             <span tal:content="item/remoteUrl"></span>
             <div tal:content='structure video' />
        </a>
        <div class="flex-caption">
          <tal:block tal:condition="python: view.see_categories(content) or view.see_start_end_date(item, content) ">
            <div class="flex-category-date">
              <tal:loop tal:define="categories python: view.get_categories(content, obj, limit=1)"
                        tal:condition="categories">
                <div class="indexview-categories">
                  <a tal:attributes="href item_url"
                     tal:content="categories" />
                </div>
              </tal:loop>
              <a tal:attributes="href item_url">
                <span class="documentByLine"
                    tal:condition="python: view.see_start_end_date(item, content)"
                    tal:define="event python: item.getObject()">
                <tal:one_day condition="python: view.is_one_day(event)">
                  <tal:if condition="python: content.show_day_and_month">
                    <div class="day-month">
                      <div tal:content="python: (view.get_event_dates(item)).get('start')"></div>
                    </div>
                  </tal:if>
                  <tal:else condition="python: not content.show_day_and_month">
                    <span i18n:translate="evenement_le">le</span>
                    <span tal:content="python: view.toLocalizedTime(item.start, long_format=0, event=item)" />
                    <tal:withHours condition="python: view.is_with_hours(event)">
                      <tal:openEnd condition="python: view.is_open_end(event)">
                        <span i18n:translate="evenement_a_lheure">à</span>
                        <span tal:content="python: view.toLocalizedTime(item.start, long_format=1, event=item)[11:]" />
                      </tal:openEnd>
                      <tal:fixedEnd condition="python: not view.is_open_end(event)">
                        <span i18n:translate="evenement_de">de</span>
                        <span tal:content="python: view.toLocalizedTime(item.start, long_format=1, event=item)[11:]" />
                        <span i18n:translate="evenement_a">à</span>
                        <span tal:content="python: view.toLocalizedTime(item.end, long_format=1, event=item, startend='end')[11:]" />
                      </tal:fixedEnd>
                    </tal:withHours>
                  </tal:else>
                </tal:one_day>
                <tal:more_days condition="python: not view.is_one_day(event)">
                  <tal:if condition="python: content.show_day_and_month">
                    <div class="day-month">
                      <div tal:content="python: (view.get_event_dates(item)).get('start')"></div>
                      <div tal:content="python: (view.get_event_dates(item)).get('end')"></div>
                    </div>
                  </tal:if>
                  <tal:else condition="python: not content.show_day_and_month">
                    <span i18n:translate="evenement_du">du</span>
                    <span tal:content="python: view.toLocalizedTime(item.start, long_format=0, event=item)" />
                    <span i18n:translate="evenement_au">au</span>
                    <span tal:content="python: view.toLocalizedTime(item.end, long_format=0, event=item, startend='end')" />
                  </tal:else>
                </tal:more_days>
               </span>
              </a>
            </div>
          </tal:block>
          <div class="flex-caption-inner">
              <div class="publication-date"
                tal:condition="python: not view.hide_date(item, content)"
                tal:content="python: view.toLocalizedTime(item.effective)">
                </div>
              <h2>
                  <a tal:attributes="href item_url"
                     tal:content="item/Title">Content title</a>
             </h2>
             <p> <a tal:attributes="href item_url"
                    tal:content="item_description">
                   Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,
                   sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.
                   Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit
                   lobortis nisl ut aliquip ex ea commodo consequat.</a>
              </p>
          </div>
        </div>
        <div class="read-next-link">
             <a href=""
                tal:attributes="href item_url"
                i18n:translate="">Lire la suite</a>
        </div>
      </div>
    </tal:block>
    </tal:entry>
  </div>
  <div>
      <a tal:condition='python: not view.hide_see_all_link(context)'
         href=""
         class="voir-tout"
         tal:attributes="href string:${context/absolute_url}">
          <span tal:replace='python: view.see_all(context)' />
      </a>
  </div>
  </tal:def>
</metal:entries>
</metal:block>
</metal:block>
</metal:content-core>
</body>
</html>
